<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>101. 对称二叉树</title>
      <link href="/2020/09/11/gdtian/"/>
      <url>/2020/09/11/gdtian/</url>
      
        <content type="html"><![CDATA[<p><strong>给定一个二叉树，检查它是否是镜像对称的。</strong><br>例如，二叉树 <code>[1,2,2,3,4,4,3]</code> 是对称的。<br>    1<br>   / <br>  2   2<br> / \ / <br>3  4 4  3<br>但是下面这个 <code>[1,2,2,null,3,null,3]</code> 则不是镜像对称的:<br>    1<br>   / <br>  2   2<br>   \   <br>   3    3<br><strong>进阶：</strong><br><strong>你可以运用递归和迭代两种方法解决这个问题吗？</strong></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * Definition for a binary tree node. * public class TreeNode &amp;#123; *     int val; *     TreeNode left; *     TreeNode right; *     TreeNode(int x) &amp;#123; val = x; &amp;#125; * &amp;#125; */</span><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//借鉴org</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isSymmetric</span><span class="token punctuation">(</span>TreeNode root<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token operator">==</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        TreeNode left <span class="token operator">=</span>root<span class="token punctuation">.</span>left<span class="token punctuation">;</span>        TreeNode right<span class="token operator">=</span>root<span class="token punctuation">.</span>right<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">helper</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">helper</span><span class="token punctuation">(</span>TreeNode left<span class="token punctuation">,</span>TreeNode right<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>left<span class="token operator">==</span>null<span class="token operator">&amp;&amp;</span>right<span class="token operator">==</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>left<span class="token operator">==</span>null<span class="token operator">||</span>right<span class="token operator">==</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span>val<span class="token operator">==</span>right<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token comment" spellcheck="true">//(left.left.val==right.right.val)&amp;&amp; (left.right.val==right.left.val)</span>                   <span class="token comment" spellcheck="true">//&amp;&amp;</span>                <span class="token function">helper</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span>left<span class="token punctuation">,</span>right<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">helper</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span>right<span class="token punctuation">,</span>right<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-xml"><code class="language-xml">假设树上一共 n 个节点。时间复杂度：这里遍历了这棵树，渐进时间复杂度为 O(n)空间复杂度：这里的空间复杂度和递归使用的栈空间有关，这里递归层数不超过 n，故渐进空间复杂度为 O(n)。</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>二叉树的最大深度</title>
      <link href="/2020/09/11/yhcvpb/"/>
      <url>/2020/09/11/yhcvpb/</url>
      
        <content type="html"><![CDATA[<p><strong>二叉树的最大深度</strong><br>给定一个二叉树，找出其最大深度。<br>二叉树的深度为根节点到最远叶子节点的最长路径上的节点数。<br>说明:  叶子节点是指没有子节点的节点。<br>示例：<br>给定二叉树 [3,9,20,null,null,15,7]，<br> **  3**<br>**   / **<br>**  9  20**<br>**    /  **<br>**   15   7**<br>返回它的最大深度  3 。</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * Definition for a binary tree node. * public class TreeNode &amp;#123; *     int val; *     TreeNode left; *     TreeNode right; *     TreeNode(int x) &amp;#123; val = x; &amp;#125; * &amp;#125; */</span><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxDepth</span><span class="token punctuation">(</span>TreeNode root<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token operator">==</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">maxDepth</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">maxDepth</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>234. 回文链表</title>
      <link href="/2020/09/11/rk8asi/"/>
      <url>/2020/09/11/rk8asi/</url>
      
        <content type="html"><![CDATA[<p>回文链表<br><strong>请判断一个链表是否为回文链表。</strong><br>示例 1:<br>输入: 1-&gt;2<br>输出: false<br>示例 2:<br>输入: 1-&gt;2-&gt;2-&gt;1<br>输出: true<br>进阶：<br><strong>你能否用  O(n) 时间复杂度和 O(1) 空间复杂度解决此题？</strong><br>解析：见 org 第三种解法<br>作者：力扣 (LeetCode)<br>链接：<a href="https://leetcode-cn.com/leetbook/read/top-interview-questions-easy/xnv1oc/">https://leetcode-cn.com/leetbook/read/top-interview-questions-easy/xnv1oc/</a><br>来源：力扣（LeetCode）<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * Definition for singly-linked list. * public class ListNode &amp;#123; *     int val; *     ListNode next; *     ListNode(int x) &amp;#123; val = x; &amp;#125; * &amp;#125; */</span><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// org 时间空间复杂度都是 O(n)</span>    <span class="token comment" spellcheck="true">// equals [-129,-129]</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPalindrome</span><span class="token punctuation">(</span>ListNode head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        ArrayList<span class="token operator">&lt;</span>Integer<span class="token operator">></span> res    <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>Integer<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ListNode cur <span class="token operator">=</span> head<span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>cur <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>            cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> front<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> tail <span class="token operator">=</span>res<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>front<span class="token operator">&lt;=</span>tail<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>res<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>front<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>tail<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            front<span class="token operator">++</span><span class="token punctuation">;</span>            tail<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// //第一次 提交 针对奇数个元素 不成立。</span>    <span class="token comment" spellcheck="true">// public boolean isPalindrome(ListNode head) &amp;#123;</span>    <span class="token comment" spellcheck="true">//     if(head==null)&amp;#123;</span>    <span class="token comment" spellcheck="true">//         return false;</span>    <span class="token comment" spellcheck="true">//     &amp;#125;</span>    <span class="token comment" spellcheck="true">//     Stack&lt;Integer> res    = new Stack&lt;Integer>();</span>    <span class="token comment" spellcheck="true">//     ListNode cur = head;</span>    <span class="token comment" spellcheck="true">//     while(cur!=null)&amp;#123;</span>    <span class="token comment" spellcheck="true">//         if(!res.isEmpty()&amp;&amp;res.peek() == cur.val)&amp;#123;</span>    <span class="token comment" spellcheck="true">//             res.pop();</span>    <span class="token comment" spellcheck="true">//         &amp;#125;</span>    <span class="token comment" spellcheck="true">//         else&amp;#123;</span>    <span class="token comment" spellcheck="true">//             res.add(cur.val);</span>    <span class="token comment" spellcheck="true">//         &amp;#125;</span>    <span class="token comment" spellcheck="true">//         cur = cur.next;</span>    <span class="token comment" spellcheck="true">//     &amp;#125;</span>    <span class="token comment" spellcheck="true">//     return res.isEmpty();</span>    <span class="token comment" spellcheck="true">// &amp;#125;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>206. 反转链表</title>
      <link href="/2020/09/11/gkr4ov/"/>
      <url>/2020/09/11/gkr4ov/</url>
      
        <content type="html"><![CDATA[<p><strong>反转一个单链表。</strong></p><p>示例:<br>输入: 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL<br>输出: 5-&gt;4-&gt;3-&gt;2-&gt;1-&gt;NULL<br><strong>进阶:</strong><br>你可以迭代或递归地反转链表。你能否用两种方法解决这道题？</p><p>作者：力扣 (LeetCode)<br>链接：<a href="https://leetcode-cn.com/leetbook/read/top-interview-questions-easy/xnnhm6/">https://leetcode-cn.com/leetbook/read/top-interview-questions-easy/xnnhm6/</a><br>来源：力扣（LeetCode）<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * Definition for singly-linked list. * public class ListNode &amp;#123; *     int val; *     ListNode next; *     ListNode(int x) &amp;#123; val = x; &amp;#125; * &amp;#125; */</span><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//借鉴org</span>    <span class="token keyword">public</span> ListNode <span class="token function">reverseList1</span><span class="token punctuation">(</span>ListNode head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>head <span class="token operator">==</span> null<span class="token operator">||</span>head<span class="token punctuation">.</span>next<span class="token operator">==</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> head<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        ListNode p <span class="token operator">=</span> <span class="token function">reverseList</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>        head<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next <span class="token operator">=</span>head<span class="token punctuation">;</span>        head<span class="token punctuation">.</span>next<span class="token operator">=</span>null<span class="token punctuation">;</span>        <span class="token keyword">return</span> p<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//org</span>    <span class="token keyword">public</span> ListNode <span class="token function">reverseList</span><span class="token punctuation">(</span>ListNode head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>head <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        ListNode pre<span class="token operator">=</span>null<span class="token punctuation">;</span>        ListNode cur<span class="token operator">=</span>head<span class="token punctuation">;</span>        ListNode next<span class="token operator">=</span>cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// pre.next=null;</span>        <span class="token comment" spellcheck="true">// cur.next=pre;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>cur <span class="token operator">!=</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;&amp; next !=null</span>            <span class="token comment" spellcheck="true">// pre.next=pre;</span>            next<span class="token operator">=</span>cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>            cur<span class="token punctuation">.</span>next<span class="token operator">=</span>pre<span class="token punctuation">;</span>            pre <span class="token operator">=</span>cur<span class="token punctuation">;</span>            cur <span class="token operator">=</span>next<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//next=next.next;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> pre<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>21. 合并两个有序链表</title>
      <link href="/2020/09/11/sp63al/"/>
      <url>/2020/09/11/sp63al/</url>
      
        <content type="html"><![CDATA[<p>合并两个有序链表<br>将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 <br>示例：<br>输入：1-&gt;2-&gt;4, 1-&gt;3-&gt;4<br>输出：1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4</p><p>作者：力扣 (LeetCode)<br>链接：<a href="https://leetcode-cn.com/leetbook/read/top-interview-questions-easy/xnnbp2/">https://leetcode-cn.com/leetbook/read/top-interview-questions-easy/xnnbp2/</a><br>来源：力扣（LeetCode）<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * Definition for singly-linked list. * public class ListNode &amp;#123; *     int val; *     ListNode next; *     ListNode() &amp;#123;&amp;#125; *     ListNode(int val) &amp;#123; this.val = val; &amp;#125; *     ListNode(int val, ListNode next) &amp;#123; this.val = val; this.next = next; &amp;#125; * &amp;#125; */</span><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//pass</span>    <span class="token keyword">public</span> ListNode <span class="token function">mergeTwoLists</span><span class="token punctuation">(</span>ListNode l1<span class="token punctuation">,</span> ListNode l2<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        ListNode root <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>l1<span class="token operator">==</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> l2<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>l2<span class="token operator">==</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> l1<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>l1<span class="token punctuation">.</span>val<span class="token operator">&lt;=</span>l2<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            root<span class="token punctuation">.</span>val<span class="token operator">=</span>l1<span class="token punctuation">.</span>val<span class="token punctuation">;</span>            root<span class="token punctuation">.</span>next<span class="token operator">=</span><span class="token function">mergeTwoLists</span><span class="token punctuation">(</span>l1<span class="token punctuation">.</span>next<span class="token punctuation">,</span>l2<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> root<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>l1<span class="token punctuation">.</span>val<span class="token operator">></span>l2<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            root<span class="token punctuation">.</span>val<span class="token operator">=</span>l2<span class="token punctuation">.</span>val<span class="token punctuation">;</span>            root<span class="token punctuation">.</span>next<span class="token operator">=</span><span class="token function">mergeTwoLists</span><span class="token punctuation">(</span>l1<span class="token punctuation">,</span>l2<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> root<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> root<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>237. 删除链表中的节点</title>
      <link href="/2020/09/11/vr783s/"/>
      <url>/2020/09/11/vr783s/</url>
      
        <content type="html"><![CDATA[<p>删除链表中的节点<br>请编写一个函数，使其可以删除某个链表中给定的（非末尾）节点。传入函数的唯一参数为 要被删除的节点 。<br>现有一个链表 – head = [4,5,1,9]，它可以表示为:<br>示例 1：<br>输入：head = [4,5,1,9], node = 5<br>输出：[4,1,9]<br>解释：给定你链表中值为  5  的第二个节点，那么在调用了你的函数之后，该链表应变为 4 -&gt; 1 -&gt; 9.<br>示例 2：<br>输入：head = [4,5,1,9], node = 1<br>输出：[4,5,9]<br>解释：给定你链表中值为  1  的第三个节点，那么在调用了你的函数之后，该链表应变为 4 -&gt; 5 -&gt; 9.<br>提示：<br>链表至少包含两个节点。<br>链表中所有节点的值都是唯一的。<br>给定的节点为非末尾节点并且一定是链表中的一个有效节点。<br>不要从你的函数中返回任何结果。</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * Definition for singly-linked list. * public class ListNode &amp;#123; *     int val; *     ListNode next; *     ListNode(int x) &amp;#123; val = x; &amp;#125; * &amp;#125; */</span><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//org</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteNode</span><span class="token punctuation">(</span>ListNode node<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            node<span class="token punctuation">.</span>val <span class="token operator">=</span>node<span class="token punctuation">.</span>next<span class="token punctuation">.</span>val<span class="token punctuation">;</span>            node<span class="token punctuation">.</span>next<span class="token operator">=</span>node<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>算法-todo</title>
      <link href="/2020/09/11/gklcy5/"/>
      <url>/2020/09/11/gklcy5/</url>
      
        <content type="html"><![CDATA[<p><a href="https://leetcode-cn.com/leetbook/detail/top-interview-questions-medium/">https://leetcode-cn.com/leetbook/detail/top-interview-questions-medium/</a></p><p><a href="https://leetcode-cn.com/leetbook/detail/top-interview-questions-hard/">https://leetcode-cn.com/leetbook/detail/top-interview-questions-hard/</a></p><p><a href="https://leetcode-cn.com/leetbook/detail/top-interview-questions-easy/">https://leetcode-cn.com/leetbook/detail/top-interview-questions-easy/</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>240. 搜索二维矩阵 II</title>
      <link href="/2020/09/11/htcng7/"/>
      <url>/2020/09/11/htcng7/</url>
      
        <content type="html"><![CDATA[<p>编写一个高效的算法来搜索  m x n  矩阵 matrix 中的一个目标值 target。该矩阵具有以下特性：<br>每行的元素从左到右升序排列。<br>每列的元素从上到下升序排列。<br>示例:<br>现有矩阵 matrix 如下：<br>[<br> [1,   4,  7, 11, 15],<br> [2,   5,  8, 12, 19],<br> [3,   6,  9, 16, 22],<br> [10, 13, 14, 17, 24],<br> [18, 21, 23, 26, 30]<br>]<br>给定 target = 5，返回  true。<br>给定  target = 20，返回  false。</p><hr><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 借鉴了org 但是又不一样</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">searchMatrix</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> matrix<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// int row = matrix.length-1;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>matrix<span class="token operator">==</span>null<span class="token operator">||</span>matrix<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> row <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> col <span class="token operator">=</span> matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>row <span class="token operator">&lt;=</span>matrix<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> col<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>target<span class="token operator">></span>matrix<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    row<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>target<span class="token operator">&lt;</span> matrix<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    col<span class="token operator">--</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//找到了 就没有必要col——了</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>88. 合并两个有序数组</title>
      <link href="/2020/09/11/szqy8n/"/>
      <url>/2020/09/11/szqy8n/</url>
      
        <content type="html"><![CDATA[<p><a href="https://leetcode-cn.com/leetbook/read/top-interview-questions/xmi2l7/">https://leetcode-cn.com/leetbook/read/top-interview-questions/xmi2l7/</a><br><a href="https://leetcode-cn.com/leetbook/read/top-interview-questions/xmi2l7/">https://leetcode-cn.com/leetbook/read/top-interview-questions/xmi2l7/</a><br><strong>给你两个有序整数数组  nums1 和 nums2，请你将 nums2 合并到  nums1  中，使 nums1 成为一个有序数组。</strong><br>说明:<br>初始化  nums1 和 nums2 的元素数量分别为  m 和 n 。<br>你可以假设  nums1  有足够的空间（空间大小大于或等于  m + n）来保存 nums2 中的元素。<br>示例 1:<br>输入:<br>nums1 = [1,2,3,0,0,0], m = 3<br>nums2 = [2,5,6],       n = 3<br>输出: [1,2,2,3,5,6]<br>示例 2:<br>输入:<br>[1,2,3,0,0,0,0]<br>3<br>[2,5,6]<br>3<br>输出:<br>[1,2,2,3,5,6,0]</p><hr><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//借鉴了org</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums1<span class="token punctuation">,</span> <span class="token keyword">int</span> m<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums2<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> p1<span class="token operator">=</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> p2<span class="token operator">=</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//尾插</span>        <span class="token keyword">int</span> p <span class="token operator">=</span>m<span class="token operator">+</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>p1<span class="token operator">>=</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>p2<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            nums1<span class="token punctuation">[</span>p<span class="token operator">--</span><span class="token punctuation">]</span><span class="token operator">=</span>nums1<span class="token punctuation">[</span>p1<span class="token punctuation">]</span><span class="token operator">></span>nums2<span class="token punctuation">[</span>p2<span class="token punctuation">]</span><span class="token operator">?</span>nums1<span class="token punctuation">[</span>p1<span class="token operator">--</span><span class="token punctuation">]</span><span class="token operator">:</span>nums2<span class="token punctuation">[</span>p2<span class="token operator">--</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//把nums2 剩余的元素复制过去</span>        System<span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>nums2<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>nums1<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>p2<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">arraycopy</span><span class="token punctuation">(</span>Object src<span class="token punctuation">,</span>  <span class="token keyword">int</span>  srcPos<span class="token punctuation">,</span>                                    Object dest<span class="token punctuation">,</span> <span class="token keyword">int</span> destPos<span class="token punctuation">,</span>                                    <span class="token keyword">int</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>思维导图</title>
      <link href="/2020/09/07/yogcmu/"/>
      <url>/2020/09/07/yogcmu/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.processon.com/i/5d9497efe4b03d4e28a6a0b2">https://www.processon.com/i/5d9497efe4b03d4e28a6a0b2</a><br><a href="https://www.processon.com/i/5d9497efe4b03d4e28a6a0b2">https://www.processon.com/i/5d9497efe4b03d4e28a6a0b2</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>雷军与周鸿祎的江湖往事</title>
      <link href="/2020/09/07/sxm775/"/>
      <url>/2020/09/07/sxm775/</url>
      
        <content type="html"><![CDATA[<p>雷军与周鸿祎的江湖往事<br>2019-09-22 15:15<br><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/282505/1599488142700-313e04fe-7d85-45c1-8c04-bb4ea8a2a69f.jpeg#align=left&display=inline&height=360&margin=%5Bobject%20Object%5D&originHeight=360&originWidth=640&size=0&status=done&style=none&width=640"><br>“湖北第一聪明的当属陈一舟，雷军第二，我第三。”<br>周鸿祎曾经这么评价自己和两个老乡，三个人都很成功，赚钱能力都强，人也非常聪明，而从事业成就来看，老大发财早却落后了，老二公司成了世界 500 强，老三则显得很不服气。<br>一开始，周鸿祎对雷军是有些仰视的，雷军成明早，年纪轻轻就成了金山软件的总经理，是江湖上的风云人物，周鸿祎那时候还在方正上班，他说雷军是人中龙凤：<br>“在我们这一拨人里，他出道的时候……没准儿陈天桥还在学校呢，我也刚毕业参加工作。按世俗的标准，他更早获得了社会的认可。实话说，从江湖辈分来说，他比我们(要高)，他应该可以赶上算求伯君那一代，和杨元庆，和(当时)中关村的这些人是齐名的，我们互联网这一拨人只能算第二拨。”<br>雷军也自认是资历老，是“爷爷辈”的一批互联网人。而按照一般的剧情，雷军最喜欢收小弟，周鸿祎又是才能出众，本来，周鸿祎可以成为雷军“兄弟”中的一员。但内心充满骄傲的两个强人似乎是注定走不到一起的。<br><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/282505/1599488142703-f2659573-c86e-4b58-a0ca-7f0a5c30900b.jpeg#align=left&display=inline&height=346&margin=%5Bobject%20Object%5D&originHeight=346&originWidth=640&size=0&status=done&style=none&width=640"><br>周鸿祎似乎永远都比雷军慢一步  <br>1969 年，雷军出生于湖北仙桃市。1970 年，周鸿祎出生于仙桃市 100 多公里外的黄冈（后随父母迁居河南）。1987 年雷军考入武汉大学的计算机系，1988 年周鸿祎考上了西安交大的计算机专业。后来参加工作，雷军名声鹊起，周鸿祎还默默无闻，再后来，雷军做小米，周鸿祎也做了 360 手机。<br>雷军在上大学时候就尝试做生意、创业了，而周鸿祎在学校帮人打架，头上被啤酒瓶砸，腰被扎破。后来周鸿祎说，在自己被打的时候，他帮着出头的老乡、同学却袖手旁观，这个经历对他此后的价值观影响深远。<br>毕业后，雷军和周鸿祎都去了北京，雷军被求伯君慧眼赏识，完成了从技术人才到管理人才的跨越。周鸿祎则在方正公司崭露头角，3 年时间从程序员干到了部门经理。<br>那时候方正有个美女胡欢，据说在快要嫁人的时候，被周鸿祎在 BBS 上聊天泡成了自己老婆，哎呀，真别说互联网早期的女网友质量真高啊，咳咳，这个话题打住。<br>胡欢在公司有个闺蜜叫张彤，有天张彤喊胡欢去家里吃饭，介绍自己老公叫雷军，老乡见老乡，气氛很友好，小周还下厨做了两个家乡菜。嗯，从此湖北第二聪明和第三聪明就接上头了，成了朋友。后来，小周在方正做飞扬项目，他心里很得意，就拿着去雷军那里显摆，雷军不屑：“你这是在马桶上绣花，绣得再漂亮，还是个马桶”。<br>雷军经常开车带周鸿祎出去玩，有次周鸿祎在车上批评金山的“盘古”做得太烂，他说的高兴，却发现雷军转头看着车窗一言不发，车里充满了尴尬和冷意，周鸿祎后来才知道盘古是雷军耗费大量心血做的项目，失败后雷军一度想要辞职。但这似乎也没有影响交往，雷军依然经常喊周鸿祎出来喝酒，有次还送了周鸿祎一个从日本带回来的相机，雷军准备离开金山的时候，周鸿祎他们还坐在一起喝酒。<br><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/282505/1599488142700-ba2e1275-9856-4907-8295-7608cf7aeb18.jpeg#align=left&display=inline&height=288&margin=%5Bobject%20Object%5D&originHeight=288&originWidth=550&size=0&status=done&style=none&width=550"><br>江湖有恩必有怨  <br>抱得美人归的周鸿祎事业心彻底激活了，爱情满足之后就自然是追求事业上的功成名就，按照自己的思路，时任研发中心副主任、事业部总经理的周鸿祎向公司提出了“3721”的项目，方正上层举棋不定，据说还征求过雷军的意见，雷军表示不看好。<br>此路不通，周鸿祎的狠劲上来了，1998 年，28 岁的他决定 “不管三七二十一”，辞职创业。此后，中文网址导航 3721 网站在互联网江湖掀起了很大的风波。<br>当年很多城市的网络公司都是 3721 的代理商，周鸿祎也经常跑出去谈业务，从市场规模上看，3721 的企业用户付费群体比当时的百度更大，这就在雅虎与谷歌竞争的时候，选择了要价更低的 3721，雅虎出价 1.2 亿美金收编了 3721 和周鸿祎。对此，周鸿祎说，“我太想做网页搜索，太着急，正好碰上雅虎……2003 年的雅虎还是互联网第一，当时想如果能跟雅虎拼到一起，用雅虎的资金、品牌和技术，再加上我的渠道、客户端和运作能力，我们把 Google 都能给灭了，所以就加入了豪门。”<br>传言此前周鸿祎找过对手谈合作：</p><blockquote><p>“我发现 Robin 和我的性格形成了强烈的反差，我像机关枪一样，把想说的话一股脑地都说了，包括怎么推广、怎么做插件，毫无保留。但是，对面坐着 Robin 很沉静，一直在听，也不表态。到了最后，他才缓缓地说：“我觉得 3721 本质上做的也是搜索，以后肯定会有竞争。”</p></blockquote><p>后来，周鸿祎承认 Robin 的路线是对了，3721 应该独立发展。因为在雅虎中国时期不开心，周鸿祎与杨致远、马云先后闹翻，然后带着人马转头做了奇虎公司，要“报仇雪恨”，没想到搜索没成，老部下傅盛做的安全卫士起来了，周鸿祎马上亲自接手，导致傅盛投奔去了雷军麾下。为此，周鸿祎喊话雷军封杀傅盛，雷军根本不鸟他。话说老周还是威望不够啊，看看当年任正非打李一男，江湖上谁敢为李一男出头、触怒任正非？<br>关键是 360 安全卫生打出的“免费杀毒”牌子，直接动了金山毒霸的奶酪，据金山毒霸当时的总经理说，他们一下子被打懵了，很长时间没反应过来，要知道金山毒霸是国内杀毒市场的霸主啊。金山和 360 互相打官司和口水战，金山说对方毫无底线。但总体来说周鸿祎的 360 是赢了这一场。<br><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/282505/1599488142694-3a203981-3c5a-4daa-bf72-6e7bb5a2a623.jpeg#align=left&display=inline&height=411&margin=%5Bobject%20Object%5D&originHeight=411&originWidth=550&size=0&status=done&style=none&width=550"><br>“红衣大炮”的手机梦  <br>梁子是结深了，可周鸿祎还是盯着雷军的动向，“即使商业上有竞争，也不会与对方成为敌人”，他说，“其实最了解雷军的人还是我”。<br>当小米一战成名后，周鸿祎也按捺不住了，研究过雷军的互联网模式后，他先找华为（据说被任正非否了），再谈酷派，要做 360 特供机，他还在网上批评“小米质量差”、“小米手机暴利”。<br>口水战越来越紧张，“红衣大炮”放言约架：“约你见面谈一谈，下周一上午十点朝阳公园门口见。”雷布斯再次不屑：“他有什么本事约谈我？把自己看得太大了”。<br>做手机供应链是命脉，老罗就手机失败有一部分原因就是被供应链折磨得欲仙欲死。老周想到的是联合，2014 年 12 月 16 日，奇虎 360 向传统厂商酷派投资 4.0905 亿美元现金成立合资公司奇酷，奇虎 360 将持有该合资公司 45%的股权，后增持至 49.5%。酷派负责提供智能手机设计、研发、技术以及生产制造、供应链管理、品质控制、营销、售后服务等资源，360 则提供安全软件、移动应用程序设计及网上营销推广等资源。两家联手，欲挑战小米地位，那时候老周认为有很大把握成功。<br>但计划没有变化快，“宁可玉碎，同归于尽，所以我说了，谁拦我做手机我就干死谁，这不是威胁，更不是恐吓，我说了就会做到，至于有人扬言要弄死我，我一直等着呢。”随着乐视“第三者插足”，与酷派的合作是黄了，老周也只能放狠话，“谁在我背后捅刀子试图 screw 我，我的原则是一定 fk 回去”。<br>忙活一场，“AK47”瞄准了对手但却打不中了，老周终于还是看着雷军的小米一骑绝尘，这一局，终究是雷军赢了。<br><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/282505/1599488142726-79fc2dae-5366-4d93-b3c7-7671bcf87596.jpeg#align=left&display=inline&height=456&margin=%5Bobject%20Object%5D&originHeight=456&originWidth=600&size=0&status=done&style=none&width=600"><br>一个“相爱相杀”的眼神  <br>在 2015 年的互联网大会上，酣睡的周鸿祎遭遇了雷军的一个眼神，话说拍照的人也很毒啊，这张照片完美体现了两个人的关系。<br>周鸿祎说，我没办法让雷军用那种眼神看我。<br>1995 年-1998 年，两个人一起愉快玩耍的时候，周鸿祎就觉得雷军“骄傲而难以接近”，后来两人在安全软件和手机领域各有胜负，有过利益争斗，有过斗嘴吵架，但在一起的时候，两人互动还是很和气的。<br>实际上，从 2013 年以后，周鸿祎就渐渐变得温和友善了许多，不知有没有受到雷军“把朋友变得多多的”的准则影响。<br>世界就是这样，人与人之间，有交情，有争斗，有恩怨，有缘分，其实，这也是我们人在江湖的常态。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>软件工程师-职业发展路径</title>
      <link href="/2020/09/05/oy20xn/"/>
      <url>/2020/09/05/oy20xn/</url>
      
        <content type="html"><![CDATA[<h1 id="1-关于职业规划"><a href="#1-关于职业规划" class="headerlink" title="1.关于职业规划"></a>1.关于职业规划</h1><p>很程序员每天都在写代码，每天都很忙，而当面试官问他：“你的职业规划是什么？”程序员答：“没有”。那如果让你选择一个角色你会选择什么？比如技术主管。程序员答：“ＣＥＯ吧”。我。。。。。。<br>我们应该给自己制定一个职业规划，对未来的工作要有一个方向，当方向对的时候，你会少走很多弯路。就像小时候别人问你，你长大后的梦想是什么，我家隔壁的小明答到：“我想当一个数学家”。这是一个很好的梦想！虽然后来小明只当了超市里的会计——收银员。</p><h1 id="2-程序员的成长过程"><a href="#2-程序员的成长过程" class="headerlink" title="2. 程序员的成长过程"></a>2. 程序员的成长过程</h1><p><strong>程序小白</strong><br>第一阶段：刚毕业到公司，每天就是打杂，总做一些简单又重复的事情，这就是程序员所说的“搬砖工”。搬砖工其实没什么，成长都是从这里开始，当你多年以后，回过头看，你会发现曾经搬的砖其实对自己很有用。<br><strong>（你的工资水平大概在 3K~5K 左右）</strong><br><strong>初级程序员</strong><br>第二阶段：终于，小白不再是自己，从现在开始你可以说自己是一个程序员了，但是你能做的还是一些简单的事情。写代码的时候还是会依靠复制粘贴的方式完成代码的编写，通常一个方法写了几百行代码，恨不得一个方法可以将所有的功能都实现。他们不考虑程序的质量，代码也写的很乱，也没有注释，他们只要求程序能够运行就好。所以，你需要继续努力，继续学习。<br><strong>（你的工资水平大概在 6K~8K 左右）</strong><br><strong>中级程序员</strong><br>到了这个阶段，你已经掌握了较好的技术，你可以靠自己去做一些项目了，不在需要靠复制粘贴别人的代码了，开始关注代码的质量，代码的规范，把该注释的地方，注释好，开始做很多实用的项目。<br><strong>（你的工资水平大概在 10K~20K 左右）</strong><br><strong>高级程序员</strong><br>到了这个阶段，你的技术已经非常棒了，很多人开始走设计路线，你比如系统设计等等。公司会有很多的技术难题需要靠你去解决，这个时候是属于大神级别了。<br><strong>（你的工资水平大概在 20K~30K 左右）</strong><br><strong>转折点</strong><br>再往上走，就面临一个转折点了，或者叫“换乘站”，你需要考虑自己走哪个方向，一个路线是走管理路线，另一个路线是走技术路线。走管理路线的话，你需要有较好的管理能力；而走技术路线，你的技术要过硬，要有牛逼的技术。</p><h1 id="3-程序员需要不断的学习"><a href="#3-程序员需要不断的学习" class="headerlink" title="3. 程序员需要不断的学习"></a>3. 程序员需要不断的学习</h1><p>序员的人生，是一个不断学习，不断提升的过程，这当中包含了心酸，也包含了成就。有人说程序员吃的是“青春饭”，只有年轻人可以胜任，当年龄大了，就干不动，干不过年轻人了。小编却认为，老程序员干不过年轻程序员，哪要看在哪方面，可别忘了，老程序员有很好的工作经验，项目经验。我们只要记住一句话就好：“活到老，学到老”。</p><h1 id="4-架构师"><a href="#4-架构师" class="headerlink" title="4. 架构师"></a>4. 架构师</h1><p>听很多人说，架构师薪资很棒，年薪百万，当然只有少数人能达到这个水平，但是还是很高的薪资哦。理想还是要有的，万一实现了呢。我们确实要有理想，因为有理想才能有动力，你才知道自己想要什么，你就会去努力，去拼搏。就像中国富豪王健林说的那样“我们先给自己定一个小目标，比如说，先挣它一个亿”。在很多人看来这是天文数字，可是你不努力，你怎么知道自己实现不了呢。有很多事情，只有去尝试，你才知道行不行！</p><h1 id="5-学习需要学会交流"><a href="#5-学习需要学会交流" class="headerlink" title="5. 学习需要学会交流"></a>5. 学习需要学会交流</h1><p>所以，努力吧。希望我们可以相互学习，共同进步。技术，只有当交流的时候，才会变的更好！我很期待和网友们进行技术交流， 不说为中国技术进步做努力吧。就说帮助身边的人，帮助你我他。我们共同学习，共同交流，共同进步。谢谢！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>多线程</title>
      <link href="/2020/09/04/isxwy0/"/>
      <url>/2020/09/04/isxwy0/</url>
      
        <content type="html"><![CDATA[<h1 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h1><p>线程主要有“新建”（NEW）、“就绪”（RUNNABLE）、“运行”（RUNNING）、“阻塞”（BLOCKED）、“死亡”（DEAD）五种状态。<br>**<br>**<br>多处理器，处理器提供了<strong>总线锁定</strong>和<strong>缓存锁定</strong>两个机制来保证复杂内存操作的原子性。<br>当处理器要操作一个共享变量的时候，其在总线上会发出一个 Lock 信号，这时其它处理器就不能操作共享变量了，该处理器会独享此共享内存中的变量。但总线锁定在阻塞其它处理器获取该共享变量的操作请求时，也可能会导致大量阻塞，从而增加系统的性能开销。<br>于是，后来的<strong>处理器都提供了缓存锁定机制，也就说当某个处理器对缓存中的共享变量进行了操作，就会通知其它处理器放弃存储该共享资源或者重新读取该共享资源。</strong>目前最新的处理器都支持缓存锁定机制。<br>**<br>Linux 内核提供的 vmstat 命令，来监视 Java 程序运行过程中系统的上下文切换频率。<br>[root@aliyun ~]# vmstat 2 <strong>//时间间隔</strong><br>procs ———–memory———- —swap– —–io—- -system– ——cpu—–<br>r   b   swpd   free   buff   cache   si   so    bi    bo   in   cs us sy id wa st<br>2  0      0   82800 133624 537868    0    0     4    13   12   25  1  0 99  0  0<br><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1599227584883-fec6985f-f6f8-4ef6-86ca-5d216cc23359.png#align=left&display=inline&height=177&margin=%5Bobject%20Object%5D&name=image.png&originHeight=177&originWidth=746&size=191086&status=done&style=none&width=746" alt="image.png"><br>如果是监视某个应用的上下文切换，可以使用 pidstat 命令监控进程的 上下文切换。<br> pidstat -w -l -p <strong>26571</strong> 1 100</p><p><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/282505/1595921713500-ef983e78-c5e3-46f3-abe1-bbdc74c1f384.jpeg#align=left&display=inline&height=582&margin=%5Bobject%20Object%5D&originHeight=582&originWidth=1564&size=0&status=done&style=none&width=1564"></p><p>**</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>锁优化</title>
      <link href="/2020/09/04/xu92ar/"/>
      <url>/2020/09/04/xu92ar/</url>
      
        <content type="html"><![CDATA[<h3 id="垃圾回收会导致上下文切换"><a href="#垃圾回收会导致上下文切换" class="headerlink" title="垃圾回收会导致上下文切换"></a>垃圾回收会导致上下文切换</h3><p>很多 <strong>JVM 垃圾回收器</strong>（serial 收集器、ParNew 收集器）在回收旧对象时，会产生<strong>内存碎片</strong>，从而需要进行内存整理，在这个过程中就需要移动存活的对象。而<strong>移动内存对象就意味着这些对象所在的内存地址会发生变化</strong>，因此在移动对象前需要暂停线程，在移动完成后需要再次唤醒该线程。因此减少 JVM 垃圾回收的频率可以有效地减少上下文切换。</p><p>Executors.newCachedThreadPool，只适合处理大量且耗时短的非阻塞任务。</p><h2 id="竞争锁优化"><a href="#竞争锁优化" class="headerlink" title="竞争锁优化"></a><a href="#R0KWu">竞争锁优化</a></h2><h3 id="1-减少锁的持有时间"><a href="#1-减少锁的持有时间" class="headerlink" title="1.减少锁的持有时间"></a><a href="#JeIgg">1.减少锁的持有时间</a></h3><p>同步的代码要尽量少。</p><h3 id="2-降低锁的粒度"><a href="#2-降低锁的粒度" class="headerlink" title="2.降低锁的粒度"></a><a href="#wjdvJ">2.降低锁的粒度</a></h3><p>锁分离(读写锁)；锁分段。</p><h3 id="3-非阻塞乐观锁替代竞争锁"><a href="#3-非阻塞乐观锁替代竞争锁" class="headerlink" title="3.非阻塞乐观锁替代竞争锁"></a><a href="#lCdUa">3.非阻塞乐观锁替代竞争锁</a></h3><p>cas 代替 sync。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>gc 调优</title>
      <link href="/2020/09/04/zgykxe/"/>
      <url>/2020/09/04/zgykxe/</url>
      
        <content type="html"><![CDATA[<h2 id="GC-调优策略"><a href="#GC-调优策略" class="headerlink" title="GC 调优策略"></a><a href="#S4gAF">GC 调优策略</a></h2><h3 id="1-降低-Minor-GC-频率"><a href="#1-降低-Minor-GC-频率" class="headerlink" title="1. 降低 Minor GC 频率"></a><a href="#NO6sY">1. 降低 Minor GC 频率</a></h3><p>由于新生代空间较小，Eden 区很快被填满，就会导致频繁 Minor GC，因此我们可以通过增大新生代空间来降低 Minor GC 的频率。</p><p>单次 Minor GC 时间更多取决于 GC 后存活对象的数量，而非 Eden 区的大小。</p><h3 id="2-降低-Full-GC-的频率"><a href="#2-降低-Full-GC-的频率" class="headerlink" title="2. 降低 Full GC 的频率"></a>2. 降低 Full GC 的频率</h3><p>通常情况下，由于堆内存空间不足或老年代对象太多，会触发 Full GC，频繁的 Full GC 会带来上下文切换，增加系统的性能开销。我们可以使用哪些方法来降低 Full GC 的频率呢？<br><strong>减少创建大对象：</strong>在平常的业务场景中，我们习惯一次性从数据库中查询出一个大对象用于 web 端显示。例如，我之前碰到过一个一次性查询出 60 个字段的业务操作，这种大对象如果超过年轻代最大对象阈值，会被直接创建在老年代；即使被创建在了年轻代，由于年轻代的内存空间有限，通过 Minor GC 之后也会进入到老年代。<strong>这种大对象很容易产生较多的 Full GC。</strong><br>我们可以将这种大对象拆解出来，首次只查询一些比较重要的字段，如果还需要其它字段辅助查看，再通过第二次查询显示剩余的字段。<br><strong>增大堆内存空间：</strong>在堆内存不足的情况下，增大堆内存空间，且设置初始化堆内存为最大堆内存，也可以降低 Full GC 的频率。</p><h3 id="3-选择合适的-GC-回收器"><a href="#3-选择合适的-GC-回收器" class="headerlink" title="3. 选择合适的 GC 回收器"></a>3. <a href="#i3GG7">选择合适的 GC 回收器</a></h3><p>对响应速度有要求的可以用 CMS（Concurrent Mark Sweep）回收器和 G1 回收器。<br>对系统吞吐量有要求时，可以选择 Parallel Scavenge。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jvm 命令</title>
      <link href="/2020/09/04/dkrt72/"/>
      <url>/2020/09/04/dkrt72/</url>
      
        <content type="html"><![CDATA[<h2 id="jstat"><a href="#jstat" class="headerlink" title="jstat"></a>jstat</h2><ul><li>S1C：年轻代中 From Survivor 的容量（单位 KB）；</li><li>S0U：年轻代中 To Survivor 目前已使用空间（单位 KB）；</li><li>S1U：年轻代中 From Survivor 目前已使用空间（单位 KB）；</li><li>EC：年轻代中 Eden 的容量（单位 KB）；</li><li>EU：年轻代中 Eden 目前已使用空间（单位 KB）；</li><li>OC：Old 代的容量（单位 KB）；</li><li>OU：Old 代目前已使用空间（单位 KB）；</li><li>MC：Metaspace 的容量（单位 KB）；</li><li>MU：Metaspace 目前已使用空间（单位 KB）；</li><li>YGC：从应用程序启动到采样时年轻代中 gc 次数；</li><li>YGCT：从应用程序启动到采样时年轻代中 gc 所用时间(s)；</li><li>FGC：从应用程序启动到采样时 old 代（全 gc）gc 次数；</li><li>FGCT：从应用程序启动到采样时 old 代（全 gc）gc 所用时间(s)；</li><li>GCT：从应用程序启动到采样时 gc 用的总时间(s)。</li></ul><pre class=" language-java"><code class="language-java"><span class="token punctuation">[</span>root<span class="token annotation punctuation">@aliyun</span> <span class="token operator">~</span><span class="token punctuation">]</span># jstat <span class="token operator">-</span>gc <span class="token number">27788</span> S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT     GCT<span class="token number">8704.0</span> <span class="token number">8704.0</span> <span class="token number">3301.0</span>  <span class="token number">0.0</span>   <span class="token number">69952.0</span>  <span class="token number">67721.2</span>   <span class="token number">174784.0</span>   <span class="token number">105202.2</span>  <span class="token number">104140.0</span> <span class="token number">98328.1</span> <span class="token number">13272.0</span> <span class="token number">12227.3</span>    <span class="token number">176</span>    <span class="token number">2.736</span>   <span class="token number">4</span>      <span class="token number">0.421</span>    <span class="token number">3.158</span><span class="token punctuation">[</span>root<span class="token annotation punctuation">@aliyun</span> <span class="token operator">~</span><span class="token punctuation">]</span>#</code></pre><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>常用的数据结构</title>
      <link href="/2020/09/04/csa1em/"/>
      <url>/2020/09/04/csa1em/</url>
      
        <content type="html"><![CDATA[<h3 id="跳跃表"><a href="#跳跃表" class="headerlink" title="跳跃表"></a>跳跃表</h3><p><strong>跳跃表是基于链表扩展实现的一种特殊链表</strong>，类似于树的实现，跳跃表不仅实现了横向链表，还<strong>实现了垂直方向的分层索引。</strong><br><strong>一个跳跃表由若干层链表组成，每一层都实现了一个有序链表索引，只有最底层包含了所有数据</strong>，每一层由下往上依次通过一个指针指向上层相同值的元素，每层数据依次减少，等到了最顶层就只会保留部分数据了。<br><strong>跳跃表</strong>的这种结构，是利用了<strong>空间换时间</strong>的方法来提高了查询效率。<strong>程序总是从最顶层开始查询访问，通过判断元素值来缩小查询范围</strong>。</p><h3 id="ConcurrentSkipListMap"><a href="#ConcurrentSkipListMap" class="headerlink" title="ConcurrentSkipListMap"></a>ConcurrentSkipListMap</h3><p><strong>ConcurrentSkipListMap</strong>是基于 TreeMap 的设计原理实现的，略有不同的是<strong>前者基于跳表实现</strong>，后者基于<strong>红黑树</strong>实现，<strong>ConcurrentSkipListMap 的特点是存取平均时间复杂度是**</strong>O（log（n））<strong>，适用于大数据量存取的场景，</strong>最常见的是基于跳跃表实现的数据量比较大的缓存。**</p><h3 id="Hashtable"><a href="#Hashtable" class="headerlink" title="Hashtable"></a>Hashtable</h3><p><strong>Hashtable 使用 Synchronized 同步锁修饰了 put、get、remove 等方法。</strong></p><h3 id="ConcurrentHashMap"><a href="#ConcurrentHashMap" class="headerlink" title="ConcurrentHashMap"></a>ConcurrentHashMap</h3><p>该容器在数据量比较大的时候，链表会转换为红黑树。<strong>红黑树在并发情况下，删除和插入过程中有个平衡的过程，会牵涉到大量节点，因此竞争锁资源的代价相对比较高。</strong><br><strong>在 JDK1.7 中，ConcurrentHashMap 就使用了分段锁 Segment 减小了锁粒度，最终优化了锁的并发操作。</strong><br><strong>JDK1.8 中 ConcurrentHashMap 做了大量的改动，摒弃了 Segment 的概念</strong>。由于 Synchronized 锁在 Java6 之后的性能已经得到了很大的提升，所以<strong>在 JDK1.8 中，Java 重新启用了 Synchronized 同步锁，通过 Synchronized 实现**</strong>HashEntry*<strong>*作为锁粒度。</strong><br>与 JDK1.7 的 put 方法一样，<strong>JDK1.8 在添加元素时</strong>，在没有哈希冲突的情况下，会使用<strong>CAS 进行添加元素操作</strong>；如果有冲突，则通过 Synchronized 将链表锁定，再执行接下来的操作。</p><h3 id="Vector"><a href="#Vector" class="headerlink" title="Vector"></a>Vector</h3><p><strong>Vector 也是基于 Synchronized 同步锁实现的线程安全</strong>，Synchronized 关键字几乎修饰了所有对外暴露的方法，所以在读远大于写的操作场景中，Vector 将会发生大量锁竞争，从而给系统带来性能开销。</p><h3 id="CopyOnWriteArrayList"><a href="#CopyOnWriteArrayList" class="headerlink" title="CopyOnWriteArrayList"></a>CopyOnWriteArrayList</h3><p><strong>CopyOnWriteArrayList</strong>是 java.util.concurrent 包提供的方法，它实现了<strong>读操作无锁，写操作则通过操作底层数组的新副本来实现</strong>，是一种读写分离的并发策略。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jvm参数</title>
      <link href="/2020/09/04/gc91c3/"/>
      <url>/2020/09/04/gc91c3/</url>
      
        <content type="html"><![CDATA[<p>-XX:+DoEscapeAnalysis 开启逃逸分析（jdk1.8 默认开启，其它版本未测试）<br>-XX:-DoEscapeAnalysis 关闭逃逸分析<br>-XX:+EliminateLocks 开启锁消除（jdk1.8 默认开启，其它版本未测试）<br>-XX:-EliminateLocks 关闭锁消除<br>-XX:+EliminateAllocations 开启标量替换（jdk1.8 默认开启，其它版本未测试）<br>-XX:-EliminateAllocations 关闭就可以了</p><p>-XX:+PrintCompilation //在控制台打印编译过程信息<br>-XX:+UnlockDiagnosticVMOptions //解锁对 JVM 进行诊断的选项参数。默认是关闭的，开启后支持一些特定参数对 JVM 进行诊断<br>-XX:+PrintInlining //将内联方法打印出来</p><p>-XX:+PrintGC 输出 GC 日志<br>-XX:+PrintGCDetails 输出 GC 的详细日志<br>-XX:+PrintGCTimeStamps 输出 GC 的时间戳（以基准时间的形式）<br>-XX:+PrintGCDateStamps 输出 GC 的时间戳（以日期的形式，如 2013-05-04T21:53:59.234+0800）<br>-XX:+PrintHeapAtGC 在进行 GC 的前后打印出堆的信息<br>-Xloggc:../logs/gc.log 日志文件的输出路径</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>StringBuffer</title>
      <link href="/2020/09/04/gaqcd1/"/>
      <url>/2020/09/04/gaqcd1/</url>
      
        <content type="html"><![CDATA[<p>由于 StringBuffer 中的 append 方法被 Synchronized 关键字修饰，会使用到锁，从而导致性能下降。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>类</title>
      <link href="/2020/09/04/we5szc/"/>
      <url>/2020/09/04/we5szc/</url>
      
        <content type="html"><![CDATA[<p>类编译，加载，链接，初始化。</p><h3 id="类连接"><a href="#类连接" class="headerlink" title="类连接"></a>类连接</h3><p>类在加载进来之后，会进行连接、初始化，最后才会被使用。在连接过程中，又包括验证、准备和解析三个部分。<br><strong>验证：</strong>验证类符合 Java 规范和 JVM 规范，在保证符合规范的前提下，避免危害虚拟机安全。<br><strong>准备：</strong>为类的静态变量分配内存，初始化为系统的初始值。对于 final static 修饰的变量，直接赋值为用户的定义值。例如，private final static int value=123，会在准备阶段分配内存，并初始化值为 123，而如果是 private static int value=123，这个阶段 value 的值仍然为 0。<br><strong>解析：</strong>将符号引用转为直接引用的过程。<br>**<br>javap 反编译命令，查看 class 文件。</p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p><strong>初始化类的静态变量和静态代码块为用户自定义的值，初始化的顺序和 Java 源码从上到下的顺序一致。</strong><br>**<br><strong>JVM 会保证 <clinit>() 方法的线程安全，保证同一时间只有一个线程执行。</strong><br>**<br>**</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mmap零拷贝</title>
      <link href="/2020/09/04/ailstm/"/>
      <url>/2020/09/04/ailstm/</url>
      
        <content type="html"><![CDATA[<p>DirectBuffer 只优化了用户空间内部的拷贝。<br>MappedByteBuffer，跟 DirectBuffer 不同的是，MappedByteBuffer 是通过本地类调用<strong>mmap</strong>进行文件内存映射的，<strong>省去了向用户态的内存复制。</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>I/O操作</title>
      <link href="/2020/09/03/rbw833/"/>
      <url>/2020/09/03/rbw833/</url>
      
        <content type="html"><![CDATA[<p>I/O 操作分为磁盘 I/O 操作和网络 I/O 操作。<br>InputStream 的 read 操作：</p><ul><li>JVM 会发出 read()系统调用，并通过 read 系统调用向内核发起读请求；</li><li>内核向硬件发送读指令，并等待读就绪；</li><li>内核把将要读取的数据复制到指向的内核缓存中；</li><li>操作系统内核将数据复制到用户空间缓冲区，然后 read 系统调用返回。</li></ul><p>在这个过程中，数据先从外部设备复制到内核空间，再从内核空间复制到用户空间，这就<strong>发生了两次内存复制操作</strong>。这种操作会导致不必要的数据拷贝和上下文切换，从而降低 I/O 的性能。</p><h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><p><strong>如果没有数据就绪，这个读取操作将会一直被挂起，用户线程将会处于阻塞状态。</strong></p><h2 id="优化-I-O-操作"><a href="#优化-I-O-操作" class="headerlink" title="优化 I/O 操作"></a>优化 I/O 操作</h2><h3 id="1-使用缓冲区优化读写流操作"><a href="#1-使用缓冲区优化读写流操作" class="headerlink" title="1. 使用缓冲区优化读写流操作"></a>1. 使用缓冲区优化读写流操作</h3><p>NIO 与传统 I/O 不同，它是基于块（Block）的，它以块为基本单位处理数据。在 NIO 中，最为重要的两个组件是缓冲区（Buffer）和通道（Channel）。Buffer 是一块连续的内存块，是 NIO 读写数据的中转地。Channel 表示缓冲数据的源头或者目的地，它用于读取缓冲或者写入数据，是访问缓冲的接口。<br>传统 I/O 和 NIO 的最大区别就是传统 I/O 是面向流，NIO 是面向 Buffer。Buffer 可以将文件一次性读入内存再做后续处理，而传统的方式是边读文件边处理数据。</p><h3 id="2-使用-DirectBuffer-减少内存复制"><a href="#2-使用-DirectBuffer-减少内存复制" class="headerlink" title="2. 使用 DirectBuffer 减少内存复制"></a>2. 使用 DirectBuffer 减少内存复制</h3><p>NIO 的 Buffer 除了做了缓冲块优化之外，还提供了一个可以直接访问物理内存的类 DirectBuffer。</p><h3 id="3-多路复用器（Selector）"><a href="#3-多路复用器（Selector）" class="headerlink" title="3. 多路复用器（Selector）"></a>3. 多路复用器（Selector）</h3><p>Selector 是 Java NIO 编程的基础。用于检查一个或多个 NIO Channel 的状态是否处于可读、可写。<br>Selector 是基于<strong>事件驱动</strong>实现的，我们可以在 Selector 中注册 accpet、read 监听事件，Selector 会不断轮询注册在其上的 Channel，如果某个 Channel 上面发生监听事件，这个 Channel 就处于就绪状态，然后进行 I/O 操作。<br><strong>一个线程使用一个 Selector，通过轮询的方式，可以监听多个 Channel 上的事件</strong>。我们可以<strong>在注册 Channel 时设置该通道为非阻塞，当 Channel 上没有 I/O 操作时，该线程就不会一直等待了，而是会不断轮询所有 Channel，从而避免发生阻塞。</strong><br>**<br>目前操作系统的 I/O 多路复用机制都使用了 epoll，相比传统的 select 机制，epoll 没有最大连接句柄 1024 的限制。所以 Selector 在理论上可以轮询成千上万的客户端。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网络I/O模型优化</title>
      <link href="/2020/09/03/xxtar0/"/>
      <url>/2020/09/03/xxtar0/</url>
      
        <content type="html"><![CDATA[<h2 id="网络-I-O-模型优化"><a href="#网络-I-O-模型优化" class="headerlink" title="网络 I/O 模型优化"></a>网络 I/O 模型优化</h2><h3 id="1-阻塞式-I-O"><a href="#1-阻塞式-I-O" class="headerlink" title="1.阻塞式 I/O"></a>1.阻塞式 I/O</h3><p>在整个 socket 通信工作流程中，socket 的默认状态是阻塞的。<strong>当发出一个不能立即完成的套接字调用时，其进程将被阻塞，被系统挂起，进入睡眠状态，一直等待相应的操作响应</strong>。</p><h3 id="2-非阻塞式-I-O"><a href="#2-非阻塞式-I-O" class="headerlink" title="2.非阻塞式 I/O"></a>2.非阻塞式 I/O</h3><p>我们需要设置一个线程对该操作进行轮询检查，这也是最传统的非阻塞 I/O 模型。</p><h3 id="3-I-O-复用"><a href="#3-I-O-复用" class="headerlink" title="3. I/O 复用"></a>3. I/O 复用</h3><p>如果使用用户线程轮询查看一个 I/O 操作的状态，在大量请求的情况下，这对于 CPU 的使用率无疑是种灾难。<br><strong>Linux 提供了 I/O 复用函数 select/poll/epoll：<br>**<br>**select()函数</strong>：它的用途是，在超时时间内，监听用户感兴趣的文件描述符上的可读可写和异常事件的发生。<br><strong>调用后 select() 函数会阻塞，直到有描述符就绪或者超时，函数返回。</strong><br>**<br><strong>poll()函数</strong>：在每次调用<strong>select()**函数之前，系统需要把一个 fd 从用户态拷贝到内核态，这样就给系统带来了一定的性能开销。再有</strong>单个进程监视的 fd 数量默认是 1024。**<br><strong>poll() 管理多个描述符也是通过轮询，根据描述符的状态进行处理，但 poll() 没有最大文件描述符数量的限制。</strong><br>poll() 和 select() 存在一个相同的<strong>缺点</strong>，那就是包含大量文件描述符的数组被整体复制到用户态和内核的地址空间之间，而无论这些文件描述符是否就绪，他们的开销都会随着文件描述符数量的增加而线性增大。</p><p><strong>epoll()函数</strong>：<strong>select/poll 是顺序扫描 fd 是否就绪，而且支持的 fd 数量不宜过大</strong>，<strong>epoll 使用事件驱动的方式代替轮询扫描 fd，**</strong>epoll 的性能更胜一筹，而且不会受到 fd 数量的限制。**<br>**</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>线程数大小</title>
      <link href="/2020/09/03/hogz4t/"/>
      <url>/2020/09/03/hogz4t/</url>
      
        <content type="html"><![CDATA[<p>一般多线程执行的任务类型可以分为<strong>CPU 密集型和 I/O 密集型</strong>，根据不同的任务类型，我们计算线程数的方法也不一样。<br><strong>CPU 密集型任务**</strong>：<strong>这种任务消耗的主要是 CPU 资源，可以将线程数设置为</strong>N（CPU 核心数）+1<strong>，比 CPU 核心数多出来的一个线程是为了防止线程偶发的缺页中断，或者其它原因导致的任务暂停而带来的影响。一旦任务暂停，CPU 就会处于空闲状态，而在这种情况下多出来的一个线程就可以充分利用 CPU 的空闲时间。<br>当线程数量太小，同一时间大量请求将被阻塞在线程队列中排队等待执行线程，此时 CPU 没有得到充分利用；当线程数量太大，被创建的执行线程同时在争取 CPU 资源，又会导致大量的上下文切换，从而增加线程的执行时间，影响了整体执行效率。<br>**I/O 密集型任务：</strong>这种任务应用起来，系统会用大部分的时间来处理 I/O 交互，而线程在处理 I/O 的时间段内不会占用 CPU 来处理，这时就可以将 CPU 交出给其它线程使用。因此在*<em>I/O 密集型任务的应用中，我们可以多配置一些线程，具体的计算方法是 2N。\</em>*</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>助力中小企业复产复工-云服务器优惠</title>
      <link href="/2020/09/03/lmvdl2/"/>
      <url>/2020/09/03/lmvdl2/</url>
      
        <content type="html"><![CDATA[<p><a href="https://i.didiyun.com/2brfgkTahZt">https://i.didiyun.com/2brfgkTahZt</a><br><a href="https://i.didiyun.com/2brfgkTahZt">https://i.didiyun.com/2brfgkTahZt</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>内存模型</title>
      <link href="/2020/09/03/rsals7/"/>
      <url>/2020/09/03/rsals7/</url>
      
        <content type="html"><![CDATA[<hr><ul><li><p><a href="#m69Bp">JVM 内存模型的具体设计</a></p></li><li><p><a href="#TE5qQ">1. 堆（Heap）</a></p></li><li><p><a href="#5nAju">2. 程序计数器（Program Counter Register）</a></p></li><li><p><a href="#ClBVw">3. 方法区（Method Area）</a></p></li><li><p><a href="#2sdpJ">4.虚拟机栈（VM stack）</a></p></li><li><p><a href="#nnVDR">5.本地方法栈（Native Method Stack）</a></p></li></ul><h3 id="3-方法区（Method-Area）"><a href="#3-方法区（Method-Area）" class="headerlink" title="3. 方法区（Method Area）"></a>3. 方法区（Method Area）</h3><p>很多开发者都习惯将方法区称为“永久代”，其实这两者并不是等价的。<br>HotSpot 虚拟机使用永久代来实现方法区，但在其它虚拟机中，不存在永久代一说。因此，方法区只是 JVM 中规范的一部分，可以说，在 HotSpot 虚拟机中，设计人员使用了永久代来实现了 JVM 规范的方法区。<br>方法区主要是用来存放已被虚拟机加载的类相关信息，包括类信息、运行时常量池、字符串常量池。类信息又包括了类的版本、字段、方法、接口和父类等信息。<br>JVM 在执行某个类的时候，必须经过加载、连接、初始化，而连接又包括验证、准备、解析三个阶段。在加载类的时候，JVM 会先加载 class 文件，而在 class 文件中除了有类的版本、字段、方法和接口等描述信息外，还有一项信息是常量池(Constant Pool Table)，用于存放编译期间生成的各种字面量和符号引用。<br>字面量包括字符串（String a=“b”）、基本类型的常量（final 修饰的变量），符号引用则包括类和方法的全限定名（例如 String 这个类，它的全限定名就是 Java/lang/String）、字段的名称和描述符以及方法的名称和描述符。<br>而<strong>当类加载到内存中后，JVM 就会将 class 文件常量池中的内容存放到运行时的常量池中；在解析阶段，JVM 会把符号引用替换为直接引用（对象的索引值）</strong>。<br>例如，类中的一个字符串常量在 class 文件中时，存放在 class 文件常量池中的；在 JVM 加载完类之后，JVM 会将这个字符串常量放到运行时常量池中，并在解析阶段，指定该字符串对象的索引值。运行时常量池是全局共享的，多个类共用一个运行时常量池，class 文件中常量池多个相同的字符串在运行时常量池只会存在一份。<br>方法区与堆空间类似，也是一个共享内存区，<strong>所以方法区是线程共享的。假如两个线程都试图访问方法区中的同一个类信息，而这个类还没有装入 JVM，那么此时就只允许一个线程去加载它，另一个线程必须等待。</strong><br>在 HotSpot 虚拟机、Java7 版本中已经将永久代的静态变量和运行时常量池转移到了堆中，其余部分则存储在 JVM 的非堆内存中，而 Java8 版本已经将方法区中实现的永久代去掉了，并用元空间（class metadata）代替了之前的永久代，并且元空间的存储位置是本地内存。<strong>之前永久代的类的元数据存储在了元空间</strong>，<strong>永久代的静态变量（class static variables）以及运行时常量池（runtime constant pool）则跟 Java7 一样，转移到了堆中</strong>。</p><h3 id="4-虚拟机栈（VM-stack）"><a href="#4-虚拟机栈（VM-stack）" class="headerlink" title="4.虚拟机栈（VM stack）"></a>4.虚拟机栈（VM stack）</h3><p>当创建一个线程时，会在虚拟机栈中申请一个<strong>线程栈，用来保存方法的局部变量、操作数栈、动态链接方法和返回地址等信息，并参与方法的调用和返回</strong>。每一个方法的调用都伴随着栈帧的入栈操作，方法的返回则是栈帧的出栈操作。</p><h3 id="5-本地方法栈（Native-Method-Stack）"><a href="#5-本地方法栈（Native-Method-Stack）" class="headerlink" title="5.本地方法栈（Native Method Stack）"></a>5.本地方法栈（Native Method Stack）</h3><p>本地方法栈则用于管理本地方法的调用。但本地方法并不是用 Java 实现的，而是由 C 语言实现的。</p><p><strong>垃圾回收的重点就是关注堆和方法区中的内存了</strong>，堆中的回收主要是对象的回收，<strong>方法区的回收主要是废弃常量和无用的类的回收。</strong><br>**<br><strong>程序计数器、虚拟机栈和本地方法栈这 3 个区域是线程私有的。</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Happens-before规则</title>
      <link href="/2020/09/03/tz4aem/"/>
      <url>/2020/09/03/tz4aem/</url>
      
        <content type="html"><![CDATA[<p>##</p><hr><p>title: Happens-before 规则<br>author: future<br>top: true<br>cover: false<br>coverImg: /medias/featureimages/11.jpg<br>toc: true<br>mathjax: false<br>summary: Happens-before 规则<br>categories:</p><ul><li>Hexo</li></ul><p>tags:</p><ul><li>Github Actions</li><li>持续集成</li><li>语雀</li><li>Hexo</li><li>CI/CD</li></ul><p>urlname: Happens-before</p><p>date: 2020-03-02 23:15:33</p><p>img:</p><p>password:</p><p>updated:</p><hr><h2 id="Happens-before-规则"><a href="#Happens-before-规则" class="headerlink" title="Happens-before 规则"></a>Happens-before 规则</h2><p>Happens-before 规则来规范线程的执行顺序：</p><ul><li>程序次序规则：在单线程中，代码的执行是有序的，虽然可能会存在运行指令的重排序，但最终执行的结果和顺序执行的结果是一致的；</li><li>锁定规则：一个锁处于被一个线程锁定占用状态，那么只有当这个线程释放锁之后，其它线程才能再次获取锁操作；</li><li>volatile 变量规则：如果一个线程正在写 volatile 变量，其它线程读取该变量会发生在写入之后；</li><li>线程启动规则：Thread 对象的 start()方法先行发生于此线程的其它每一个动作；</li><li>线程终结规则：线程中的所有操作都先行发生于对此线程的终止检测；</li><li>对象终结规则：一个对象的初始化完成先行发生于它的 finalize()方法的开始；</li><li>传递性：如果操作 A happens-before 操作 B，操作 B happens-before 操作 C，那么操作 A happens-before 操作 C；</li><li>线程中断规则：对线程 interrupt()方法的调用先行发生于被中断线程的代码检测到中断事件的发生。</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>堆的信息</title>
      <link href="/2020/09/02/eq45ui/"/>
      <url>/2020/09/02/eq45ui/</url>
      
        <content type="html"><![CDATA[<p>[root@aliyun ~]# jps<br>1476 WrapperSimpleApp<br>27788 halo-latest.jar<br>25245 Jps<br>[root@aliyun ~]#<br>[root@aliyun ~]#** jmap -heap 27788**<br>Attaching to process ID 27788, please wait…<br>Debugger attached successfully.<br>Server compiler detected.<br>JVM version is 25.181-b13</p><p>using thread-local object allocation.<br>Mark Sweep Compact GC</p><p>Heap Configuration:<br>  MinHeapFreeRatio         = 40<br>  MaxHeapFreeRatio         = 70<br>  MaxHeapSize              = 268435456 (256.0MB)<br>  NewSize                  = 89456640 (85.3125MB)<br>  MaxNewSize               = 89456640 (85.3125MB)<br>  OldSize                  = 178978816 (170.6875MB)<br>  NewRatio                 = 2<br>  SurvivorRatio            = 8<br>  MetaspaceSize            = 21807104 (20.796875MB)<br>  CompressedClassSpaceSize = 1073741824 (1024.0MB)<br>  MaxMetaspaceSize         = 17592186044415 MB<br>  G1HeapRegionSize         = 0 (0.0MB)</p><p>Heap Usage:<br>New Generation (Eden + 1 Survivor Space):<br>  capacity = 80543744 (76.8125MB)<br>  used     = 43017784 (41.02495574951172MB)<br>  free     = 37525960 (35.78754425048828MB)<br>  53.40921822556448% used<br>Eden Space:<br>  capacity = 71630848 (68.3125MB)<br>  used     = 38657384 (36.866554260253906MB)<br>  free     = 32973464 (31.445945739746094MB)<br>  53.967508523701966% used<br>From Space:<br>  capacity = 8912896 (8.5MB)<br>  used     = 4360400 (4.1584014892578125MB)<br>  free     = 4552496 (4.3415985107421875MB)<br>  48.922370461856616% used<br>To Space:<br>  capacity = 8912896 (8.5MB)<br>  used     = 0 (0.0MB)<br>  free     = 8912896 (8.5MB)<br>  0.0% used<br>tenured generation:<br>  capacity = 178978816 (170.6875MB)<br>  used     = 48757456 (46.49873352050781MB)<br>  free     = 130221360 (124.18876647949219MB)<br>  27.242026229517577% used</p><p>32843 interned Strings occupying 3294488 bytes.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>都9月份了，今年就快过去了</title>
      <link href="/2020/09/01/tcnwt9/"/>
      <url>/2020/09/01/tcnwt9/</url>
      
        <content type="html"><![CDATA[<p>大家都有啥进步吗？</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>主题上传不上去  git rm -r --cached halo/</title>
      <link href="/2020/09/01/dq6307/"/>
      <url>/2020/09/01/dq6307/</url>
      
        <content type="html"><![CDATA[<p>spring@springdeMacBook-Pro halo % touch a<br>spring@springdeMacBook-Pro halo % git status<br>On branch master<br>Your branch is up to date with ‘origin/master’.<br>Changes to be committed:<br>  (use “git reset HEAD <file>…” to unstage)<br>new file:   ../halo-bak/halo-bak<br>spring@springdeMacBook-Pro halo % ls -l<br>total 120<br>-rw-r–r–   1 spring  staff   1070  9  1 14:55 LICENSE<br>-rw-r–r–   1 spring  staff  28963  9  1 14:55 README.md<br>-rw-r–r–   1 spring  staff  22063  9  1 14:55 _config.yml<br>-rw-r–r–   1 spring  staff      0  9  1 15:05 a<br>drwxr-xr-x   4 spring  staff    128  9  1 14:55 config<br>drwxr-xr-x   4 spring  staff    128  9  1 14:55 languages<br>drwxr-xr-x  20 spring  staff    640  9  1 14:55 layout<br>drwxr-xr-x   7 spring  staff    224  9  1 14:55 source<br>spring@springdeMacBook-Pro halo % git add .<br>fatal: in unpopulated submodule ‘themes/halo’<br>spring@springdeMacBook-Pro halo % ls -l            <br>total 120<br>-rw-r–r–   1 spring  staff   1070  9  1 14:55 LICENSE<br>-rw-r–r–   1 spring  staff  28963  9  1 14:55 README.md<br>-rw-r–r–   1 spring  staff  22063  9  1 14:55 _config.yml<br>-rw-r–r–   1 spring  staff      0  9  1 15:05 a<br>drwxr-xr-x   4 spring  staff    128  9  1 14:55 config<br>drwxr-xr-x   4 spring  staff    128  9  1 14:55 languages<br>drwxr-xr-x  20 spring  staff    640  9  1 14:55 layout<br>drwxr-xr-x   7 spring  staff    224  9  1 14:55 source<br>spring@springdeMacBook-Pro halo % pwd<br>/Users/spring/hexo/blog/themes/halo<br>spring@springdeMacBook-Pro halo % pwd              <br>/Users/spring/hexo/blog/themes/halo<br>spring@springdeMacBook-Pro halo % cd ..<br>spring@springdeMacBook-Pro themes % ls -l<br>total 0<br>drwxr-xr-x  10 spring  staff  320  9  1 15:05 halo<br>drwxr-xr-x   3 spring  staff   96  9  1 14:47 halo-bak<br>drwxr-xr-x  12 spring  staff  384  9  1 14:53 landscape<br>spring@springdeMacBook-Pro themes % git rm -r –cached halo<br>fatal: pathspec ‘–cached’ did not match any files <strong>//-命令不对 **<br>spring@springdeMacBook-Pro themes % git rm -r –cached halo/<br>fatal: pathspec ‘–cached’ did not match any files<br>spring@springdeMacBook-Pro themes % git  –cached halo/<br>git: ‘–cached’ is not a git command. See ‘git –help’.<br>spring@springdeMacBook-Pro themes % git  –cached halo/<br>unknown option: –cached<br>usage: git [–version] [–help] [-C <path>] [-c <name>=<value>]<br>           [–exec-path[=<path>]] [–html-path] [–man-path] [–info-path]<br>           [-p | –paginate | -P | –no-pager] [–no-replace-objects] [–bare]<br>           [–git-dir=<path>] [–work-tree=<path>] [–namespace=<name>]<br>           <command> [<args>]<br>spring@springdeMacBook-Pro themes % git git rm -r –cached halo/<br>git: ‘git’ is not a git command. See ‘git –help’.<br>The most similar command is<br>init<br>spring@springdeMacBook-Pro themes % <br>spring@springdeMacBook-Pro themes %</strong> **<strong>git*</strong>* rm -r –cached **<strong>halo/*</strong>* **<br>rm ‘themes/halo’<br>spring@springdeMacBook-Pro themes % ls -l<br>total 0<br>drwxr-xr-x  10 spring  staff  320  9  1 15:05 halo<br>drwxr-xr-x   3 spring  staff   96  9  1 14:47 halo-bak<br>drwxr-xr-x  12 spring  staff  384  9  1 14:53 landscape<br>spring@springdeMacBook-Pro themes % ls -la halo<br>total 120<br>drwxr-xr-x  10 spring  staff    320  9  1 15:05 .<br>drwxr-xr-x   5 spring  staff    160  9  1 14:53 ..<br>-rw-r–r–   1 spring  staff   1070  9  1 14:55 LICENSE<br>-rw-r–r–   1 spring  staff  28963  9  1 14:55 README.md<br>-rw-r–r–   1 spring  staff  22063  9  1 14:55 _config.yml<br>-rw-r–r–   1 spring  staff      0  9  1 15:05 a<br>drwxr-xr-x   4 spring  staff    128  9  1 14:55 config<br>drwxr-xr-x   4 spring  staff    128  9  1 14:55 languages<br>drwxr-xr-x  20 spring  staff    640  9  1 14:55 layout<br>drwxr-xr-x   7 spring  staff    224  9  1 14:55 source<br>spring@springdeMacBook-Pro themes % git status<br>On branch master<br>Your branch is up to date with ‘origin/master’.<br>Changes to be committed:<br>  (use “git reset HEAD <file>…” to unstage)<br>renamed:    halo -&gt; halo-bak/halo-bak<br>Untracked files:<br>  (use “git add <file>…” to include in what will be committed)<br>halo/<br>spring@springdeMacBook-Pro themes % cd halo<br>spring@springdeMacBook-Pro halo % ls -l<br>total 120<br>-rw-r–r–   1 spring  staff   1070  9  1 14:55 LICENSE<br>-rw-r–r–   1 spring  staff  28963  9  1 14:55 README.md<br>-rw-r–r–   1 spring  staff  22063  9  1 14:55 _config.yml<br>-rw-r–r–   1 spring  staff      0  9  1 15:05 a<br>drwxr-xr-x   4 spring  staff    128  9  1 14:55 config<br>drwxr-xr-x   4 spring  staff    128  9  1 14:55 languages<br>drwxr-xr-x  20 spring  staff    640  9  1 14:55 layout<br>drwxr-xr-x   7 spring  staff    224  9  1 14:55 source<br>spring@springdeMacBook-Pro halo % cd ..<br>spring@springdeMacBook-Pro themes % <strong>git add .</strong><br>spring@springdeMacBook-Pro themes % ls -l<br>total 0<br>drwxr-xr-x  10 spring  staff  320  9  1 15:05 halo<br>drwxr-xr-x   3 spring  staff   96  9  1 14:47 halo-bak<br>drwxr-xr-x  12 spring  staff  384  9  1 14:53 landscape<br>spring@springdeMacBook-Pro themes % <strong>git status</strong><br>On branch master<br>Your branch is up to date with ‘origin/master’.<br>Changes to be committed:<br>  (use “git reset HEAD <file>…” to unstage)<br>renamed:    halo -&gt; halo-bak/halo-bak<br>new file:   halo/LICENSE<br>new file:   halo/README.md<br>spring@springdeMacBook-Pro themes % <br>spring@springdeMacBook-Pro themes % <br>spring@springdeMacBook-Pro themes % <strong>git commit -m “halo-cache”</strong><br>[master 1326941] halo-cache<br> 198 files changed, 25301 insertions(+)<br> rename themes/{halo =&gt; halo-bak/halo-bak} (100%)<br> create mode 100644 themes/halo/LICENSE<br> create mode 100644 themes/halo/README.md<br> create mode 100644 themes/halo/_config.yml<br> create mode 100644 themes/halo/a<br> create mode 100644 themes/halo/config/scaffolds/draft.md</p><p>spring@springdeMacBook-Pro themes % <br>spring@springdeMacBook-Pro themes % <br>spring@springdeMacBook-Pro themes % git status                <br>On branch master<br>Your branch is ahead of ‘origin/master’ by 1 commit.<br>  (use “git push” to publish your local commits)<br>nothing to commit, working tree clean<br>spring@springdeMacBook-Pro themes % git remote <br>origin<br>spring@springdeMacBook-Pro themes % git remote  -vv<br>origin <a href="https://github.com/future1314/blog.git">https://github.com/future1314/blog.git</a> (fetch)<br>origin <a href="https://github.com/future1314/blog.git">https://github.com/future1314/blog.git</a> (push)<br>spring@springdeMacBook-Pro themes % <br>spring@springdeMacBook-Pro themes % <br>spring@springdeMacBook-Pro themes % <strong>git push</strong><br>Enumerating objects: 256, done.<br>Counting objects: 100% (256/256), done.<br>Delta compression using up to 4 threads.<br>Compressing objects: 100% (224/224), done.<br>Writing objects: 100% (254/254), 5.02 MiB | 334.00 KiB/s, done.<br>Total 254 (delta 10), reused 241 (delta 9)<br>remote: Resolving deltas: 100% (10/10), completed with 1 local object.<br>To <a href="https://github.com/future1314/blog.git">https://github.com/future1314/blog.git</a><br>   d694e47..1326941  master -&gt; master<br>spring@springdeMacBook-Pro themes % git remote  -vv<br>origin <a href="https://github.com/future1314/blog.git">https://github.com/future1314/blog.git</a> (fetch)<br>origin <a href="https://github.com/future1314/blog.git">https://github.com/future1314/blog.git</a> (push)<br>spring@springdeMacBook-Pro themes % git status     <br>On branch master<br>Your branch is up to date with ‘origin/master’.<br>nothing to commit, working tree clean</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac配置.bash_profile，重启终端后配置失效</title>
      <link href="/2020/08/31/osop7e/"/>
      <url>/2020/08/31/osop7e/</url>
      
        <content type="html"><![CDATA[<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>使用的终端是 zsh，zsh 加载的是 ~/.zshrc 文件，而 ‘.zshrc’ 文件中并没有定义任务环境变量</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>1、终端中执行命令，打开.zshrc 文件：</p><table><thead><tr><th><code>open -e ~/.zshrc</code></th></tr></thead></table><p>2、在~/.zshrc 文件最后，增加一行：</p><table><thead><tr><th><code>source ~/.bash_profile</code></th></tr></thead></table><p>3、执行命令，使其立即生效</p><table><thead><tr><th><code>source ~/.zshrc </code></th></tr></thead></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>语雀自动同步到hexo博客(转摘)</title>
      <link href="/2020/08/31/wcu8bq/"/>
      <url>/2020/08/31/wcu8bq/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.yuque.com/hxfqg9">yichen 的信安知识库</a>/<a href="https://www.yuque.com/hxfqg9/web">web 方向</a>/<a href="https://www.yuque.com/hxfqg9/web/gtb5ck">语雀自动同步到 hexo 博客</a>/</p><h1 id="语雀自动同步到-hexo-博客"><a href="#语雀自动同步到-hexo-博客" class="headerlink" title="语雀自动同步到 hexo 博客"></a>语雀自动同步到 hexo 博客</h1><blockquote><p>hexo+github pages+yuque-hexo 插件+github actions+serverless 云函数+语雀<br>实现语雀写完文章能够自动同步到 hexo 博客</p></blockquote><p>本文针对已经搭建好 hexo 博客的，如果没有搭好正常的 hexo 博客的可以去网上找一下，很方便</p><h1 id="hexo-同步语雀内容"><a href="#hexo-同步语雀内容" class="headerlink" title="hexo 同步语雀内容"></a>hexo 同步语雀内容</h1><p>用到了这个项目：<a href="https://github.com/x-cold/yuque-hexo">https://github.com/x-cold/yuque-hexo</a><br>安装：npm i -g yuque-hexo</p><p>然后把 package.json 的内容添加上下面这些</p><pre class=" language-json"><code class="language-json">  <span class="token property">"yuqueConfig"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token property">"postPath"</span><span class="token operator">:</span> <span class="token string">"source/_posts"</span><span class="token punctuation">,</span>    <span class="token property">"cachePath"</span><span class="token operator">:</span> <span class="token string">"yuque.json"</span><span class="token punctuation">,</span>    <span class="token property">"mdNameFormat"</span><span class="token operator">:</span> <span class="token string">"slug"</span><span class="token punctuation">,</span>    <span class="token property">"adapter"</span><span class="token operator">:</span> <span class="token string">"hexo"</span><span class="token punctuation">,</span>    <span class="token property">"concurrency"</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token property">"baseUrl"</span><span class="token operator">:</span> <span class="token string">"https://www.yuque.com/api/v2"</span><span class="token punctuation">,</span>    <span class="token property">"login"</span><span class="token operator">:</span> <span class="token string">"hxfqg9"</span><span class="token punctuation">,</span>    <span class="token property">"repo"</span><span class="token operator">:</span> <span class="token string">"web"</span><span class="token punctuation">,</span>    <span class="token property">"token"</span><span class="token operator">:</span> <span class="token string">"语雀token"</span><span class="token punctuation">,</span>    <span class="token property">"onlyPublished"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token property">"onlyPublic"</span><span class="token operator">:</span> <span class="token boolean">true</span>  &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token property">"devDependencies"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token property">"yuque-hexo"</span><span class="token operator">:</span> <span class="token string">"^1.6.0"</span>  &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token property">"hexo"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"4.2.1"</span>  &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span></code></pre><p>这里说一下里面的 baseurl 是固定的<br>login 和 repo 是如下图这样对应的，个人界面和团队界面都可以</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594906415602-fa6f487a-b51b-4dbc-8ee7-49cbadeb94aa.png#align=left&display=inline&height=484&margin=%5Bobject%20Object%5D&name=image.png&originHeight=968&originWidth=1920&size=217553&status=done&style=none&width=960" alt="image.png"></p><p>token 是在右上角头像 -&gt; 账户设置 -&gt; Token 添加的，权限的话只给读取就可以<br>ps.公开的知识库也要设置 Token</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594906494636-a353aa41-83de-478c-bd10-908e927671ad.png#align=left&display=inline&height=358&margin=%5Bobject%20Object%5D&name=image.png&originHeight=716&originWidth=1360&size=70891&status=done&style=stroke&width=680" alt="image.png"></p><p>在 “scripts” 中添加</p><pre class=" language-json"><code class="language-json">    <span class="token property">"sync"</span><span class="token operator">:</span> <span class="token string">"yuque-hexo sync"</span><span class="token punctuation">,</span>    <span class="token property">"clean:yuque"</span><span class="token operator">:</span> <span class="token string">"yuque-hexo clean"</span><span class="token punctuation">,</span></code></pre><p>这样整体下来我的 package.json 内容如下</p><pre class=" language-json"><code class="language-json">&amp;#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"hexo-site"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"private"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"hexo generate"</span><span class="token punctuation">,</span>    <span class="token property">"clean"</span><span class="token operator">:</span> <span class="token string">"hexo clean"</span><span class="token punctuation">,</span>    <span class="token property">"deploy"</span><span class="token operator">:</span> <span class="token string">"hexo deploy"</span><span class="token punctuation">,</span>    <span class="token property">"server"</span><span class="token operator">:</span> <span class="token string">"hexo server"</span><span class="token punctuation">,</span>    <span class="token property">"sync"</span><span class="token operator">:</span> <span class="token string">"yuque-hexo sync"</span><span class="token punctuation">,</span>    <span class="token property">"clean:yuque"</span><span class="token operator">:</span> <span class="token string">"yuque-hexo clean"</span>  &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token property">"yuqueConfig"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token property">"postPath"</span><span class="token operator">:</span> <span class="token string">"source/_posts"</span><span class="token punctuation">,</span>    <span class="token property">"cachePath"</span><span class="token operator">:</span> <span class="token string">"yuque.json"</span><span class="token punctuation">,</span>    <span class="token property">"mdNameFormat"</span><span class="token operator">:</span> <span class="token string">"slug"</span><span class="token punctuation">,</span>    <span class="token property">"adapter"</span><span class="token operator">:</span> <span class="token string">"hexo"</span><span class="token punctuation">,</span>    <span class="token property">"concurrency"</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token property">"baseUrl"</span><span class="token operator">:</span> <span class="token string">"https://www.yuque.com/api/v2"</span><span class="token punctuation">,</span>    <span class="token property">"login"</span><span class="token operator">:</span> <span class="token string">"hxfqg9"</span><span class="token punctuation">,</span>    <span class="token property">"repo"</span><span class="token operator">:</span> <span class="token string">"web"</span><span class="token punctuation">,</span>    <span class="token property">"token"</span><span class="token operator">:</span> <span class="token string">"语雀token"</span><span class="token punctuation">,</span>    <span class="token property">"onlyPublished"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token property">"onlyPublic"</span><span class="token operator">:</span> <span class="token boolean">true</span>  &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token property">"devDependencies"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token property">"yuque-hexo"</span><span class="token operator">:</span> <span class="token string">"^1.6.0"</span>  &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token property">"hexo"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"4.2.1"</span>  &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token property">"dependencies"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token property">"hexo"</span><span class="token operator">:</span> <span class="token string">"^4.2.1"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-deployer-git"</span><span class="token operator">:</span> <span class="token string">"^2.1.0"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-generator-archive"</span><span class="token operator">:</span> <span class="token string">"^1.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-generator-baidu-sitemap"</span><span class="token operator">:</span> <span class="token string">"^0.1.6"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-generator-category"</span><span class="token operator">:</span> <span class="token string">"^1.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-generator-feed"</span><span class="token operator">:</span> <span class="token string">"^2.2.0"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-generator-index"</span><span class="token operator">:</span> <span class="token string">"^1.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-generator-json-content"</span><span class="token operator">:</span> <span class="token string">"^4.2.3"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-generator-searchdb"</span><span class="token operator">:</span> <span class="token string">"^1.3.1"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-generator-sitemap"</span><span class="token operator">:</span> <span class="token string">"^2.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-generator-tag"</span><span class="token operator">:</span> <span class="token string">"^1.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-renderer-ejs"</span><span class="token operator">:</span> <span class="token string">"^1.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-renderer-marked"</span><span class="token operator">:</span> <span class="token string">"^2.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-renderer-stylus"</span><span class="token operator">:</span> <span class="token string">"^1.1.0"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-server"</span><span class="token operator">:</span> <span class="token string">"^1.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-wordcount"</span><span class="token operator">:</span> <span class="token string">"^6.0.1"</span>  &amp;#<span class="token number">125</span><span class="token punctuation">;</span>&amp;#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><p>这时候用 <code>yuque-hexo sync</code> 就会把语雀的文章给下载下来，下载到 \source_posts</p><p>然后 <code>hexo g &amp;&amp; hexo s</code> 就可以访问 <code>127.0.0.1:4000</code> 本地看一下了<br>手动发布是 <code>hexo g &amp;&amp; hexo d</code></p><p><strong>针对语雀图片无法正常显示的解决办法</strong><br>在主题的 layout 文件夹中的 post.ejs 文件中加上一句</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>referrer<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594907231130-a2e3c7c0-d207-4151-9242-1f50e0d7ce7e.png#align=left&display=inline&height=195&margin=%5Bobject%20Object%5D&name=image.png&originHeight=351&originWidth=841&size=45968&status=done&style=stroke&width=468" alt="image.png"></p><h1 id="github-actions-自动更新"><a href="#github-actions-自动更新" class="headerlink" title="github actions 自动更新"></a>github actions 自动更新</h1><p>在 github 上创建一个私有仓库（因为会涉及到一些 token 啥的）仓库名字无所谓<br><strong>注意</strong>：在仓库里面再放一个仓库是没法把里面那个仓库 push 到 github 的，只会传一个空文件夹，导致后期博客成了空白页面，最简单粗暴的办法就是把你 git clone 的 hexo 主题里的 <code>.git</code> 文件夹给删掉</p><p>然后在 hexo 的目录下运行如下命令</p><pre class=" language-git"><code class="language-git">git initgit add .git commit -m <span class="token string">"first commit"</span>git remote add origin https://github.com/yichen115/blog.gitgit push -u origin master</code></pre><p>去 github 的 settings 创建一个 token</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594907389117-35b3ce5c-a92c-4aa7-92be-54649660707f.png#align=left&display=inline&height=293&margin=%5Bobject%20Object%5D&name=image.png&originHeight=585&originWidth=1620&size=86343&status=done&style=stroke&width=810" alt="image.png"></p><p>只勾上这一个即可</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594907459775-b583ee13-02ef-43a1-9ae4-0ca550bfafd2.png#align=left&display=inline&height=314&margin=%5Bobject%20Object%5D&name=image.png&originHeight=627&originWidth=746&size=51696&status=done&style=stroke&width=373" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594907515533-450ee291-fb82-43d5-b398-6c71161fb93d.png#align=left&display=inline&height=223&margin=%5Bobject%20Object%5D&name=image.png&originHeight=445&originWidth=1015&size=45884&status=done&style=stroke&width=507.5" alt="image.png"></p><p>生成了 token 之后一定要记下来，再回来就没法看了</p><p>然后来到刚才创建的私有仓库的 settings</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594907596811-6c001063-9e2a-4f7d-86b3-0fe426dfc794.png#align=left&display=inline&height=343&margin=%5Bobject%20Object%5D&name=image.png&originHeight=686&originWidth=1769&size=86336&status=done&style=stroke&width=884.5" alt="image.png"></p><p>添加两个 secret<br><strong>GH_REF</strong> 是你博客的仓库地址 github.com/yichen115/yichen115.github.io<br>注意去掉前面 https://</p><p><strong>GE_TOKEN</strong> 是刚才生成的 token</p><p>然后来到 actions，点击 set up a workflow yourself</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594907728538-4ded4257-da88-4361-8f2f-e8ba4d107e75.png#align=left&display=inline&height=267&margin=%5Bobject%20Object%5D&name=image.png&originHeight=534&originWidth=1023&size=70314&status=done&style=stroke&width=511.5" alt="image.png"></p><p>编辑内容如下：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span> Blog CI/CD<span class="token key atrule">on</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>push<span class="token punctuation">,</span> repository_dispatch<span class="token punctuation">]</span><span class="token key atrule">jobs</span><span class="token punctuation">:</span>  <span class="token key atrule">blog-cicd</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> Hexo blog build &amp; deploy    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest    <span class="token key atrule">env</span><span class="token punctuation">:</span>      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> Asia/Shanghai    <span class="token key atrule">steps</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout codes        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup node        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v1        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token string">"12.x"</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Cache node modules        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/cache@v1        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">path</span><span class="token punctuation">:</span> ~/.npm          <span class="token key atrule">key</span><span class="token punctuation">:</span> $&amp;<span class="token comment" spellcheck="true">#123;&amp;#123; runner.os &amp;#125;&amp;#125;-node-$&amp;#123;&amp;#123; hashFiles('**/package-lock.json') &amp;#125;&amp;#125;</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install dependencies        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          npm install hexo-cli -g          npm install yuque-hexo -g          npm install          yuque-hexo sync</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Generate files        <span class="token key atrule">run</span><span class="token punctuation">:</span> hexo generate      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy blog        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          git clone "https://$&amp;#123;&amp;#123; secrets.GH_REF &amp;#125;&amp;#125;" deploy_git          mv ./deploy_git/.git ./public/          cd ./public          git config user.name "yichen"          git config user.email "1097179511@qq.com"          git add .          git commit -m "GitHub Actions Auto Builder at $(date +'%Y-%m-%d %H:%M:%S')"          git push --force --quiet "https://$&amp;#123;&amp;#123; secrets.GH_TOKEN &amp;#125;&amp;#125;@$&amp;#123;&amp;#123; secrets.GH_REF &amp;#125;&amp;#125;" master:master</span></code></pre><p>下面那个 user.name 和 user.email 根据自己的情况改一下，注意对齐</p><p>弄完之后每当 push 或 repository_dispatch 的时候都会自动的进行更新</p><h1 id="配置-serverless-云函数"><a href="#配置-serverless-云函数" class="headerlink" title="配置 serverless 云函数"></a>配置 serverless 云函数</h1><p>来这里 <a href="https://console.cloud.tencent.com/scf/">https://console.cloud.tencent.com/scf/</a> 注册个账号<br>新建一个函数服务</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594908198919-65a8454a-6c7f-423c-9f1c-8f2303dba8e1.png#align=left&display=inline&height=219&margin=%5Bobject%20Object%5D&name=image.png&originHeight=438&originWidth=1084&size=39713&status=done&style=stroke&width=542" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594908241755-2c116717-6257-4157-b901-c5f815fa0746.png#align=left&display=inline&height=244&margin=%5Bobject%20Object%5D&name=image.png&originHeight=488&originWidth=776&size=31268&status=done&style=stroke&width=388" alt="image.png"></p><p>内容写</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf8 -*-</span><span class="token keyword">import</span> requests<span class="token keyword">def</span> <span class="token function">main_handler</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">:</span>    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">"https://api.github.com/repos/yichen115/blog/dispatches"</span><span class="token punctuation">,</span>    json <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;"event_type": "run-it"&amp;#125;,</span>    headers <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;"User-Agent":'curl/7.52.1',</span>              <span class="token string">'Content-Type'</span><span class="token punctuation">:</span> <span class="token string">'application/json'</span><span class="token punctuation">,</span>              <span class="token string">'Accept'</span><span class="token punctuation">:</span> <span class="token string">'application/vnd.github.everest-preview+json'</span><span class="token punctuation">,</span>              <span class="token string">'Authorization'</span><span class="token punctuation">:</span> <span class="token string">'token 你的GH_TOKEN'</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;)</span>    <span class="token keyword">if</span> r<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">204</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"This's OK!"</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> r<span class="token punctuation">.</span>status_code</code></pre><p>post 请求里只需要改用户名和仓库名（yichen115/blog）后面是固定的<br>那个 token 是带着的，完整的就是 ‘Authorization’: ‘token xxxxxxxxxxxxxx’</p><p>点下面那个测试，返回 This’s OK!</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594908381040-ed7eea9c-3a31-4aa9-b5bf-f52aedbc3b2c.png#align=left&display=inline&height=160&margin=%5Bobject%20Object%5D&name=image.png&originHeight=320&originWidth=582&size=13660&status=done&style=stroke&width=291" alt="image.png"></p><p>同时 github actions 也会收到指令，去执行之前在 main.yml 设定好的</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594908463062-3bfbcd34-0652-4de5-b222-0f0b01a8258a.png#align=left&display=inline&height=270&margin=%5Bobject%20Object%5D&name=image.png&originHeight=539&originWidth=1115&size=50764&status=done&style=stroke&width=557.5" alt="image.png"></p><p>过一阵就成下面那个绿色的对号了，然后去访问一下博客，看看是否正常。可以的话就证明云函数可以了</p><p>创建一个触发器</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594908622171-b3d1f2e4-9e6e-4ef1-9e39-689c0ad36fef.png#align=left&display=inline&height=200&margin=%5Bobject%20Object%5D&name=image.png&originHeight=400&originWidth=730&size=32431&status=done&style=stroke&width=365" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594905642566-7df0adc3-6d78-409c-bec0-7886aefed25b.png#align=left&display=inline&height=332&margin=%5Bobject%20Object%5D&name=image.png&originHeight=663&originWidth=925&size=46379&status=done&style=stroke&width=462.5" alt="image.png"></p><p>他会给你一个访问路径，记下来</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594908721093-7679f975-e4c2-4386-bc3f-adae0bdc91b8.png#align=left&display=inline&height=234&margin=%5Bobject%20Object%5D&name=image.png&originHeight=467&originWidth=712&size=30610&status=done&style=stroke&width=356" alt="image.png"></p><h1 id="配置语雀-webhook"><a href="#配置语雀-webhook" class="headerlink" title="配置语雀 webhook"></a>配置语雀 webhook</h1><p>在知识库中选择设置</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594908818070-60085ef8-46d5-44b3-af0b-e6946125f6dd.png#align=left&display=inline&height=175&margin=%5Bobject%20Object%5D&name=image.png&originHeight=349&originWidth=473&size=13535&status=done&style=stroke&width=236.5" alt="image.png"></p><p>触发规则自己定就好啦</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594908880210-34a97734-e0a4-4d64-89bd-8e6976ce7a37.png#align=left&display=inline&height=280&margin=%5Bobject%20Object%5D&name=image.png&originHeight=559&originWidth=1134&size=54956&status=done&style=stroke&width=567" alt="image.png"></p><p>**<br>这篇文章更新的时候发现有失败的可能<br>**<br><strong><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594909836406-93471a4a-4ea0-4417-89d3-d1230ca044f7.png#align=left&display=inline&height=155&margin=%5Bobject%20Object%5D&name=image.png&originHeight=172&originWidth=290&size=6687&status=done&style=stroke&width=262" alt="image.png"></strong><br>**<br><strong>我的博客地址：</strong><a href="https://yichen115.github.io/"><strong>https://yichen115.github.io</strong></a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>测试语雀--变量“无法”引用&amp;amp;yq 文本加密</title>
      <link href="/2020/08/30/rzt7w7/"/>
      <url>/2020/08/30/rzt7w7/</url>
      
        <content type="html"><![CDATA[<p>测试通过！</p><p>有的时候云函数回调用失败！</p><p><strong>变量需要在源 blog 里。</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>报错 git push -u origin master</title>
      <link href="/2020/08/30/drkrdi/"/>
      <url>/2020/08/30/drkrdi/</url>
      
        <content type="html"><![CDATA[<p>1884  2020-08-28 17:29:45 root git clone <a href="https://gitee.com/yadong.zhang/DBlog.git">https://gitee.com/yadong.zhang/DBlog.git</a><br>1885  2020-08-28 17:29:51 root ls -l<br>1886  2020-08-28 17:29:56 root cd DBlog/<br>1887  2020-08-28 17:30:37 root ls -l<br>1888  2020-08-28 17:30:55 root chmod 755 build.sh<br>1889  2020-08-28 17:30:57 root ls -l<br>1890  2020-08-28 17:31:06 root ./build.sh dev<br>1891  2020-08-28 18:17:39 root cd project/<br>1892  2020-08-28 18:17:49 root cd DBlog/<br>1893  2020-08-28 18:17:51 root ls -l<br>1894  2020-08-28 18:18:00 root cd docs/<br>1895  2020-08-28 18:18:01 root ls -l<br>1896  2020-08-28 18:18:06 root cd db/<br>1897  2020-08-28 18:18:09 root ls -l<br>1898  2020-08-28 18:18:12 root pwd<br>1899  2020-08-28 18:22:07 root cd ../../<br>1900  2020-08-28 18:23:23 root ls -l<br>1901  2020-08-28 18:23:27 root cd ..<br>1902  2020-08-28 18:23:30 root ls -l<br>1903  2020-08-28 17:54:28 root redis-cli<br>1904  2020-08-28 18:01:20 root mysql -udb_ketang -p<br>1905  2020-08-28 18:02:25 root mysql -u db_ketang -p<br>1906  2020-08-28 18:02:44 root mysql -u root -p<br>1907  2020-08-28 18:07:08 root mysql -uroot -p<br>1908  2020-08-28 18:10:44 root mysql -udb_ketang -p<br>1909  2020-08-28 18:11:03 root mysql -udb_ketang -pguest2020@<br>1910  2020-08-28 18:11:15 root mysql -udb_ketang -p<br>1911  2020-08-28 18:11:27 root mysql -uroot -p<br>1912  2020-08-28 18:21:52 root top<br>1913  2020-08-28 18:48:04 root ls<br>1914  2020-08-28 18:48:06 root jps<br>1915  2020-08-28 18:48:12 root ps<br>1916  2020-08-28 18:48:54 root jps<br>1917  2020-08-28 18:49:09 root ps<br>1918  2020-08-28 18:49:13 root jps<br>1919  2020-08-28 18:49:25 root natstat<br>1920  2020-08-28 18:49:31 root netstat<br>1921  2020-08-28 18:49:47 root netstat |grep 8085<br>1922  2020-08-28 18:51:13 root jps<br>1923  2020-08-28 18:51:19 root ps<br>1924  2020-08-29 12:02:05 root cd project/lastest/<br>1925  2020-08-29 12:02:07 root ls -l<br>1926  2020-08-29 12:02:23 root java -jar ketang-v1.jar &amp;<br>1927  2020-08-29 23:23:11 root ls -l<br>1928  2020-08-29 23:23:30 root ls -ltr<br>1929  2020-08-29 23:22:23 root ls -l<br>1930  2020-08-29 23:22:32 root npm i -g yuque-hexo<br>1931  2020-08-29 23:23:54 root ls -l<br>1932  2020-08-29 23:24:48 root git clone <a href="https://github.com/x-cold/yuque-hexo">https://github.com/x-cold/yuque-hexo</a><br>1933  2020-08-29 23:25:01 root ls -ltr<br>1934  2020-08-29 23:25:06 root cd yuque-hexo/<br>1935  2020-08-29 23:25:09 root ls -l<br>1936  2020-08-29 23:25:58 root cp package.json ../pr/<br>1937  2020-08-29 23:26:21 root cp package.json ../packa<br>1938  2020-08-29 23:26:27 root ls -ltr<br>1939  2020-08-29 23:26:32 root ll<br>1940  2020-08-29 23:26:54 root vi package.json<br>1941  2020-08-29 23:31:18 root cat package.json<br>1942  2020-08-29 23:32:16 root vi package.json<br>1943  2020-08-29 23:37:11 root cat package.json<br>1944  2020-08-29 23:39:48 root ls -l<br>1945  2020-08-29 23:39:55 root cd ..<br>1946  2020-08-29 23:39:58 root ls -l<br>1947  2020-08-29 23:40:20 root cp -R yuque-hexo yuque-hexo-bak<br>1948  2020-08-29 23:40:23 root ls -l<br>1949  2020-08-29 23:40:30 root ls -l yuque-hexo-bak/<br>1950  2020-08-29 23:40:34 root ls -l<br>1951  2020-08-29 23:40:40 root cd -<br>1952  2020-08-29 23:40:44 root pwd<br>1953  2020-08-29 23:40:46 root ls -l<br>1954  2020-08-29 23:40:56 root git init<br>1955  2020-08-29 23:41:04 root ls -la<br>1956  2020-08-29 23:42:46 root git add .<br>1957  2020-08-29 23:42:58 root git commit -m “first commit”<br>1958  2020-08-29 23:43:59 root git config –global user.email “2488809638.com”<br>1959  2020-08-29 23:44:29 root git config –global user.name “future1314”<br>1960  2020-08-29 23:44:34 root git commit -m “first commit”<br>1961  2020-08-29 23:46:04 root git remote add origin <a href="https://github.com/future1314/yqblog.git">https://github.com/future1314/yqblog.git</a><br>1962  2020-08-29 23:47:08 root git remote -vv<br>1963  2020-08-29 23:48:05 root git remote add origin <a href="https://github.com/future1314/yqblog.git">https://github.com/future1314/yqblog.git</a><br>1964  2020-08-29 23:48:32 root git remote add origi2n <a href="https://github.com/future1314/yqblog.git">https://github.com/future1314/yqblog.git</a><br>1965  2020-08-29 23:48:43 root git remote -vv<br>1966  2020-08-29 23:49:07 root git push -u origi2n master<br>1967  2020-08-30 11:18:14 root cd ../lib/node_modules/hexo-cli/bin/hexo<br>1968  2020-08-30 11:18:24 root cd /lib/node_modules/hexo-cli/bin/hexo<br>1969  2020-08-30 11:19:04 root cd /opt/node-v12.18.3-linux-x64<br>1970  2020-08-30 11:19:06 root cd /lib/node_modules/hexo-cli/bin/hexo<br>1971  2020-08-30 11:19:14 root cd lib/node_modules/hexo-cli/bin/hexo<br>1972  2020-08-30 11:19:24 root cd lib/node_modules/hexo-cli/bin/<br>1973  2020-08-30 11:19:27 root hxo<br>1974  2020-08-30 11:19:31 root hexo<br>1975  2020-08-30 11:19:34 root ls -l<br>1976  2020-08-30 11:19:41 root ./hexo<br>1977  2020-08-30 11:19:51 root ./hexo -version<br>1978  2020-08-30 11:19:57 root ./hexo -v<br>1979  2020-08-30 11:20:01 root ./hexo v<br>1980  2020-08-30 11:22:30 root pwd<br>1981  2020-08-30 11:22:45 root top<br>1982  2020-08-30 11:27:12 root ls -l<br>1983  2020-08-30 11:27:18 root cd ..<br>1984  2020-08-30 11:27:20 root ls -l<br>1985  2020-08-30 11:27:24 root cd ../<br>1986  2020-08-30 11:27:26 root ls -l<br>1987  2020-08-30 11:27:31 root cd yuque-hexo/<br>1988  2020-08-30 11:27:33 root pwd<br>1989  2020-08-30 11:28:34 root cd -<br>1990  2020-08-30 11:28:38 root pwd<br>1991  2020-08-30 11:29:03 root cd ~<br>1992  2020-08-30 11:29:05 root pwd<br>1993  2020-08-30 11:29:14 root cd project/yu<br>1994  2020-08-30 11:29:19 root cd project/<br>1995  2020-08-30 11:29:22 root cd ../<br>1996  2020-08-30 11:29:24 root cd yuque-hexo<br>1997  2020-08-30 11:29:27 root ls -l<br>1998  2020-08-30 11:29:32 root yuque-hexo sync<br>1999  2020-08-30 11:29:57 root pwd<br>2000  2020-08-30 11:30:04 root cat package.json<br>2001  2020-08-30 11:31:01 root tsource /etc/profile<br>2002  2020-08-30 11:31:02 root source /etc/profile<br>2003  2020-08-30 11:31:06 root yuque-hexo sync<br>2004  2020-08-30 11:33:04 root top<br>2005  2020-08-30 11:34:02 root pwdf<br>2006  2020-08-30 11:34:03 root pwd<br>2007  2020-08-30 11:34:10 root ls -l<br>2008  2020-08-30 11:34:23 root yuque-hexo sync<br>2009  2020-08-30 11:34:30 root ./yuque-hexo sync<br>2010  2020-08-30 11:34:38 root top<br>2011  2020-08-30 11:39:08 root yuque-hexo sync<br>2012  2020-08-30 11:39:13 root yuque-hexo.js<br>2013  2020-08-30 11:40:33 root yuque-hexo.js sync<br>2014  2020-08-30 11:41:08 root ls -l<br>2015  2020-08-30 11:41:16 root cd source/<br>2016  2020-08-30 11:41:18 root ls -l<br>2017  2020-08-30 11:41:20 root cd _posts/<br>2018  2020-08-30 11:41:23 root ls -l<br>2019  2020-08-30 11:42:29 root hexo g &amp;&amp; hexo s<br>2020  2020-08-30 11:42:47 root cd ../..<br>2021  2020-08-30 11:42:50 root ls -l<br>2022  2020-08-30 11:42:54 root hexo g &amp;&amp; hexo s<br>2023  2020-08-30 11:43:40 root cat config.js<br>2024  2020-08-30 11:44:32 root ls -l<br>2025  2020-08-30 11:44:47 root hexo g &amp;&amp; hexo s<br>2026  2020-08-30 11:45:10 root hexo<br>2027  2020-08-30 11:45:47 root source /etc/profile<br>2028  2020-08-30 11:45:49 root hexo<br>2029  2020-08-30 11:47:41 root hexo g &amp;&amp; hexo s<br>2030  2020-08-30 11:48:06 root ls -l<br>2031  2020-08-30 11:48:12 root cat yuque.json<br>2032  2020-08-30 11:48:49 root ls -l<br>2033  2020-08-30 11:48:53 root cat package.json<br>2034  2020-08-30 11:50:25 root hexo g &amp;&amp; hexo s<br>2035  2020-08-30 11:50:33 root cd /<br>2036  2020-08-30 11:50:35 root hexo g &amp;&amp; hexo s<br>2037  2020-08-30 11:55:56 root hexo g &amp;&amp; hexo s<br>2038  2020-08-30 11:56:33 root top<br>2039  2020-08-30 11:58:48 root hexo g &amp;&amp; hexo s<br>2040  2020-08-30 11:59:11 root hexo help<br>2041  2020-08-30 11:59:35 root hexo<br>2042  2020-08-30 11:59:42 root hexo -v<br>2043  2020-08-30 12:00:13 root top<br>2044  2020-08-30 12:04:38 root pwd<br>2045  2020-08-30 12:04:42 root hexo s<br>2046  2020-08-30 12:04:51 root hexo server<br>2047  2020-08-30 12:05:08 root cd yuque-hexo<br>2048  2020-08-30 12:05:24 root hexo s<br>2049  2020-08-30 12:05:28 root hexo server<br>2050  2020-08-30 12:05:39 root ls -l<br>2051  2020-08-30 12:05:51 root hexo server<br>2052  2020-08-30 12:06:25 root rm -rf node_modules &amp;&amp; npm install –force<br>2053  2020-08-30 12:07:07 root hexo server<br>2054  2020-08-30 12:07:29 root npm audit fix<br>2055  2020-08-30 12:07:57 root hexo server<br>2056  2020-08-30 12:08:18 root top<br>2057  2020-08-30 12:09:38 root npm install hexo –save<br>2058  2020-08-30 12:10:14 root hexo server<br>2059  2020-08-30 12:10:24 root ls -l<br>2060  2020-08-30 12:10:45 root hexo g &amp;&amp; hexo s<br>2061  2020-08-30 12:13:08 root top<br>2062  2020-08-30 12:13:35 root npm install -g hexo-cli<br>2063  2020-08-30 12:13:48 root hexo g &amp;&amp; hexo s<br>2064  2020-08-30 12:13:57 root top<br>2065  2020-08-30 12:15:04 root npm install hexo-deployer-git –save<br>2066  2020-08-30 12:15:48 root hexo clean &amp;&amp; hexo g &amp;&amp; hexo deploy<br>2067  2020-08-30 12:15:59 root ls -l<br>2068  2020-08-30 12:16:22 root hexo g &amp;&amp; hexo s<br>2069  2020-08-30 12:16:53 root hexo generate &amp;&amp; hexo server<br>2070  2020-08-30 12:18:04 root npm install hexo-deployer-git –save<br>2071  2020-08-30 12:18:20 root hexo generate &amp;&amp; hexo server<br>2072  2020-08-30 12:19:09 root hexo g &amp;&amp; hexo s<br>2073  2020-08-30 12:19:13 root git config –list<br>2074  2020-08-30 12:19:49 root git config –global user.email “<em>**@163.com”<br>2075  2020-08-30 12:19:51 root git config –list<br>2076  2020-08-30 12:20:25 root ls -l<br>2077  2020-08-30 12:20:37 root vi config.js<br>2078  2020-08-30 12:21:56 root hexo deploy<br>2079  2020-08-30 12:23:56 root top<br>2080  2020-08-30 12:26:56 root ls -l<br>2081  2020-08-30 12:27:03 root cd source/_posts/<br>2082  2020-08-30 12:27:06 root ll<br>2083  2020-08-30 12:27:14 root cat bfeage.md<br>2084  2020-08-30 12:27:22 root ll<br>2085  2020-08-30 12:27:25 root ls -l<br>2086  2020-08-30 12:27:48 root npm i -g yuque-hexo<br>2087  2020-08-30 12:28:34 root ls -l<br>2088  2020-08-30 12:28:37 root cd -<br>2089  2020-08-30 12:28:40 root ls -l<br>2090  2020-08-30 12:28:45 root cd node_modules/<br>2091  2020-08-30 12:28:48 root ll<br>2092  2020-08-30 12:29:02 root cd ..<br>2093  2020-08-30 12:29:04 root ls -l<br>2094  2020-08-30 12:29:24 root hexo<br>2095  2020-08-30 13:01:16 root cd yuque-hexo<br>2096  2020-08-30 13:01:18 root ls -l<br>2097  2020-08-30 13:01:29 root git diff<br>2098  2020-08-30 13:01:56 root ls -ltr<br> 2099  2020-08-30 13:02:00 root ls -ltr<br>2100  2020-08-30 13:02:15 root hexo<br>2101  2020-08-30 12:52:23 root git remote add origin <a href="https://github.com/future1314/yqblog.git">https://github.com/future1314/yqblog.git</a><br>2102  2020-08-30 12:52:26 root cd yuque-hexo<br>2103  2020-08-30 12:52:28 root ls -l<br>2104  2020-08-30 12:52:32 root top<br>2105  2020-08-30 12:53:43 root npm install -g hexo<br>2106  2020-08-30 12:54:04 root ls -l<br>2107  2020-08-30 12:54:31 root hexo init<br>2108  2020-08-30 12:55:08 root ls -l<br>2109  2020-08-30 12:55:17 root cd public/<br>2110  2020-08-30 12:55:19 root ls -l<br>2111  2020-08-30 12:55:23 root cd ..<br>2112  2020-08-30 13:42:54 root cd yuque-hexo<br>2113  2020-08-30 13:43:00 root git remote -vv<br>2114  2020-08-30 13:43:16 root top<br>2115  2020-08-30 13:46:09 root pwd<br>2116  2020-08-30 13:46:13 root hexo<br>2117  2020-08-30 13:46:26 root which hexo<br>2118  2020-08-30 13:46:35 root ls -l<br>2119  2020-08-30 13:46:39 root cd node_modules/<br>2120  2020-08-30 13:46:43 root ls -l<br>2121  2020-08-30 13:46:49 root ls -l h<br>2122  2020-08-30 13:46:52 root ls -l h</em><br>2123  2020-08-30 13:47:13 root ll<br>2124  2020-08-30 13:47:21 root cd ..<br>2125  2020-08-30 13:47:27 root cd bin/<br>2126  2020-08-30 13:47:29 root ls -l<br>2127  2020-08-30 13:47:52 root cd ..<br>2128  2020-08-30 13:48:02 root git push -u origi2n master<br>2129  2020-08-30 13:49:14 root git add .<br>2130  2020-08-30 13:49:38 root git commit -m “update”<br>2131  2020-08-30 13:50:04 root cat package.json<br>2132  2020-08-30 13:50:13 root git commit -m “update”<br>2133  2020-08-30 13:50:25 root git push -u origi2n master<br>2134  2020-08-30 13:50:59 root git diff<br>2135  2020-08-30 13:51:09 root git pull<br>2136  2020-08-30 13:53:25 root git push -u origi2n master<br>2137  2020-08-30 13:54:14 root git diff<br>2138  2020-08-30 16:34:20 root cd h<br>2139  2020-08-30 16:34:29 root cd blog/<br>2140  2020-08-30 16:34:31 root ls -ltr<br>2141  2020-08-30 16:34:41 root vi package.json<br>2142  2020-08-30 16:38:49 root cat  package.json<br>2143  2020-08-30 16:40:20 root vi package.json<br>2144  2020-08-30 16:41:15 root ls -l<br>2145  2020-08-30 16:42:54 root top<br>2146  2020-08-30 16:43:42 root histyory<br>2147  2020-08-30 16:43:46 root history<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#</p><hr><h2 id="hexo-init-foderName"><a href="#hexo-init-foderName" class="headerlink" title="hexo init foderName"></a>hexo init foderName</h2><p>[root@hecs-x-medium-2-linux-20200322093022 blog]# ls -l<br>总用量 80<br>-rw-r–r–   1 root root  2441 8 月  30 16:16 _config.yml<br>drwxr-xr-x 162 root root  4096 8 月  30 16:17 node_modules<br>-rw-r–r–   1 root root  1070 8 月  30 16:40 package.json<br>-rw-r–r–   1 root root 55016 8 月  30 16:17 package-lock.json<br>drwxr-xr-x   2 root root  4096 8 月  30 16:16 scaffolds<br>drwxr-xr-x   3 root root  4096 8 月  30 16:16 source<br>drwxr-xr-x   3 root root  4096 8 月  30 16:16 themes<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# <strong>npm install</strong><br>npm WARN optional SKIPPING OPTIONAL DEPENDENCY: <a href="mailto:&#102;&#115;&#x65;&#x76;&#101;&#x6e;&#x74;&#115;&#64;&#x32;&#x2e;&#49;&#46;&#x33;">&#102;&#115;&#x65;&#x76;&#101;&#x6e;&#x74;&#115;&#64;&#x32;&#x2e;&#49;&#46;&#x33;</a> (node_modules/fsevents):<br>npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for <a href="mailto:&#x66;&#115;&#x65;&#x76;&#101;&#x6e;&#116;&#115;&#64;&#x32;&#46;&#49;&#x2e;&#x33;">&#x66;&#115;&#x65;&#x76;&#101;&#x6e;&#116;&#115;&#64;&#x32;&#46;&#49;&#x2e;&#x33;</a>: wanted {“os”:”darwin”,”arch”:”any”} (current: {“os”:”linux”,”arch”:”x64”})</p><p>added 225 packages from 160 contributors and audited 409 packages in 11.415s</p><p>10 packages are looking for funding<br> run <code>npm fund</code> for details</p><p>found 2 low severity vulnerabilities<br> run <code>npm audit fix</code> to fix them, or <code>npm audit</code> for details<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# ls -l<br>总用量 156<br>-rw-r–r–   1 root root   2441 8 月  30 16:16 _config.yml<br>drwxr-xr-x 313 root root  12288 8 月  30 16:44 node_modules<br>-rw-r–r–   1 root root   1068 8 月  30 16:44 package.json<br>-rw-r–r–   1 root root 124126 8 月  30 16:44 package-lock.json<br>drwxr-xr-x   2 root root   4096 8 月  30 16:16 scaffolds<br>drwxr-xr-x   3 root root   4096 8 月  30 16:16 source<br>drwxr-xr-x   3 root root   4096 8 月  30 16:16 themes<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# tree .<br>-bash: tree: 未找到命令<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# <strong>cat _config.yml</strong></p><h1 id="Hexo-Configuration"><a href="#Hexo-Configuration" class="headerlink" title="Hexo Configuration"></a>Hexo Configuration</h1><h2 id="Docs-https-hexo-io-docs-configuration-html"><a href="#Docs-https-hexo-io-docs-configuration-html" class="headerlink" title="Docs: https://hexo.io/docs/configuration.html"></a>Docs: <a href="https://hexo.io/docs/configuration.html">https://hexo.io/docs/configuration.html</a></h2><h2 id="Source-https-github-com-hexojs-hexo"><a href="#Source-https-github-com-hexojs-hexo" class="headerlink" title="Source: https://github.com/hexojs/hexo/"></a>Source: <a href="https://github.com/hexojs/hexo/">https://github.com/hexojs/hexo/</a></h2><h1 id="Site"><a href="#Site" class="headerlink" title="Site"></a>Site</h1><p>title: Hexo<br>subtitle: ‘’<br>description: ‘’<br>keywords:<br>author: John Doe<br>language: en<br>timezone: ‘’</p><h1 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h1><h2 id="If-your-site-is-put-in-a-subdirectory-set-url-as-‘http-yoursite-com-child-39-and-root-as-‘-child-‘"><a href="#If-your-site-is-put-in-a-subdirectory-set-url-as-‘http-yoursite-com-child-39-and-root-as-‘-child-‘" class="headerlink" title="If your site is put in a subdirectory, set url as ‘http://yoursite.com/child&#39; and root as ‘/child/‘"></a>If your site is put in a subdirectory, set url as ‘<a href="http://yoursite.com/child&#39;">http://yoursite.com/child&#39;</a> and root as ‘/child/‘</h2><p>url: <a href="http://yoursite.com/">http://yoursite.com</a><br>root: /<br>permalink: :year/:month/:day/:title/<br>permalink_defaults:<br>pretty_urls:<br> trailing_index: true # Set to false to remove trailing ‘index.html’ from permalinks<br> trailing_html: true # Set to false to remove trailing ‘.html’ from permalinks</p><h1 id="Directory"><a href="#Directory" class="headerlink" title="Directory"></a>Directory</h1><p>source_dir: source<br>public_dir: public<br>tag_dir: tags<br>archive_dir: archives<br>category_dir: categories<br>code_dir: downloads/code<br>i18n_dir: :lang<br>skip_render:</p><h1 id="Writing"><a href="#Writing" class="headerlink" title="Writing"></a>Writing</h1><p>new_post_name: :title.md # File name of new posts<br>default_layout: post<br>titlecase: false # Transform title into titlecase<br>external_link:<br> enable: true # Open external links in new tab<br> field: site # Apply to the whole site<br> exclude: ‘’<br>filename_case: 0<br>render_drafts: false<br>post_asset_folder: false<br>relative_link: false<br>future: true<br>highlight:<br> enable: true<br> line_number: true<br> auto_detect: false<br> tab_replace: ‘’<br> wrap: true<br> hljs: false<br>prismjs:<br> enable: false<br> preprocess: true<br> line_number: true<br> tab_replace: ‘’</p><h1 id="Home-page-setting"><a href="#Home-page-setting" class="headerlink" title="Home page setting"></a>Home page setting</h1><h1 id="path-Root-path-for-your-blogs-index-page-default-‘’"><a href="#path-Root-path-for-your-blogs-index-page-default-‘’" class="headerlink" title="path: Root path for your blogs index page. (default = ‘’)"></a>path: Root path for your blogs index page. (default = ‘’)</h1><h1 id="per-page-Posts-displayed-per-page-0-disable-pagination"><a href="#per-page-Posts-displayed-per-page-0-disable-pagination" class="headerlink" title="per_page: Posts displayed per page. (0 = disable pagination)"></a>per_page: Posts displayed per page. (0 = disable pagination)</h1><h1 id="order-by-Posts-order-Order-by-date-descending-by-default"><a href="#order-by-Posts-order-Order-by-date-descending-by-default" class="headerlink" title="order_by: Posts order. (Order by date descending by default)"></a>order_by: Posts order. (Order by date descending by default)</h1><p>index_generator:<br> path: ‘’<br> per_page: 10<br> order_by: -date</p><h1 id="Category-amp-Tag"><a href="#Category-amp-Tag" class="headerlink" title="Category &amp; Tag"></a>Category &amp; Tag</h1><p>default_category: uncategorized<br>category_map:<br>tag_map:</p><h1 id="Metadata-elements"><a href="#Metadata-elements" class="headerlink" title="Metadata elements"></a>Metadata elements</h1><h2 id="https-developer-mozilla-org-en-US-docs-Web-HTML-Element-meta"><a href="#https-developer-mozilla-org-en-US-docs-Web-HTML-Element-meta" class="headerlink" title="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta"></a><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</a></h2><p>meta_generator: true</p><h1 id="Date-Time-format"><a href="#Date-Time-format" class="headerlink" title="Date / Time format"></a>Date / Time format</h1><h2 id="Hexo-uses-Moment-js-to-parse-and-display-date"><a href="#Hexo-uses-Moment-js-to-parse-and-display-date" class="headerlink" title="Hexo uses Moment.js to parse and display date"></a>Hexo uses Moment.js to parse and display date</h2><h2 id="You-can-customize-the-date-format-as-defined-in"><a href="#You-can-customize-the-date-format-as-defined-in" class="headerlink" title="You can customize the date format as defined in"></a>You can customize the date format as defined in</h2><h2 id="http-momentjs-com-docs-displaying-format"><a href="#http-momentjs-com-docs-displaying-format" class="headerlink" title="http://momentjs.com/docs/#/displaying/format/"></a><a href="http://momentjs.com/docs/#/displaying/format/">http://momentjs.com/docs/#/displaying/format/</a></h2><p>date_format: YYYY-MM-DD<br>time_format: HH:mm:ss</p><h2 id="updated-option-supports-‘mtime’-‘date’-‘empty’"><a href="#updated-option-supports-‘mtime’-‘date’-‘empty’" class="headerlink" title="updated_option supports ‘mtime’, ‘date’, ‘empty’"></a>updated_option supports ‘mtime’, ‘date’, ‘empty’</h2><p>updated_option: ‘mtime’</p><h1 id="Pagination"><a href="#Pagination" class="headerlink" title="Pagination"></a>Pagination</h1><h2 id="Set-per-page-to-0-to-disable-pagination"><a href="#Set-per-page-to-0-to-disable-pagination" class="headerlink" title="Set per_page to 0 to disable pagination"></a>Set per_page to 0 to disable pagination</h2><p>per_page: 10<br>pagination_dir: page</p><h1 id="Include-Exclude-file-s"><a href="#Include-Exclude-file-s" class="headerlink" title="Include / Exclude file(s)"></a>Include / Exclude file(s)</h1><h2 id="include-exclude-options-only-apply-to-the-‘source-‘-folder"><a href="#include-exclude-options-only-apply-to-the-‘source-‘-folder" class="headerlink" title="include:/exclude: options only apply to the ‘source/‘ folder"></a>include:/exclude: options only apply to the ‘source/‘ folder</h2><p>include:<br>exclude:<br>ignore:</p><h1 id="Extensions"><a href="#Extensions" class="headerlink" title="Extensions"></a>Extensions</h1><h2 id="Plugins-https-hexo-io-plugins"><a href="#Plugins-https-hexo-io-plugins" class="headerlink" title="Plugins: https://hexo.io/plugins/"></a>Plugins: <a href="https://hexo.io/plugins/">https://hexo.io/plugins/</a></h2><h2 id="Themes-https-hexo-io-themes"><a href="#Themes-https-hexo-io-themes" class="headerlink" title="Themes: https://hexo.io/themes/"></a>Themes: <a href="https://hexo.io/themes/">https://hexo.io/themes/</a></h2><p>theme: landscape</p><h1 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h1><h2 id="Docs-https-hexo-io-docs-one-command-deployment"><a href="#Docs-https-hexo-io-docs-one-command-deployment" class="headerlink" title="Docs: https://hexo.io/docs/one-command-deployment"></a>Docs: <a href="https://hexo.io/docs/one-command-deployment">https://hexo.io/docs/one-command-deployment</a></h2><p><strong>deploy:</strong><br>**  type: ‘’**</p><h1 id="Hexo-Configuration-1"><a href="#Hexo-Configuration-1" class="headerlink" title="Hexo Configuration"></a>Hexo Configuration</h1><h2 id="Docs-https-hexo-io-docs-configuration-html-1"><a href="#Docs-https-hexo-io-docs-configuration-html-1" class="headerlink" title="Docs: https://hexo.io/docs/configuration.html"></a>Docs: <a href="https://hexo.io/docs/configuration.html">https://hexo.io/docs/configuration.html</a></h2><h2 id="Source-https-github-com-hexojs-hexo-1"><a href="#Source-https-github-com-hexojs-hexo-1" class="headerlink" title="Source: https://github.com/hexojs/hexo/"></a>Source: <a href="https://github.com/hexojs/hexo/">https://github.com/hexojs/hexo/</a></h2><h1 id="Site-1"><a href="#Site-1" class="headerlink" title="Site"></a>Site</h1><p>title: Hexo<br>subtitle: ‘’<br>description: ‘’<br>keywords:<br>author: John Doe<br>language: en<br>timezone: ‘’</p><h1 id="URL-1"><a href="#URL-1" class="headerlink" title="URL"></a>URL</h1><h2 id="If-your-site-is-put-in-a-subdirectory-set-url-as-‘http-yoursite-com-child-39-and-root-as-‘-child-‘-1"><a href="#If-your-site-is-put-in-a-subdirectory-set-url-as-‘http-yoursite-com-child-39-and-root-as-‘-child-‘-1" class="headerlink" title="If your site is put in a subdirectory, set url as ‘http://yoursite.com/child&#39; and root as ‘/child/‘"></a>If your site is put in a subdirectory, set url as ‘<a href="http://yoursite.com/child&#39;">http://yoursite.com/child&#39;</a> and root as ‘/child/‘</h2><p>url: <a href="http://yoursite.com/">http://yoursite.com</a><br>root: /<br>permalink: :year/:month/:day/:title/<br>permalink_defaults:<br>pretty_urls:<br> trailing_index: true # Set to false to remove trailing ‘index.html’ from permalinks<br> trailing_html: true # Set to false to remove trailing ‘.html’ from permalinks</p><h1 id="Directory-1"><a href="#Directory-1" class="headerlink" title="Directory"></a>Directory</h1><p>“_config.yml” 106L, 2441C<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#** npm install hexo-deployer-git –save**<br>npm WARN optional SKIPPING OPTIONAL DEPENDENCY: <a href="mailto:&#x66;&#115;&#x65;&#118;&#x65;&#110;&#x74;&#115;&#64;&#x32;&#46;&#x31;&#x2e;&#51;">&#x66;&#115;&#x65;&#118;&#x65;&#110;&#x74;&#115;&#64;&#x32;&#46;&#x31;&#x2e;&#51;</a> (node_modules/fsevents):<br>npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for <a href="mailto:&#102;&#x73;&#x65;&#x76;&#101;&#x6e;&#116;&#x73;&#64;&#50;&#x2e;&#x31;&#46;&#51;">&#102;&#x73;&#x65;&#x76;&#101;&#x6e;&#116;&#x73;&#64;&#50;&#x2e;&#x31;&#46;&#51;</a>: wanted {“os”:”darwin”,”arch”:”any”} (current: {“os”:”linux”,”arch”:”x64”})</p><ul><li><a href="mailto:&#x68;&#101;&#x78;&#111;&#45;&#100;&#101;&#x70;&#x6c;&#111;&#x79;&#x65;&#114;&#45;&#x67;&#105;&#116;&#64;&#50;&#x2e;&#x31;&#x2e;&#48;">&#x68;&#101;&#x78;&#111;&#45;&#100;&#101;&#x70;&#x6c;&#111;&#x79;&#x65;&#114;&#45;&#x67;&#105;&#116;&#64;&#50;&#x2e;&#x31;&#x2e;&#48;</a><br>added 28 packages from 336 contributors and audited 437 packages in 7.521s</li></ul><p>10 packages are looking for funding<br> run <code>npm fund</code> for details</p><p>found 3 low severity vulnerabilities<br> run <code>npm audit fix</code> to fix them, or <code>npm audit</code> for details<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# ls -ltr<br>总用量 164<br>drwxr-xr-x   3 root root   4096 8 月  30 16:16 source<br>drwxr-xr-x   2 root root   4096 8 月  30 16:16 scaffolds<br>-rw-r–r–   1 root root   2441 8 月  30 16:16 _config.yml<br>drwxr-xr-x   3 root root   4096 8 月  30 16:16 themes<br>drwxr-xr-x 330 root root  12288 8 月  30 16:47 node_modules<br>-rw-r–r–   1 root root   1103 8 月  30 16:47 package.json<br>-rw-r–r–   1 root root 132199 8 月  30 16:47 package-lock.json<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# ls -l<br>总用量 164<br>-rw-r–r–   1 root root   2441 8 月  30 16:16 _config.yml<br>drwxr-xr-x 330 root root  12288 8 月  30 16:47 node_modules<br>-rw-r–r–   1 root root   1103 8 月  30 16:47 package.json<br>-rw-r–r–   1 root root 132199 8 月  30 16:47 package-lock.json<br>drwxr-xr-x   2 root root   4096 8 月  30 16:16 scaffolds<br>drwxr-xr-x   3 root root   4096 8 月  30 16:16 source<br>drwxr-xr-x   3 root root   4096 8 月  30 16:16 themes<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# vi _config.yml<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# ls -ltr<br>总用量 164<br>drwxr-xr-x   3 root root   4096 8 月  30 16:16 source<br>drwxr-xr-x   2 root root   4096 8 月  30 16:16 scaffolds<br>drwxr-xr-x   3 root root   4096 8 月  30 16:16 themes<br>drwxr-xr-x 330 root root  12288 8 月  30 16:47 node_modules<br>-rw-r–r–   1 root root   1103 8 月  30 16:47 package.json<br>-rw-r–r–   1 root root 132199 8 月  30 16:47 package-lock.json<br>-rw-r–r–   1 root root   2522 8 月  30 16:50 _config.yml<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# ls -l<br>总用量 164<br>-rw-r–r–   1 root root   2522 8 月  30 16:50 _config.yml<br>drwxr-xr-x 330 root root  12288 8 月  30 16:47 node_modules<br>-rw-r–r–   1 root root   1103 8 月  30 16:47 package.json<br>-rw-r–r–   1 root root 132199 8 月  30 16:47 package-lock.json<br>drwxr-xr-x   2 root root   4096 8 月  30 16:16 scaffolds<br>drwxr-xr-x   3 root root   4096 8 月  30 16:16 source<br>drwxr-xr-x   3 root root   4096 8 月  30 16:16 themes<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# cat _config.yml</p><h1 id="Hexo-Configuration-2"><a href="#Hexo-Configuration-2" class="headerlink" title="Hexo Configuration"></a>Hexo Configuration</h1><h2 id="Docs-https-hexo-io-docs-configuration-html-2"><a href="#Docs-https-hexo-io-docs-configuration-html-2" class="headerlink" title="Docs: https://hexo.io/docs/configuration.html"></a>Docs: <a href="https://hexo.io/docs/configuration.html">https://hexo.io/docs/configuration.html</a></h2><h2 id="Source-https-github-com-hexojs-hexo-2"><a href="#Source-https-github-com-hexojs-hexo-2" class="headerlink" title="Source: https://github.com/hexojs/hexo/"></a>Source: <a href="https://github.com/hexojs/hexo/">https://github.com/hexojs/hexo/</a></h2><h1 id="Site-2"><a href="#Site-2" class="headerlink" title="Site"></a>Site</h1><p>title: Hexo<br>subtitle: ‘’<br>description: ‘’<br>keywords:<br>author: John Doe<br>language: en<br>timezone: ‘’</p><h1 id="URL-2"><a href="#URL-2" class="headerlink" title="URL"></a>URL</h1><h2 id="If-your-site-is-put-in-a-subdirectory-set-url-as-‘http-yoursite-com-child-39-and-root-as-‘-child-‘-2"><a href="#If-your-site-is-put-in-a-subdirectory-set-url-as-‘http-yoursite-com-child-39-and-root-as-‘-child-‘-2" class="headerlink" title="If your site is put in a subdirectory, set url as ‘http://yoursite.com/child&#39; and root as ‘/child/‘"></a>If your site is put in a subdirectory, set url as ‘<a href="http://yoursite.com/child&#39;">http://yoursite.com/child&#39;</a> and root as ‘/child/‘</h2><p>url: <a href="http://yoursite.com/">http://yoursite.com</a><br>root: /<br>permalink: :year/:month/:day/:title/<br>permalink_defaults:<br>pretty_urls:<br> trailing_index: true # Set to false to remove trailing ‘index.html’ from permalinks<br> trailing_html: true # Set to false to remove trailing ‘.html’ from permalinks</p><h1 id="Directory-2"><a href="#Directory-2" class="headerlink" title="Directory"></a>Directory</h1><p>source_dir: source<br>public_dir: public<br>tag_dir: tags<br>archive_dir: archives<br>category_dir: categories<br>code_dir: downloads/code<br>i18n_dir: :lang<br>skip_render:</p><h1 id="Writing-1"><a href="#Writing-1" class="headerlink" title="Writing"></a>Writing</h1><p>new_post_name: :title.md # File name of new posts<br>default_layout: post<br>titlecase: false # Transform title into titlecase<br>external_link:<br> enable: true # Open external links in new tab<br> field: site # Apply to the whole site<br> exclude: ‘’<br>filename_case: 0<br>render_drafts: false<br>post_asset_folder: false<br>relative_link: false<br>future: true<br>highlight:<br> enable: true<br> line_number: true<br> auto_detect: false<br> tab_replace: ‘’<br> wrap: true<br> hljs: false<br>prismjs:<br> enable: false<br> preprocess: true<br> line_number: true<br> tab_replace: ‘’</p><h1 id="Home-page-setting-1"><a href="#Home-page-setting-1" class="headerlink" title="Home page setting"></a>Home page setting</h1><h1 id="path-Root-path-for-your-blogs-index-page-default-‘’-1"><a href="#path-Root-path-for-your-blogs-index-page-default-‘’-1" class="headerlink" title="path: Root path for your blogs index page. (default = ‘’)"></a>path: Root path for your blogs index page. (default = ‘’)</h1><h1 id="per-page-Posts-displayed-per-page-0-disable-pagination-1"><a href="#per-page-Posts-displayed-per-page-0-disable-pagination-1" class="headerlink" title="per_page: Posts displayed per page. (0 = disable pagination)"></a>per_page: Posts displayed per page. (0 = disable pagination)</h1><h1 id="order-by-Posts-order-Order-by-date-descending-by-default-1"><a href="#order-by-Posts-order-Order-by-date-descending-by-default-1" class="headerlink" title="order_by: Posts order. (Order by date descending by default)"></a>order_by: Posts order. (Order by date descending by default)</h1><p>index_generator:<br> path: ‘’<br> per_page: 10<br> order_by: -date</p><h1 id="Category-amp-Tag-1"><a href="#Category-amp-Tag-1" class="headerlink" title="Category &amp; Tag"></a>Category &amp; Tag</h1><p>default_category: uncategorized<br>category_map:<br>tag_map:</p><h1 id="Metadata-elements-1"><a href="#Metadata-elements-1" class="headerlink" title="Metadata elements"></a>Metadata elements</h1><h2 id="https-developer-mozilla-org-en-US-docs-Web-HTML-Element-meta-1"><a href="#https-developer-mozilla-org-en-US-docs-Web-HTML-Element-meta-1" class="headerlink" title="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta"></a><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</a></h2><p>meta_generator: true</p><h1 id="Date-Time-format-1"><a href="#Date-Time-format-1" class="headerlink" title="Date / Time format"></a>Date / Time format</h1><h2 id="Hexo-uses-Moment-js-to-parse-and-display-date-1"><a href="#Hexo-uses-Moment-js-to-parse-and-display-date-1" class="headerlink" title="Hexo uses Moment.js to parse and display date"></a>Hexo uses Moment.js to parse and display date</h2><h2 id="You-can-customize-the-date-format-as-defined-in-1"><a href="#You-can-customize-the-date-format-as-defined-in-1" class="headerlink" title="You can customize the date format as defined in"></a>You can customize the date format as defined in</h2><h2 id="http-momentjs-com-docs-displaying-format-1"><a href="#http-momentjs-com-docs-displaying-format-1" class="headerlink" title="http://momentjs.com/docs/#/displaying/format/"></a><a href="http://momentjs.com/docs/#/displaying/format/">http://momentjs.com/docs/#/displaying/format/</a></h2><p>date_format: YYYY-MM-DD<br>time_format: HH:mm:ss</p><h2 id="updated-option-supports-‘mtime’-‘date’-‘empty’-1"><a href="#updated-option-supports-‘mtime’-‘date’-‘empty’-1" class="headerlink" title="updated_option supports ‘mtime’, ‘date’, ‘empty’"></a>updated_option supports ‘mtime’, ‘date’, ‘empty’</h2><p>updated_option: ‘mtime’</p><h1 id="Pagination-1"><a href="#Pagination-1" class="headerlink" title="Pagination"></a>Pagination</h1><h2 id="Set-per-page-to-0-to-disable-pagination-1"><a href="#Set-per-page-to-0-to-disable-pagination-1" class="headerlink" title="Set per_page to 0 to disable pagination"></a>Set per_page to 0 to disable pagination</h2><p>per_page: 10<br>pagination_dir: page</p><h1 id="Include-Exclude-file-s-1"><a href="#Include-Exclude-file-s-1" class="headerlink" title="Include / Exclude file(s)"></a>Include / Exclude file(s)</h1><h2 id="include-exclude-options-only-apply-to-the-‘source-‘-folder-1"><a href="#include-exclude-options-only-apply-to-the-‘source-‘-folder-1" class="headerlink" title="include:/exclude: options only apply to the ‘source/‘ folder"></a>include:/exclude: options only apply to the ‘source/‘ folder</h2><p>include:<br>exclude:<br>ignore:</p><h1 id="Extensions-1"><a href="#Extensions-1" class="headerlink" title="Extensions"></a>Extensions</h1><h2 id="Plugins-https-hexo-io-plugins-1"><a href="#Plugins-https-hexo-io-plugins-1" class="headerlink" title="Plugins: https://hexo.io/plugins/"></a>Plugins: <a href="https://hexo.io/plugins/">https://hexo.io/plugins/</a></h2><h2 id="Themes-https-hexo-io-themes-1"><a href="#Themes-https-hexo-io-themes-1" class="headerlink" title="Themes: https://hexo.io/themes/"></a>Themes: <a href="https://hexo.io/themes/">https://hexo.io/themes/</a></h2><p>theme: landscape</p><h1 id="Deployment-1"><a href="#Deployment-1" class="headerlink" title="Deployment"></a>Deployment</h1><h2 id="Docs-https-hexo-io-docs-one-command-deployment-1"><a href="#Docs-https-hexo-io-docs-one-command-deployment-1" class="headerlink" title="Docs: https://hexo.io/docs/one-command-deployment"></a>Docs: <a href="https://hexo.io/docs/one-command-deployment">https://hexo.io/docs/one-command-deployment</a></h2><p><strong>deploy:</strong><br>**  type: ‘git’**<br>**  repo: <a href="mailto:&#103;&#x69;&#116;&#x40;&#x67;&#x69;&#116;&#104;&#x75;&#x62;&#46;&#x63;&#x6f;&#109;">&#103;&#x69;&#116;&#x40;&#x67;&#x69;&#116;&#104;&#x75;&#x62;&#46;&#x63;&#x6f;&#109;</a>:future1314/future1314.github.io.git**<br>**  branch: master**</p><p>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# hexo<br>INFO  Validating config<br>Usage: hexo <command></p><p>Commands:<br> clean     Remove generated files and cache.<br> config    Get or set configurations.<br> deploy    Deploy your website.<br> generate  Generate static files.<br> help      Get help on a command.<br> init      Create a new Hexo folder.<br> list      List the information of the site<br> migrate   Migrate your site from other system to Hexo.<br> new       Create a new post.<br> publish   Moves a draft post from _drafts to _posts folder.<br> render    Render files with renderer plugins.<br> server    Start the server.<br> version   Display version information.</p><p>Global Options:<br> –config  Specify config file instead of using _config.yml<br> –cwd     Specify the CWD<br> –debug   Display all verbose messages in the terminal<br> –draft   Display draft posts<br> –safe    Disable all plugins and scripts<br> –silent  Hide output on console</p><p>For more help, you can use ‘hexo help [command]’ for the detailed information<br>or you can check the docs: <a href="http://hexo.io/docs/">http://hexo.io/docs/</a><br>[root@hecs-x-medium-2-linux-20200322093022 blog]# hexo g &amp; hexo d<br>[1] 4339<br>INFO  Validating config<br>INFO  Validating config<br>INFO  Start processing<br>INFO  Start processing<br>INFO  Files loaded in 463 ms<br>INFO  Files loaded in 533 ms<br>INFO  Generated: archives/index.html<br>INFO  Generated: archives/2020/index.html<br>INFO  Generated: archives/2020/08/index.html<br>INFO  Generated: index.html<br>INFO  Generated: fancybox/helpers/fancybox_buttons.png<br>INFO  Generated: fancybox/blank.gif<br>INFO  Generated: fancybox/fancybox_loading.gif<br>INFO  Generated: fancybox/fancybox_loading@2x.gif<br>INFO  Generated: fancybox/fancybox_overlay.png<br>INFO  Generated: fancybox/fancybox_sprite.png<br>INFO  Generated: fancybox/fancybox_sprite@2x.png<br>INFO  Generated: js/script.js<br>INFO  Generated: fancybox/jquery.fancybox.css<br>INFO  Generated: fancybox/helpers/jquery.fancybox-buttons.css<br>INFO  Generated: fancybox/helpers/jquery.fancybox-buttons.js<br>INFO  Generated: fancybox/helpers/jquery.fancybox-media.js<br>INFO  Generated: fancybox/helpers/jquery.fancybox-thumbs.css<br>INFO  Generated: fancybox/helpers/jquery.fancybox-thumbs.js<br>INFO  Generated: css/fonts/FontAwesome.otf<br>INFO  Generated: css/style.css<br>INFO  Generated: fancybox/jquery.fancybox.pack.js<br>INFO  Generated: 2020/08/30/hello-world/index.html<br>INFO  Generated: css/fonts/fontawesome-webfont.ttf<br>INFO  Generated: css/fonts/fontawesome-webfont.eot<br>INFO  Generated: css/fonts/fontawesome-webfont.woff<br>INFO  Generated: fancybox/jquery.fancybox.js<br>INFO  Generated: css/images/banner.jpg<br>INFO  Generated: css/fonts/fontawesome-webfont.svg<br>INFO  28 files generated in 1.71 s<br>INFO  Generated: fancybox/blank.gif<br>INFO  Generated: archives/index.html<br>INFO  Generated: archives/2020/index.html<br>INFO  Generated: archives/2020/08/index.html<br>INFO  Generated: index.html<br>INFO  Generated: fancybox/fancybox_loading.gif<br>INFO  Generated: fancybox/fancybox_loading@2x.gif<br>INFO  Generated: fancybox/fancybox_overlay.png<br>INFO  Generated: fancybox/fancybox_sprite.png<br>INFO  Generated: fancybox/fancybox_sprite@2x.png<br>INFO  Generated: fancybox/helpers/fancybox_buttons.png<br>INFO  Generated: css/fonts/fontawesome-webfont.woff<br>INFO  Generated: fancybox/jquery.fancybox.css<br>INFO  Generated: js/script.js<br>INFO  Generated: fancybox/helpers/jquery.fancybox-buttons.css<br>INFO  Generated: fancybox/helpers/jquery.fancybox-buttons.js<br>INFO  Generated: fancybox/helpers/jquery.fancybox-media.js<br>INFO  Generated: fancybox/helpers/jquery.fancybox-thumbs.css<br>INFO  Generated: fancybox/helpers/jquery.fancybox-thumbs.js<br>INFO  Generated: css/fonts/FontAwesome.otf<br>INFO  Generated: css/fonts/fontawesome-webfont.eot<br>INFO  Generated: css/style.css<br>INFO  Generated: fancybox/jquery.fancybox.pack.js<br>INFO  Generated: css/fonts/fontawesome-webfont.ttf<br>INFO  Generated: fancybox/jquery.fancybox.js<br>INFO  Generated: 2020/08/30/hello-world/index.html<br>INFO  Generated: css/fonts/fontawesome-webfont.svg<br>INFO  Generated: css/images/banner.jpg<br>INFO  28 files generated in 1.71 s<br>INFO  Deploying: git<br>INFO  Setting up Git deployment…<br>初始化空的 Git 版本库于 /root/blog/.deploy_git/.git/<br>[master（根提交） 94cc63f] First commit<br>1 file changed, 0 insertions(+), 0 deletions(-)<br>create mode 100644 placeholder<br>INFO  Clearing .deploy_git folder…<br>INFO  Copying files from public folder…<br>INFO  Copying files from extend dirs…<br>[master b839331] Site updated: 2020-08-30 16:51:33<br>29 files changed, 5825 insertions(+)<br>create mode 100644 2020/08/30/hello-world/index.html<br>create mode 100644 archives/2020/08/index.html<br>create mode 100644 archives/2020/index.html<br>create mode 100644 archives/index.html<br>create mode 100644 css/fonts/FontAwesome.otf<br>create mode 100644 css/fonts/fontawesome-webfont.eot<br>create mode 100644 css/fonts/fontawesome-webfont.svg<br>create mode 100644 css/fonts/fontawesome-webfont.ttf<br>create mode 100644 css/fonts/fontawesome-webfont.woff<br>create mode 100644 css/images/banner.jpg<br>create mode 100644 css/style.css<br>create mode 100644 fancybox/blank.gif<br>create mode 100644 fancybox/fancybox_loading.gif<br>create mode 100644 fancybox/fancybox_loading@2x.gif<br>create mode 100644 fancybox/fancybox_overlay.png<br>create mode 100644 fancybox/fancybox_sprite.png<br>create mode 100644 fancybox/fancybox_sprite@2x.png<br>create mode 100644 fancybox/helpers/fancybox_buttons.png<br>create mode 100644 fancybox/helpers/jquery.fancybox-buttons.css<br>create mode 100644 fancybox/helpers/jquery.fancybox-buttons.js<br>create mode 100644 fancybox/helpers/jquery.fancybox-media.js<br>create mode 100644 fancybox/helpers/jquery.fancybox-thumbs.css<br>create mode 100644 fancybox/helpers/jquery.fancybox-thumbs.js<br>create mode 100644 fancybox/jquery.fancybox.css<br>create mode 100644 fancybox/jquery.fancybox.js<br>create mode 100644 fancybox/jquery.fancybox.pack.js<br>create mode 100644 index.html<br>create mode 100644 js/script.js<br>delete mode 100644 placeholder<br>Warning: Permanently added the RSA host key for IP address ‘13.229.188.59’ to the list of known hosts.<br>Counting objects: 46, done.<br>Compressing objects: 100% (36/36), done.<br>Writing objects: 100% (46/46), 507.64 KiB | 0 bytes/s, done.<br>Total 46 (delta 4), reused 0 (delta 0)<br>remote: Resolving deltas: 100% (4/4), done.<br>To <a href="mailto:&#x67;&#x69;&#x74;&#x40;&#x67;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#99;&#x6f;&#x6d;">&#x67;&#x69;&#x74;&#x40;&#x67;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#99;&#x6f;&#x6d;</a>:future1314/future1314.github.io.git</p><ul><li>aad9e4f…b839331 HEAD -&gt; master (forced update)<br><strong>分支 master 设置为跟踪来自 <a href="mailto:&#x67;&#x69;&#116;&#64;&#x67;&#105;&#x74;&#104;&#117;&#x62;&#x2e;&#x63;&#x6f;&#x6d;">&#x67;&#x69;&#116;&#64;&#x67;&#105;&#x74;&#104;&#117;&#x62;&#x2e;&#x63;&#x6f;&#x6d;</a>:future1314/future1314.github.io.git 的远程分支 master。</strong><br><strong>INFO  Deploy done: git</strong><br><strong>[1]+   完成                  hexo g</strong><br>[root@hecs-x-medium-2-linux-20200322093022 blog]# top<br>top - 16:55:59 up 2 days, 23:02,  8 users,  load average: 0.01, 0.08, 0.08<br>Tasks: 114 total,   1 running, 113 sleeping,   0 stopped,   0 zombie<br>%Cpu(s):  1.0 us,  0.7 sy,  0.0 ni, 98.3 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st<br>KiB Mem :  1881700 total,   194372 free,  1000260 used,   687068 buff/cache<br>KiB Swap:  1049596 total,  1049596 free,        0 used.   676568 avail Mem</li></ul><p>PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND<br>2578 root      20   0  741600   8796   3344 S  0.3  0.5   6:36.58 hostguard<br>8903 root      20   0  473684  63452   5400 S  0.3  3.4   5:43.77 BT-Panel<br>   1 root      20   0  125856   3780   2068 S  0.0  0.2   0:03.44 systemd<br>   2 root      20   0       0      0      0 S  0.0  0.0   0:00.00 kthreadd<br>   4 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 kworker/0:0H<br>   5 root      20   0       0      0      0 S  0.0  0.0   0:00.39 kworker/u2:0<br>   6 root      20   0       0      0      0 S  0.0  0.0   0:03.24 ksoftirqd/0<br>   7 root      rt   0       0      0      0 S  0.0  0.0   0:00.00 migration/0<br>   8 root      20   0       0      0      0 S  0.0  0.0   0:00.00 rcu_bh<br>   9 root      20   0       0      0      0 S  0.0  0.0   0:40.40 rcu_sched<br>  10 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 lru-add-drain<br>  11 root      rt   0       0      0      0 S  0.0  0.0   0:00.93 watchdog/0<br>  13 root      20   0       0      0      0 S  0.0  0.0   0:00.00 kdevtmpfs<br>  14 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 netns<br>  15 root      20   0       0      0      0 S  0.0  0.0   0:00.07 khungtaskd<br>  16 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 writeback<br>  17 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 kintegrityd<br>  18 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 bioset</p><p>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# <strong>hexo s</strong><br>INFO  Validating config<br>INFO  Start processing<br><strong>INFO  Hexo is running at … . Press Ctrl+C to stop.</strong><br>^CINFO  Have a nice day <strong>直接写 hexo 会解析报错的。</strong><br>[root@hecs-x-medium-2-linux-20200322093022 blog]# hexo s &amp;<br>[1] 4440<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# INFO  Validating config<br>INFO  Start processing<br><strong>INFO  Hexo is running at … . Press Ctrl+C to stop.</strong><br>^C<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# jps<br>1476 WrapperSimpleApp<br>4459 Jps<br>27788 halo-latest.jar<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# ps<br> PID TTY          TIME CMD<br>4084 pts/1    00:00:00 bash<br>4440 pts/1    00:00:02 node<br>4469 pts/1    00:00:00 ps<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# ls -ltr<br>总用量 192<br>drwxr-xr-x   3 root root   4096 8 月  30 16:16 source<br>drwxr-xr-x   2 root root   4096 8 月  30 16:16 scaffolds<br>drwxr-xr-x   3 root root   4096 8 月  30 16:16 themes<br>drwxr-xr-x 330 root root  12288 8 月  30 16:47 node_modules<br>-rw-r–r–   1 root root 132199 8 月  30 16:47 package-lock.json<br>-rw-r–r–   1 root root   2522 8 月  30 16:50 _config.yml<br>-rw-r–r–   1 root root   1102 8 月  30 16:51 package.json<br>drwxr-xr-x   7 root root   4096 8 月  30 16:51 public<br>-rw-r–r–   1 root root  24567 8 月  30 16:58 db.json<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# git init<br>初始化空的 Git 版本库于 /root/blog/.git/<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# <strong>git add .</strong><br>[root@hecs-x-medium-2-linux-20200322093022 blog]# <strong>git commit -m “first commit-hexo init not yuque-hexo “</strong><br>[master（根提交） f22dc77] first commit-hexo init not yuque-hexo<br>93 files changed, 9286 insertions(+)<br>create mode 100644 .gitignore<br>create mode 100644 _config.yml<br>create mode 100644 package-lock.json<br>create mode 100644 package.json<br>create mode 100644 scaffolds/draft.md<br>create mode 100644 scaffolds/page.md<br>create mode 100644 scaffolds/post.md<br>create mode 100644 source/_posts/hello-world.md<br>create mode 100644 themes/landscape/.gitignore<br>create mode 100644 themes/landscape/Gruntfile.js<br>create mode 100644 themes/landscape/LICENSE<br>create mode 100644 themes/landscape/README.md<br>create mode 100644 themes/landscape/_config.yml<br>create mode 100644 themes/landscape/languages/de.yml<br>create mode 100644 themes/landscape/languages/default.yml<br>create mode 100644 themes/landscape/languages/es.yml<br>create mode 100644 themes/landscape/languages/fr.yml<br>create mode 100644 themes/landscape/languages/ja.yml<br>create mode 100644 themes/landscape/languages/ko.yml<br>create mode 100644 themes/landscape/languages/nl.yml<br>create mode 100644 themes/landscape/languages/no.yml<br>create mode 100644 themes/landscape/languages/pt.yml<br>create mode 100644 themes/landscape/languages/ru.yml<br>create mode 100644 themes/landscape/languages/zh-CN.yml<br>create mode 100644 themes/landscape/languages/zh-TW.yml<br>create mode 100644 themes/landscape/layout/_partial/after-footer.ejs<br>create mode 100644 themes/landscape/layout/_partial/archive-post.ejs<br>create mode 100644 themes/landscape/layout/_partial/archive.ejs<br>create mode 100644 themes/landscape/layout/_partial/article.ejs<br>create mode 100644 themes/landscape/layout/_partial/footer.ejs<br>create mode 100644 themes/landscape/layout/_partial/gauges-analytics.ejs<br>create mode 100644 themes/landscape/layout/_partial/google-analytics.ejs<br>create mode 100644 themes/landscape/layout/_partial/head.ejs<br>create mode 100644 themes/landscape/layout/_partial/header.ejs<br>create mode 100644 themes/landscape/layout/_partial/mobile-nav.ejs<br>create mode 100644 themes/landscape/layout/_partial/post/category.ejs<br>create mode 100644 themes/landscape/layout/_partial/post/date.ejs<br>create mode 100644 themes/landscape/layout/_partial/post/gallery.ejs<br>create mode 100644 themes/landscape/layout/_partial/post/nav.ejs<br>create mode 100644 themes/landscape/layout/_partial/post/tag.ejs<br>create mode 100644 themes/landscape/layout/_partial/post/title.ejs<br>create mode 100644 themes/landscape/layout/_partial/sidebar.ejs<br>create mode 100644 themes/landscape/layout/_widget/archive.ejs<br>create mode 100644 themes/landscape/layout/_widget/category.ejs<br>create mode 100644 themes/landscape/layout/_widget/recent_posts.ejs<br>create mode 100644 themes/landscape/layout/_widget/tag.ejs<br>create mode 100644 themes/landscape/layout/_widget/tagcloud.ejs<br>create mode 100644 themes/landscape/layout/archive.ejs<br>create mode 100644 themes/landscape/layout/category.ejs<br>create mode 100644 themes/landscape/layout/index.ejs<br>create mode 100644 themes/landscape/layout/layout.ejs<br>create mode 100644 themes/landscape/layout/page.ejs<br>create mode 100644 themes/landscape/layout/post.ejs<br>create mode 100644 themes/landscape/layout/tag.ejs<br>create mode 100644 themes/landscape/package.json<br>create mode 100644 themes/landscape/scripts/fancybox.js<br>create mode 100644 themes/landscape/source/css/_extend.styl<br>create mode 100644 themes/landscape/source/css/_partial/archive.styl<br>create mode 100644 themes/landscape/source/css/_partial/article.styl<br>create mode 100644 themes/landscape/source/css/_partial/comment.styl<br>create mode 100644 themes/landscape/source/css/_partial/footer.styl<br>create mode 100644 themes/landscape/source/css/_partial/header.styl<br>create mode 100644 themes/landscape/source/css/_partial/highlight.styl<br>create mode 100644 themes/landscape/source/css/_partial/mobile.styl<br>create mode 100644 themes/landscape/source/css/_partial/sidebar-aside.styl<br>create mode 100644 themes/landscape/source/css/_partial/sidebar-bottom.styl<br>create mode 100644 themes/landscape/source/css/_partial/sidebar.styl<br>create mode 100644 themes/landscape/source/css/_util/grid.styl<br>create mode 100644 themes/landscape/source/css/_util/mixin.styl<br>create mode 100644 themes/landscape/source/css/_variables.styl<br>create mode 100644 themes/landscape/source/css/fonts/FontAwesome.otf<br>create mode 100644 themes/landscape/source/css/fonts/fontawesome-webfont.eot<br>create mode 100644 themes/landscape/source/css/fonts/fontawesome-webfont.svg<br>create mode 100644 themes/landscape/source/css/fonts/fontawesome-webfont.ttf<br>create mode 100644 themes/landscape/source/css/fonts/fontawesome-webfont.woff<br>create mode 100644 themes/landscape/source/css/images/banner.jpg<br>create mode 100644 themes/landscape/source/css/style.styl<br>create mode 100644 themes/landscape/source/fancybox/blank.gif<br>create mode 100644 themes/landscape/source/fancybox/fancybox_loading.gif<br>create mode 100644 themes/landscape/source/fancybox/fancybox_loading@2x.gif<br>create mode 100644 themes/landscape/source/fancybox/fancybox_overlay.png<br>create mode 100644 themes/landscape/source/fancybox/fancybox_sprite.png<br>create mode 100644 themes/landscape/source/fancybox/fancybox_sprite@2x.png<br>create mode 100644 themes/landscape/source/fancybox/helpers/fancybox_buttons.png<br>create mode 100644 themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css<br>create mode 100644 themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js<br>create mode 100644 themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js<br>create mode 100644 themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css<br>create mode 100644 themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js<br>create mode 100644 themes/landscape/source/fancybox/jquery.fancybox.css<br>create mode 100644 themes/landscape/source/fancybox/jquery.fancybox.js<br>create mode 100644 themes/landscape/source/fancybox/jquery.fancybox.pack.js<br>create mode 100644 themes/landscape/source/js/script.js<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# <strong>git remote add origin **<a href="https://github.com/future1314/blog.git"><strong>https://github.com/future1314/blog.git</strong></a><br>[root@hecs-x-medium-2-linux-20200322093022 blog]# **git push -u origin master</strong><br>Username for ‘<a href="https://github.com&/#39;">https://github.com&#39;</a>: future1314<br>Password for ‘<a href="https://future1314@github.com&/#39;">https://future1314@github.com&#39;</a>:</p><p>To <a href="https://github.com/future1314/blog.git">https://github.com/future1314/blog.git</a><br>! [rejected]        master -&gt; master (fetch first)<br><strong>error: 无法推送一些引用到 ‘<a href="https://github.com/future1314/blog.git&#39;">https://github.com/future1314/blog.git&#39;</a></strong><br><strong>提示：更新被拒绝，因为远程版本库包含您本地尚不存在的提交。这通常是因为另外</strong><br><strong>提示：一个版本库已推送了相同的引用。再次推送前，您可能需要先合并远程变更</strong><br><strong>提示：（如 ‘git pull’）。</strong><br>提示：详见 ‘git push –help’ 中的 ‘Note about fast-forwards’ 小节。<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# git diff<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# git stash pop<br>未发现 stash。<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# git pull<br>Username for ‘<a href="https://github.com&/#39;">https://github.com&#39;</a>: future1314<br>Password for ‘<a href="https://future1314@github.com&/#39;">https://future1314@github.com&#39;</a>:<br>warning: no common commits<br>remote: Enumerating objects: 13, done.<br>remote: Counting objects: 100% (13/13), done.<br>remote: Compressing objects: 100% (8/8), done.<br>remote: Total 13 (delta 0), reused 0 (delta 0), pack-reused 0<br>Unpacking objects: 100% (13/13), done.<br>来自 <a href="https://github.com/future1314/blog">https://github.com/future1314/blog</a></p><ul><li>[新分支]          master     -&gt; origin/master<br>There is no tracking information for the current branch.<br>Please specify which branch you want to merge with.<br>See git-pull(1) for details</li></ul><p>git pull <remote> <branch></p><p>If you wish to set tracking information for this branch you can do so with:</p><p>git branch –set-upstream-to=origin/<branch> master</p><p>[root@hecs-x-medium-2-linux-20200322093022 blog]# git stash pop<br>未发现 stash。<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# git push -u origin master<br>Username for ‘<a href="https://github.com&/#39;">https://github.com&#39;</a>: future1314<br>Password for ‘<a href="https://future1314@github.com&/#39;">https://future1314@github.com&#39;</a>:<br>To <a href="https://github.com/future1314/blog.git">https://github.com/future1314/blog.git</a><br>! [rejected]        master -&gt; master (non-fast-forward)<br>error: 无法推送一些引用到 ‘<a href="https://github.com/future1314/blog.git&#39;">https://github.com/future1314/blog.git&#39;</a><br>提示：更新被拒绝，因为您当前分支的最新提交落后于其对应的远程分支。<br>提示：再次推送前，先与远程变更合并（如 ‘git pull’）。详见<br>提示：’git push –help’ 中的 ‘Note about fast-forwards’ 小节。<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# git merge<br>fatal: 未指定提交并且 merge.defaultToUpstream 未设置。<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# git diff<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# git merge master<br>Already up-to-date.<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# git push -u origin master<br>Username for ‘<a href="https://github.com&/#39;">https://github.com&#39;</a>: future1314<br>Password for ‘<a href="https://future1314@github.com&/#39;">https://future1314@github.com&#39;</a>:<br>To <a href="https://github.com/future1314/blog.git">https://github.com/future1314/blog.git</a><br>! [rejected]        master -&gt; master (non-fast-forward)<br><strong>error: 无法推送一些引用到 ‘<a href="https://github.com/future1314/blog.git&#39;">https://github.com/future1314/blog.git&#39;</a></strong><br><strong>提示：更新被拒绝，因为您当前分支的最新提交落后于其对应的远程分支。</strong><br><strong>提示：再次推送前，先与远程变更合并（如 ‘git pull’）。详见</strong><br><strong>提示：’git push –help’ 中的 ‘Note about fast-forwards’ 小节。</strong><br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]#<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# ls -ltr<br>总用量 192<br>drwxr-xr-x   3 root root   4096 8 月  30 16:16 source<br>drwxr-xr-x   2 root root   4096 8 月  30 16:16 scaffolds<br>drwxr-xr-x   3 root root   4096 8 月  30 16:16 themes<br>drwxr-xr-x 330 root root  12288 8 月  30 16:47 node_modules<br>-rw-r–r–   1 root root 132199 8 月  30 16:47 package-lock.json<br>-rw-r–r–   1 root root   2522 8 月  30 16:50 _config.yml<br>-rw-r–r–   1 root root   1102 8 月  30 16:51 package.json<br>drwxr-xr-x   7 root root   4096 8 月  30 16:51 public<br>-rw-r–r–   1 root root  24567 8 月  30 16:58 db.json<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# cd p<br>-bash: cd: p: 没有那个文件或目录<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# cd p<br>package.json       package-lock.json  public/<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# cd pu<br>-bash: cd: pu: 没有那个文件或目录<br>[root@hecs-x-medium-2-linux-20200322093022 blog]# cd public/<br>[root@hecs-x-medium-2-linux-20200322093022 public]# ls -l<br>总用量 28<br>drwxr-xr-x 3 root root 4096 8 月  30 16:51 2020<br>drwxr-xr-x 3 root root 4096 8 月  30 16:51 archives<br>drwxr-xr-x 4 root root 4096 8 月  30 16:51 css<br>drwxr-xr-x 3 root root 4096 8 月  30 16:51 fancybox<br>-rw-r–r– 1 root root 6689 8 月  30 16:51 index.html<br>drwxr-xr-x 2 root root 4096 8 月  30 16:51 js<br>[root@hecs-x-medium-2-linux-20200322093022 public]# pwd<br>/root/blog/public<br>[root@hecs-x-medium-2-linux-20200322093022 public]#<br>[root@hecs-x-medium-2-linux-20200322093022 public]#<br>[root@hecs-x-medium-2-linux-20200322093022 public]# <strong>git fetch origin</strong><br>Username for ‘<a href="https://github.com&/#39;">https://github.com&#39;</a>: future1314<br>Password for ‘<a href="https://future1314@github.com&/#39;">https://future1314@github.com&#39;</a>:</p><p>[root@hecs-x-medium-2-linux-20200322093022 public]#<br>[root@hecs-x-medium-2-linux-20200322093022 public]# git diff<br>[root@hecs-x-medium-2-linux-20200322093022 public]# <strong>git merge origin/master</strong><br><strong>Merge made by the ‘recursive’ strategy.</strong><br>** .github/workflows/blog.yml | 43 +++++++++++++++++++++++++++++++++++++++++++**<br>** .github/workflows/main.yml | 33 +++++++++++++++++++++++++++++++++**<br>** README.md                  |  1 +**<br><strong>3 files changed, 77 insertions(+)</strong><br>** create mode 100644 .github/workflows/blog.yml**<br>** create mode 100644 .github/workflows/main.yml**<br>** create mode 100644 README.md**<br>[root@hecs-x-medium-2-linux-20200322093022 public]#<br>[root@hecs-x-medium-2-linux-20200322093022 public]# git diff<br>[root@hecs-x-medium-2-linux-20200322093022 public]#** **<strong>git push -u origin master**<br>**Username for ‘<a href="https://github.com&/#39;">https://github.com&#39;</a>: future1314</strong><br><strong>Password for ‘<a href="https://future1314@github.com&/#39;">https://future1314@github.com&#39;</a>:</strong></p><p><strong>Counting objects: 117, done.</strong><br><strong>Compressing objects: 100% (106/106), done.</strong><br><strong>Writing objects: 100% (116/116), 558.06 KiB | 0 bytes/s, done.</strong><br><strong>Total 116 (delta 2), reused 0 (delta 0)</strong><br><strong>remote: Resolving deltas: 100% (2/2), done.</strong><br><strong>To **<a href="https://github.com/future1314/blog.git"><strong>https://github.com/future1314/blog.git</strong></a><br>**   3fd7db5..dfba4e6  master -&gt; master</strong><br><strong>分支 master 设置为跟踪来自 origin 的远程分支 master。</strong><br>[root@hecs-x-medium-2-linux-20200322093022 public]#<br>[root@hecs-x-medium-2-linux-20200322093022 public]#</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>再不行我就先不搞了</title>
      <link href="/2020/08/30/ro0z5g/"/>
      <url>/2020/08/30/ro0z5g/</url>
      
        <content type="html"><![CDATA[<p>太费事了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>语雀测试</title>
      <link href="/2020/08/29/glv0gn/"/>
      <url>/2020/08/29/glv0gn/</url>
      
        <content type="html"><![CDATA[<p>测试触发云函数<br>第 3.次修改的沙发上</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>服务器搭建</title>
      <link href="/2020/03/22/pxds7y/"/>
      <url>/2020/03/22/pxds7y/</url>
      
        <content type="html"><![CDATA[<p>华为云+宝塔面板 服务器小白保姆级配置</p><h3 id="78-88-一年服务器"><a href="#78-88-一年服务器" class="headerlink" title="78.88 一年服务器"></a>78.88 一年服务器</h3><p>【2 核 4G 云服务器低至 331 元/年，限时抢购】华为云开年回馈用户，产品低至 1 折，您的专属链接：<a href="https://activity.huaweicloud.com/2020feb_promotion/invite.html?fromuser=082789ba3200265d0f49c01f8c00e6c0&fromacct=dc8f412a-981f-4d07-80b0-e027d4b24ff1&needGalaxy=true">https://activity.huaweicloud.com/2020feb_promotion/invite.html?fromuser=082789ba3200265d0f49c01f8c00e6c0&amp;fromacct=dc8f412a-981f-4d07-80b0-e027d4b24ff1&amp;needGalaxy=true</a><br>也可以<strong>扫码，领取优惠券</strong><br><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/282505/1584854539682-ae16ecc0-1796-4b81-b7ee-6c188967dea9.jpeg#align=left&display=inline&height=249&name=huawei.jpg&originHeight=498&originWidth=634&size=78150&status=done&style=none&width=317" alt="huawei.jpg"></p><p><a href="https://activity.huaweicloud.com/2020feb_promotion/index.html">https://activity.huaweicloud.com/2020feb_promotion/index.html</a><br><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1584854316957-5985da03-c05e-4e97-a7ae-c662270cb2f1.png#align=left&display=inline&height=477&name=image.png&originHeight=954&originWidth=1654&size=1594268&status=done&style=none&width=827" alt="image.png"><br>这次活动只需要定时定点去抢服务器就可以了，不需要投入很大，只要 78.88，可以说是很划算了。我本人是一名大学生/编程小白，使用服务器是用来学习一些编程的知识，这台入门级的服务器可以说是很契合我现在的状况了。接下来我来为大家提供一波保姆级的小白服务器前期配置。</p><p>因为入门级服务器的性能相对羸弱，我这里是不建议使用带图形化界面的 windows 系统的。相对于 Windows，Linux 没有图形化页面，也就会让服务器的性能更大化，使用起来更加顺畅。所以这里只介绍 Linux 服务器哦。</p><p>1.注册购买之后<br>进入到后台的控制台点击云耀云服务器<br>图片说明<img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1584853266846-cdb5a6a4-2e27-48d6-8f3e-786c766356b0.png#align=left&display=inline&height=329&name=image.png&originHeight=329&originWidth=792&size=32216&status=done&style=none&width=792" alt="image.png"><br>如果是第一次登陆我们要重置密码（如果不是 Linux 可以到 &gt;&gt; 更多&gt;&gt; 切换操作系统进行切换）<br>图片说明<img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1584853599785-b2d3bfb8-7613-49df-86d5-495f0841dd68.png#align=left&display=inline&height=305&name=image.png&originHeight=305&originWidth=1791&size=53716&status=done&style=none&width=1791" alt="image.png"><br>重置系统以后我们便可以进行远程 ssh 登陆了<br>我是使用的是 xshell，小伙伴们也可以使用控制台自带的远程登陆<br>默认账户是 root，密码则是你刚才重置的密码（千万不要太简单，可能会被黑客入侵用于挖矿）<br>登录以后，我们就能接触到一个命令行的世界</p><p>2.安装宝塔面板<br>首先来到宝塔官网 <a href="https://www.bt.cn/">https://www.bt.cn/</a><br>图片说明<img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1584853302330-0b6992af-b63b-45e0-9b80-ceb4b4f11a71.png#align=left&display=inline&height=174&name=image.png&originHeight=174&originWidth=583&size=23296&status=done&style=none&width=583" alt="image.png"></p><p>点开教程我们发现，如果安装宝塔面板我们需要开放几个端口<br>可以参考 <a href="https://www.bt.cn/bbs/thread-3923-1-1.html">https://www.bt.cn/bbs/thread-3923-1-1.html</a><br>回到控制台<br>图片说明<img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1584853320094-417aaced-eac5-4248-8e69-7d8515d355a6.png#align=left&display=inline&height=570&name=image.png&originHeight=570&originWidth=1852&size=84858&status=done&style=none&width=1852" alt="image.png"><br>进入到规则管理进行配置<br>图片说明<img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1584853340143-28904f5d-cf84-4a4f-b076-7cf4f9eda657.png#align=left&display=inline&height=421&name=image.png&originHeight=421&originWidth=1842&size=89122&status=done&style=none&width=1842" alt="image.png"><br>放行需要的端口后回到远程登陆界面，输入教程安装宝塔面板的代码（确定好系统在复制代码）<br>图片说明<img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1584853357114-5176432d-5022-4d39-b95c-567fa2e54a96.png#align=left&display=inline&height=123&name=image.png&originHeight=123&originWidth=1115&size=21363&status=done&style=none&width=1115" alt="image.png"><br>需要进行选择我们选择 y（yes）<br>图片说明<br><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1584853367146-5700af96-93d2-4c07-8ed1-f6d04d8b42d1.png#align=left&display=inline&height=49&name=image.png&originHeight=49&originWidth=542&size=2884&status=done&style=none&width=542" alt="image.png"><br>跑代码大概两分钟<br>图片说明<br><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1584853386751-634106c3-0bf6-446a-9bfb-4d37ace27444.png#align=left&display=inline&height=198&name=image.png&originHeight=198&originWidth=581&size=18780&status=done&style=none&width=581" alt="image.png"><br>成功后记得记录下打码的三行数据，这个便是宝塔登陆面板的网址账号和密码<br>来到浏览器地址栏输入 bt-Panel 的地址，进去后输入账号密码<br>登陆即可，宝塔面板安装成功！<br>以后就可以用这个面板来管理服务器了。</p><p>3.宝塔面板的操作<br>登录上会让我们选择安装的套件。我们按照推荐的来，当然有需求可以更改。以后也可以自由安装<br>漫长的等待安装，这个时候我们可以去看看其他人的使用博客，多多参考多多益善。<br>接下来是介绍下宝塔面板的一些功能<br>图片说明<img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1584853425209-f8310094-c8b1-4698-a732-bf700b396cac.png#align=left&display=inline&height=949&name=image.png&originHeight=949&originWidth=1920&size=239519&status=done&style=none&width=1920" alt="image.png"></p><p>4.简单的搭建一个网站<br>图片说明<img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1584853435627-2c12a68e-6a6d-44c7-b71e-7b190fda9d07.png#align=left&display=inline&height=807&name=image.png&originHeight=807&originWidth=1522&size=125959&status=done&style=none&width=1522" alt="image.png"><br>地址栏输入 ip 测试成功即可<br>图片说明<img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1584853449371-51ab18c1-a66c-4ad7-a585-ae99c1e52c5a.png#align=left&display=inline&height=503&name=image.png&originHeight=503&originWidth=1500&size=61420&status=done&style=none&width=1500" alt="image.png"><br>如果想修改则需要在宝塔面板 &gt;&gt;文件 &gt;&gt;网站的根目录<br>图片说明<img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1584853458704-a57c7045-647a-4e5c-a093-f0a3b3469bf6.png#align=left&display=inline&height=426&name=image.png&originHeight=426&originWidth=1255&size=63602&status=done&style=none&width=1255" alt="image.png"><br>例如：默认生成的 404.html<br>图片说明<img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1584853470580-1f560976-ed18-4716-9564-4a67e5c62e17.png#align=left&display=inline&height=336&name=image.png&originHeight=336&originWidth=1227&size=38225&status=done&style=none&width=1227" alt="image.png"><br>ps：如何不用在域名或 ip 后加后缀就能默认访问我想让别人看的网站呢<br>答：来到网站管理面板，修改默认文档即可<br>图片说明<img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1584853489033-57886dc0-0578-432a-958c-f824fb56e301.png#align=left&display=inline&height=795&name=image.png&originHeight=795&originWidth=1731&size=128478&status=done&style=none&width=1731" alt="image.png"></p><p>我的分享就到这里，希望大家可以好好使用自己的服务器！<br>我们的第一台服务器，理应玩的炫酷！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>面试-1</title>
      <link href="/2020/03/22/poq8z2/"/>
      <url>/2020/03/22/poq8z2/</url>
      
        <content type="html"><![CDATA[<p>首先说明我是 Java 开发，我的范围只适合 Java 开发的，其他方向我不太了解，并且很多公司侧重点也不一样，比如字节不侧重语言，侧重操作系统四大金刚那些，也看公司吧，就像考不同的学校，会有不同的大纲，因为我是本科生，都比较侧重基础</p><p>Java：Java 基础杂七杂八的(经典必考集合各种死磕源码吧)、多线程并发包各种死磕(我是死磕到源码)，JVM 死磕到细节、GC 死磕到细节、JVM 调优自己练习练习</p><p>框架：spring 看看 IOC 和 AOP 的源码，但是太难太难了，就光那个方法名就特别长，前期就只知道个 IOC 和 AOP 是啥，后期就去看源码记大概一个原理过程，SpringMvc 的流程，一些注解吧，Mybatis 也是那些常考的点吧，缓存可以了解一下</p><p>数据库：数据库死磕，越深越好</p><p>操作系统和网络：背常考的、但是太深了，还是菜</p><p>设计模式：太多了记不住，我就是简单了解一下，叭叭给他说有啥用，Java 里哪里用了 xx 模式</p><p>算法和数据结构：是我秋招开始补的、做完类型题进行总结，刷的就是 LeetCode 吧，我是先 LeetCode，然后剑指 offer，但是我也是有很多笔试直接挂的，除了遇到一些简单的，或者原题或者类似的题能 A，一定要总结套题，类型题，一定总结一定总结一定总结</p><p>Redis：没有用过，但是就是记吧，那些常考的东西</p><p>IO 模型、网络编程：比较菜了，不咋会</p><p>Linux：我也比较菜了，就会简单的命令</p><p>微服务、分布式、集群、中间件：我不了解，只知道有这个玩意</p><p>关于源码阅读：建立在自己会使用这个东西之后再去阅读源码，阅读常用的方法源码即可，第一次阅读源码建议看视频跟着阅读或者找博客，要不然比较生疏很难，，，，</p><p>我的项目很 low 怎么办？？</p><p>low 不是你的问题，但是项目也可以“包装“啊，此“包装”非彼包装，举个例子吧：</p><p>Q：原项目有一个等级权限管理，就 3 层等级，数据库里设计好了就分 3 级，面试官就问到你了，你这个怎么做的。</p><p>A：自己一顿叭叭叭，</p><p>Q：面试官给你提了一个新需求，如果 3 层等级变了，变成了不一定多少层，你又怎么设计？</p><p>面试官给你说出了问题，不管你有没有回答出来，但是希望你面完之后，你对这个需求去重新设计一下，下一次面试自我介绍的时候说：</p><p>对于 xx 项目，我自己私下也有复盘，比如当需求变为 xxx 的时候，我考虑到这样设计：叭叭叭…..。</p><p>这样你的 low 项目就变得不再 low 了，突出你的思考、你的想法</p><p>项目 low，无实习经验，还是个渣本，怎么拿到 offer 的</p><p>死磕基础，把很多源码看了，集合、JUC 下的，面试就磕源码，操作系统和计算机网络背不住，就是手写吧。我拿的 offer 里，基本都是 Java 问的很多</p><h3 id="关于套路和技巧"><a href="#关于套路和技巧" class="headerlink" title="关于套路和技巧"></a>关于套路和技巧</h3><p>关于面试：面完问一下面试官对你的评价，找到自己的不足，另一方面也表现出自己强烈的学习欲望，反正我每次问面试评价都是：基础不错，就是动手实践不是很好，xxx，，，，如果感觉跟面试官聊得不错的，可以厚着脸皮要个微信加，反正我面滴滴三面要微信加，被面试官拒绝了，其他的也有成功的，哈哈哈哈哈</p><p>面试复盘：我一般线上面试会录屏或者录音，面完之后复盘总结，不单单是总结，你还要找到自己的不足去弥补，防止下一次再被问，这就是为什么我面经这么全的原因，不是我记性好，，，，，哈哈哈哈哈</p><p>关于投简历：写一个 Excel 或者 Word 记录投的公司，时间，投递方式，方便后期去查询结果</p><p>你的秋招时间这么长，你的心态如何呢？</p><p>秋招历时足足 4 个月，心态就像心电图一样，考研就像前期平稳，后期曲线上涨，因为自己也很乐观，在整个秋招之路里，也有人说话，自己也有几个网上的小伙伴群，每次就是说说话，互相激励对方，如果你是一个人的话，希望找几个小伙伴一起交流说说话，避免自闭低沉消极</p><h3 id="关于众多知识点和面经你又是怎么选择去看的呢？"><a href="#关于众多知识点和面经你又是怎么选择去看的呢？" class="headerlink" title="关于众多知识点和面经你又是怎么选择去看的呢？"></a>关于众多知识点和面经你又是怎么选择去看的呢？</h3><p>1.先看众多的知识点，广度先建立起来，遇到一个不会的知识点千万不要入坑掉进去，越陷越深 2.广度那么多，我看一遍记不住咋办，那就多看几遍，理解化记忆，找一些共同点进行记忆，手写记忆（秋招以来我大概写了 20+的单面 A4 纸吧），抱团组队，互相面试，互相讲解 3.广度拉起来之后，去看看深度，了解一下源码 xx 的，深度是你从众多面试者脱颖而出的法宝 4.面经看了一定的知识点之后再去看，作为查缺补漏之用，当你要准备面哪个公司之前，去看看这个公司的面经。</p><h3 id="简历应该怎么写？？？"><a href="#简历应该怎么写？？？" class="headerlink" title="简历应该怎么写？？？"></a>简历应该怎么写？？？</h3><p>以下属于个人观点：</p><p>1.如果成绩好，写上你的 GPA 和排名 2.学校好肯定是个亮点 3.有博客（前提里面要有内容），有 GitHub 写上去 4.大厂实习是个亮点 5.项目负责模块最好用：用 xx 实现 xxx 解决了 xxx 问题，网上都说最好用 STAR 法则写， 6.计算机类的比赛加分项吧、ACM….. 7.技能栈写你会的，精通、熟悉、了解 xxxx。<br>划重点：字不能错，大小写要写明白，Java 不是 java，我不知道这个单词到底是怎么拼，去官网瞧瞧他怎么写的。</p><p>如果以上你都没有？？？我好慌，我该怎么办？？？</p><p>把你复习的众多知识点堆在技能栈上，前提是你要会！会！会！不会就不要写（别给自己挖坑），比如：</p><p>看多线程知识点前：</p><p>1.了解多线程编程<br>看知识点后：</p><p>1.熟悉多线程编程及原理，内存屏障和 CPU 缓存、线程池应用及原理、synchronize 锁优化、JVM 内存模型、J.U.C 并发编程包<br>再次重点提醒！！！一定要会才往上写！！！</p><p>实习、秋招、春招那点事</p><p>坎坷的 offer 故事：</p><p>•贝壳是第一家面完 全部流程的公司，当时认为能过，结果被挂了，不知道是什么原因，可能学校吧…，当时挺难过的。<br>•京东是 8.13 14 的一二面，面完之后一直没信，二面面试官也说我技术面过了提交了 HRBP 处理了，等到了 8.29 正式批给我发来线下面试邀请再次联系了二面面试官帮我反馈，当天晚上收到 HRBP 的 oc，给我说锁定简历，给我发 offer，问了几个 hr 的问题，9.5 问 hrbp 什么时候发 offer，hrbp 问我要了身份证，之后一直持续到 9 月底，期间给 HBRP 发了四次微信询问 offer 的事，没有一次回我微信的，9.30 二面面试官帮我反馈了我一直没有收到 offer 的情况，HR 那边还是没有给反馈，国庆期间最终找到零售校招 HR 帮我查了一下我的信息，结果说没有查找我的信息，我给他说了我是提前批，HBRP 问我要了身份证各种情况，说帮我对接一下 HBRP，最后发现是把我的信息遗漏了，重新给我提交，10.10 收到 offer，等待京东这段时间，身边的人都说我凉了凉了，但是我还是坚持下来了，天天找各种途径去查，最终也是没有辜负自己的努力。<br>•滴滴是 8.9 投的简历，8.27 笔试，邀约 9.7 的线下面试，但是我拒绝了，期间一直想去问问能不能申请线上面试，结果没有找到途径，9.12 电话邀约了 9.16 一面，面完之后一直就没有信了，也没有拒信，官网状态还是面试流程中，然后一直给滴滴的邮箱发消息问面试结果、不下 5 次吧，都是石沉大海，在牛客找滴滴 hr 联系方式，也没有方式，在 10.15 的时候再次给滴滴邮箱和滴滴招聘公众号发消息，下午来了 hr 约二面了，我坚持的等到了，9.16-10.15 一个月的时间啊，这期间也基本每个人都告诉我是挂了，是不会有感谢信的，但是我还是坚持，同样我是在 10.10 收到的京东 offer，但是我还是不甘心，还是去坚持问滴滴，就是要个结果，挂就去京东，过就继续面，再约面滴滴这期间，我同样面试了其他家为了面试查缺补漏吧，大大小小公司我都投，一直坚持到 offer，给自己的目标就是面完滴滴三面就不面了，结束秋招，因为太累太累了。。。<br>总结：</p><p>面试就是把自己变成商品，不遗余力地推销给面试官，从而打动他的过程。</p><p>面试就像一场考试，给定了要考的范围，就是你能不能去坚持死磕他了，坚持死磕对了，加上一点运气+临场发挥就是胜利，祝各位加油！！！冲冲冲！！！就是干！！！</p><p>以下面经顺序为难易度排序及 offer 排序</p><p>滴滴(11.5 offer)：线上面</p><p>8.9 投简历：</p><p>8.27 笔试：</p><h4 id="9-16-一面：80-分钟左右"><a href="#9-16-一面：80-分钟左右" class="headerlink" title="  9.16 一面：80 分钟左右"></a>  9.16 一面：80 分钟左右</h4><p>1.Java 集合说一说吧 set ，list，map 都问了一遍<br>2.TreeSet 和 HashSet 区别<br>•红黑树区别，有序无序<br>3.hashmap 和 concurrenthashmap 4.线程池用过没，线程池的参数什么意思，每个都问了一遍 5.拒绝策略说一说<br>6.synchroBlockQueue 到底可以存几个 7.锁用过没，<br>•叭叭各种锁， 8.锁的什么方法你用过<br>•tryLock<br>•getHoldCount<br>9.lock 和 tryLock 区别<br>10.lock 的公平锁和非公平锁的怎么实现的（源码级别），不限于概念 11.类加载机制，不是类加载几个过程 12.如果多个类加载器加载同一个类，会出现什么情况<br>13.tomcat 的加载过程<br>14.spring 的生命周期，不是 bean<br>15.AOP<br>16.ASM 怎么实现 cglib<br>17.mybatis 的插件用过没， 18.项目， 背景：暂存数据，每一次把用户填写的数据暂存到数据库，暂存字段，0 暂存，1 正式存 1.如果实现 a 用户暂存数据 1，b 用户暂存数据 2，实现 a 下次只能看见数据 1，<br>给 car 表加一个操作人字段，每次判断 2. car 表怎么设计的，<br>id，车牌号，xxx，xx，暂存标记 3. car 表主键是什么<br>主键 id 4.主键 id 有什么规则吗？<br>自增长 5.如果一个车牌号重复了，添加的时候怎么处理的<br>每次填入的时候，都会在数据库里查询一下，判断是否有 6.如果 4 个人同时填入车牌号为 888 的车，怎么处理这个问题 7.加锁为消化资源，你考虑一下在数据库进行操作吧 8.隔离级别是解决什么问题的啊<br>并发的时候问题，叭叭脏读等问题， 9.隔离级别什么时候才出来啊？ 19.数据库索引，索引类别<br>唯一索引，聚簇索引，非聚簇索引 20.聚簇索引和非聚簇索引区别 21.二叉树和 B+树的区别<br>叭叭半天，没有 get 到点上<br>1.B+树所有数据都在叶子节点，每次查找时间稳定 2.叶子节点都有指向下一个叶子节点的指针，范围查找比较方便 22.那如果把二叉树弄成，所有数据都存在叶子节点呢<br>二叉树，如果删除的话，可能会变成线性树，时间复杂度变高 23.那如果平衡二叉树呢<br>叭叭了，记得好像磁盘存储是用的 b+树结构，索引是存在磁盘上的，用 B+树会减少 IO 操作 24.怎么减少 IO 操作的 25.磁盘上所有文件都是 B+树存储吗？<br>文件夹的文件吧 26.磁盘上怎么存储这些数据的 27.你了解什么文件格式<br>elf，a.out<br>28.Linux 操作系统了解过吗<br>Linux 不太了解过，用过 Linux 命令，进程同步<br>29.Linux 命令用过哪些<br>cd，grep，pwd，mv，管道符，ps<br>30.Linux 根目录下有哪些文件夹<br>etc，bin，我好像记得是，可能记不太清楚了 31.手撕翻转树，递归+递推</p><pre><code>32.手撕最小路径和</code></pre><h4 id="10-17-二面：50-分钟左右"><a href="#10-17-二面：50-分钟左右" class="headerlink" title="10.17 二面：50 分钟左右"></a>10.17 二面：50 分钟左右</h4><p>1.开源项目了解什么<br>2.SpringBoot 如何加载，源码 3.学习源码如何深入学习的<br>叭叭叭 ArrayList 和 LinkedList 4.如果去了解 spring 的启动过程，你怎么去了解<br>5.tomcat 启动的流程，要加载什么资源 6.项目中有哪些收获 7.项目中负责哪些点，技术方向吧 8.为什么用 mvc 架构<br>面试官：其实这个 mvc 架构知识点还是很深的，要做好还是很难的 9.项目里 Spring 的事务是怎么管理的<br>在方法上加注解 10.那为什么加注解可以实现，这个加载机制是怎么实现的，源码级别 11.为什么这个注解可以实现事务 12.那这个事务和数据库的事务有什么关联<br>acid，事务隔离级别 13.那你们当时项目选技术是怎么思考，比如 mybatis 用的什么连接池<br>用的 c3p0 14.那你知道有其他的连接池，各自有什么区别<br>c3p0、dbcp、druid 三大连接池对比 - wawa3338 的博客 - CSDN 博客 <a href="https://blog.csdn.net/wawa3338/article/details/81380662c3p0%EF%BC%8Cdbcp%E4%B8%8Edruid">https://blog.csdn.net/wawa3338/article/details/81380662c3p0，dbcp与druid</a> 三大连接池的区别 - 泡面之家 - CSDN 博客 <a href="https://blog.csdn.net/qq_34359363/article/details/72763491druid%E7%9A%84%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7%E3%80%81%E6%89%A9%E5%B1%95%E5%A5%BD%EF%BC%8C">https://blog.csdn.net/qq_34359363/article/details/72763491druid的功能强大、扩展好，</a> 15.那你感觉连接池的功能都有什么 1.资源重用 2.更快的系统响应速度 3.新的资源分配手段 4.统一的连接管理，避免数据库连接泄漏 16.项目大概几个人，开发的人，源码包大小多少<br>17.juc 看过哪些，说 AQS 的机制<br>18.Lock 如果给线程分配锁的<br>叭叭 ReentrantLock 19.公平锁和非公平锁的区别，源码级别<br>面试官补充：非公平锁就是抢占式的嘛 20.队列呢，了解什么<br>ArrayBlockQueue，LinkedBlockQueue 21.各个队列使用场景<br>22.queue 里面都有什么方法<br>offer，add，put 23.各个方法仔细讲讲，都会出现什么情况，添加的方法有什么，都有什么不同出队列呢，都有什么，跟 offer 对应的<br>24.jvm 看过什么、jvm 常用命令<br>25.jstat 的参数，比如看一个线程的回收情况，怎么看、其他的命令呢 26.动手去编译 JDK 源码<br>27.JVM 的类加载流程，到解析到字节码 28.如何去验证版本的冲突的，比如 jdk1.6 到 jdk1.7 29.初始化去怎么做的 30.实际运用中，ClassLoader 都有了解什么 31.如何实现一个动态加载、实现哪些方法 32.如何获取当前的 ClassLoader 33.那可以保持建立多个 ClassLoader 吗？ 34.为什么加载器加载出来的类不一样<br>35.jvm 内存模型 36.多线程如何实现主存同步的<br>缓存一致性扯一扯，Java 内存模型 37.那通过什么指令去实现其他工作内存无效的<br>38.Java 里怎么实现缓存一致性的<br>volatile、synchronized、lock、信号量、wait/notify<br>面试官补充：信号量也是加锁实现的<br>39.jvm 的锁优化有什么<br>说了 synchronized， 40.那还有其他编译器的锁优化吗，比如锁粗化<br>锁消除、、、、、 41.网络编程知道吗 42.创建 socket 的过程 43.从 server 端开始说吧，几个步骤 44.   accept 操作之后，然后呢 45.   怎么解析这个信息呢，输出到什么流里呢 46.互联网这块网络编程用的也挺多的，比如 rpc 框架什么的 47.    Java 里的 IO 这块你了解吗，区别<br>48.BIO、NIO、AIO 的对应类实现了解吗<br>49.shell 命令 50.进程通信方式<br>51.Linux 调度方式有什么<br>52.Linux 的缓存有几级<br>53.jdbc 连接 mysql 的几个步骤、为什么要加载驱动呢，原理是什么、PreparedStatement 和 Statement 区别、返回结果如何查询</p><p>准备 private static final URL、、、 也可以用 properties 从文件中读取。load()、1、首先注册驱动啊？怎么注册？反射啊，Class.forName(“xx.xx.xx.Driver”);底层怎么实现的？静态代码，DriverManager.registerDriver?启动的时候，会自动调用静态代码块的内容。2、接下来就是获取连接啊，怎么连接？远程连接(三次握手操作)，连接放哪里？作为资源必须放池子里。这样能提高性能。常见的连接池有 DBCP，C3P0，传说中最安全，性能最好的 Druid(国产)，而且还能监控。<br>3、你总的有 SQL 语句吧，之后就是 Statement 编译那。这里会出现 SQL 注入的安全问题。在语句后面加”1=1”成立。所以我们采用预编译的方式，PreparedStatement。可以防止这种问题的出现。<br>4、查完之后获取结果集。rs.getString().<br>5、头疼的来了，释放资源。各种 if(xx != nu) {try{ xx.close();}catch{}} 不用担心 JDK8 出来一个新特性，可以放在 try-withresource 中。还有各种异常可以采用通道的形式 XxxException | XxxException<br>6、各种异常需要你放到一个 try{}catch{}中，出问题你也不知道问题在哪里？麻烦吗？不用担心，我们可以封装成一个工具类，需要的时候调用工具类.getConnection();还是麻烦啊，可以用 Spring 框架为我们集成提供了 jdbcTemplate，HibernaterTemplate。用模板代码消除了大量的样板代码。&gt; 遍历结果集，叭叭</p><h4 id="10-29-三面：36-分钟左右"><a href="#10-29-三面：36-分钟左右" class="headerlink" title="10.29 三面：36 分钟左右"></a>10.29 三面：36 分钟左右</h4><p>1.说说 ArrayList 的源码各种方法吧，add，remove 一系列方法<br>2.MySQL 的聚簇索引 3.知道 SQL 注入吗、Java 里怎么防止的呢<br>4.Redis 和数据库的一致性 5.了解过什么开源的东西吗<br>Spring 6.那说说 AOP 吧<br>11.1 HR 面<br>11.5 offer</p><h3 id="面试资料"><a href="#面试资料" class="headerlink" title="面试资料"></a>面试资料</h3><p><a href="https://www.yuque.com/51cto/training/irbzty">https://www.yuque.com/51cto/training/irbzty</a><br><a href="https://www.yuque.com/51cto/training/hqrxuk">https://www.yuque.com/51cto/training/hqrxuk</a></p><h4 id="公众号"><a href="#公众号" class="headerlink" title="[公众号]"></a>[公众号]</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1585809350620-4f3202cd-5b96-4aa7-b221-496fc6f585bb.png#align=left&display=inline&height=89&name=image.png&originHeight=178&originWidth=184&size=36506&status=done&style=none&width=92" alt="image.png"> <img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1585809357634-799dd1e4-da08-49bf-89a6-e794ce05dd35.png#align=left&display=inline&height=89&name=image.png&originHeight=178&originWidth=184&size=36506&status=done&style=none&width=92" alt="image.png"></p><h4 id="免费领书"><a href="#免费领书" class="headerlink" title="[免费领书]"></a>[免费领书]</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/282505/1584851820695-9c904ca2-9522-4ca4-9caf-3070318e68f8.jpeg#align=left&display=inline&height=602&name=phone.JPG&originHeight=1204&originWidth=800&size=255342&status=done&style=none&width=400" alt="phone.JPG"><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/282505/1584851823672-61c2da8d-0d8a-4de4-9edf-9665174b828c.jpeg#align=left&display=inline&height=600&name=offer.JPG&originHeight=1200&originWidth=800&size=170500&status=done&style=none&width=400" alt="offer.JPG"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>面试经验</title>
      <link href="/2020/03/22/il73gx/"/>
      <url>/2020/03/22/il73gx/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>代码</title>
      <link href="/2020/03/15/ugxy0c/"/>
      <url>/2020/03/15/ugxy0c/</url>
      
        <content type="html"><![CDATA[<p>如果想在接口中新增一个方法，但又不想子类强制实现该方法时，可以给该方法加上 default 关键字，这个在实际工作中，也经常使用到，算是重构的小技巧吧。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>鸡汤</title>
      <link href="/2020/03/14/bfeage/"/>
      <url>/2020/03/14/bfeage/</url>
      
        <content type="html"><![CDATA[<p><strong>千学不如一看，千看不如一练。<br>**</strong>古之立大事者，不唯有超世之才，亦必有坚韧不拔之志。**</p><p><strong>一个不注意小事情的人，永远不会成功大事业。</strong></p><p><strong>今天应做的事没有做，明天再早也是耽误了。</strong><br>**<br>低头要有勇气，抬头要有底气。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>NIO</title>
      <link href="/2020/03/12/nio/"/>
      <url>/2020/03/12/nio/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据结构</title>
      <link href="/2020/03/12/nms3u7/"/>
      <url>/2020/03/12/nms3u7/</url>
      
        <content type="html"><![CDATA[<p>数据结构</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>缓存</title>
      <link href="/2020/03/12/cache/"/>
      <url>/2020/03/12/cache/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>微服务</title>
      <link href="/2020/03/12/microserv/"/>
      <url>/2020/03/12/microserv/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库</title>
      <link href="/2020/03/12/db/"/>
      <url>/2020/03/12/db/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>读书笔记</title>
      <link href="/2020/03/11/gumxz2/"/>
      <url>/2020/03/11/gumxz2/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>近期学习计划</title>
      <link href="/2020/03/11/eruyyn/"/>
      <url>/2020/03/11/eruyyn/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java培训资料-极客</title>
      <link href="/2020/03/11/irbzty/"/>
      <url>/2020/03/11/irbzty/</url>
      
        <content type="html"><![CDATA[<ol><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583930772255-42fb8217-48b4-44a9-a3c6-9cf5b3472026.png?x-oss-process=image/format,png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583930786821-4ddc4c81-f06f-4943-b57f-6d50461d5840.png?x-oss-process=image/format,png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583930803115-2aed0bd7-1b3e-464a-bca3-beb65363920f.png?x-oss-process=image/format,png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583930814456-dea20dd0-1d04-4c6a-a167-b0e30a3e657b.png?x-oss-process=image/format,png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583930825323-5f8477b2-b7c2-4631-a897-4000c1f995f8.png?x-oss-process=image/format,png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583930835682-1ea152bc-5f68-4754-ad6d-c3b62edd2008.png?x-oss-process=image/format,png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583931399979-9d0e6ae9-c737-4da4-971e-a0fd5ad10b9f.png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=934475&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583931470187-2751e30c-77f6-41da-8b9c-d057d178552e.png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=739999&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583931504816-7d516cfe-071a-4888-bf01-6e28d77f2a6f.png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=922821&status=done&style=none&width=360" alt="image.png"></p></li><li><p><a href="https://www.yuque.com/51cto/training/hqrxuk">https://www.yuque.com/51cto/training/hqrxuk</a></p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java培训资料-拉勾</title>
      <link href="/2020/03/11/hqrxuk/"/>
      <url>/2020/03/11/hqrxuk/</url>
      
        <content type="html"><![CDATA[<ul><li><p><a href="https://kaiwu.lagou.com/member/share?wxinfo=2&shareId=5ae64c163008a1c2e7730eb72a69267be6555d3b837055aca9ab3f6a729df09c">https://kaiwu.lagou.com/member/share?wxinfo=2&amp;shareId=5ae64c163008a1c2e7730eb72a69267be6555d3b837055aca9ab3f6a729df09c</a></p><p>领取后加我[吃瓜]确认无误奖励红包 🧧<br>或者微信扫描下面的二维码领取 VIP，免费看技术课程，并且有 10 元红包哦。截止到 24 点哈！！！</p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1597677025894-eb519783-243d-4aa7-99ed-66c0b565d0b3.png#align=left&display=inline&height=260&margin=%5Bobject%20Object%5D&name=%25E4%25BA%258C%25E7%25BB%25B4%25E7%25A0%2581%25E5%259B%25BE%25E7%2589%2587_8%25E6%259C%258817%25E6%2597%25A523%25E6%2597%25B609%25E5%2588%258659%25E7%25A7%2592.png&originHeight=260&originWidth=260&size=4297&status=done&style=none&width=260" alt="%E4%BA%8C%E7%BB%B4%E7%A0%81%E5%9B%BE%E7%89%87_8%E6%9C%8817%E6%97%A523%E6%97%B609%E5%88%8659%E7%A7%92.png"></p></li><li><p>或者微信扫描下面的二维码领取VIP，免费看技术课程，并且有10元红包哦。截止到24点哈！！！</p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1597677037906-95629b89-04f3-43a3-9632-405c570b503a.png#align=left&display=inline&height=260&margin=%5Bobject%20Object%5D&name=53287a329d61453d5e7fd069029f374e.png&originHeight=260&originWidth=260&size=2855&status=done&style=none&width=260" alt="53287a329d61453d5e7fd069029f374e.png"></p></li><li></li><li><p><strong>Java 面试(**</strong>一元羊毛*<strong>*)</strong></p></li><li><p><a href="https://t.lagou.com/mR63RmReR0609">https://t.lagou.com/mR63RmReR0609</a>** 1 元秒杀**｜开发必看：分布式技术一站式通关!从面试到实战，全面掌握分布式技术</p></li><li><p><strong><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1585734366339-8ec5639e-0249-4cd2-b094-774a07fc573c.png?x-oss-process=image/format,png#align=left&display=inline&height=640&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1280&originWidth=811&size=3117790&status=done&style=none&width=405.5" alt="image.png"></strong></p></li><li><p><strong><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1584571436392-59f01dd8-2aa8-4752-ad51-a5e3a168ae45.png#align=left&display=inline&height=640&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1280&originWidth=720&size=713538&status=done&style=none&width=360" alt="image.png"></strong></p></li></ul><ol><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583928112711-22c171bc-44c1-49f0-ab35-fbd545466441.png?x-oss-process=image/format,png#align=left&display=inline&height=640&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583928135117-db0e8722-8629-4353-b8a5-07433f68de4a.png?x-oss-process=image/format,png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583928154341-d22f4357-fa73-4b6d-b837-5b14be1a0890.png?x-oss-process=image/format,png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583928173651-224a98a6-8603-4d86-b953-c9e4ebccab73.png?x-oss-process=image/format,png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583928192212-55ce1e05-1d81-483e-b554-68d014886426.png?x-oss-process=image/format,png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583928204251-14f07d1a-bf6c-46f5-a59c-34b2470e9962.png?x-oss-process=image/format,png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583928214501-5c9069c7-b7ee-46cd-b89e-d0fe4c91b017.png?x-oss-process=image/format,png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583928234753-beac49a3-8e6e-47ac-98d8-7c912b13b78c.png?x-oss-process=image/format,png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583928254578-96cf7247-7930-420d-a006-d8cd231e4805.png?x-oss-process=image/format,png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583928264631-f90a6e2b-a532-453f-aa97-c98e0309035d.png?x-oss-process=image/format,png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/282505/1583928283635-64329903-de1e-4ee8-a257-6d6828f357cf.png?x-oss-process=image/format,png#align=left&display=inline&height=640&name=image.png&originHeight=1280&originWidth=720&size=2768326&status=done&style=none&width=360" alt="image.png"></p></li><li><p><a href="https://www.yuque.com/51cto/training/irbzty">https://www.yuque.com/51cto/training/irbzty</a></p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>读书笔记</title>
      <link href="/2020/03/11/chrh36/"/>
      <url>/2020/03/11/chrh36/</url>
      
        <content type="html"><![CDATA[<h4 id=""><a href="#" class="headerlink" title=""></a><img src="https://cdn.nlark.com/yuque/0/2019/png/215718/1567507815646-d739438a-8ffd-4107-9d87-130e2104446a.png#align=left&display=inline&height=232&name=image.png&originHeight=1553&originWidth=1080&size=367334&status=done&width=161" alt="image.png"></h4><p><em>插入封面图片，点击图片，设置图片大小</em></p><h4 id="关于本书"><a href="#关于本书" class="headerlink" title="关于本书"></a>关于本书</h4><p>插入「表格」</p><table><thead><tr><th><strong>书名</strong></th><th><a href="https://book.douban.com/subject/25944034/">《菊次郎与佐纪》</a></th><th><strong>作者</strong></th><th>北野武日本</th></tr></thead><tbody><tr><td><strong>出版社</strong></td><td>译林出版社</td><td><strong>阅读日期</strong></td><td>2019 年 2 月</td></tr><tr><td><strong>豆瓣评分</strong></td><td>8.1</td><td><strong>我的评分</strong></td><td>☆☆☆☆</td></tr></tbody></table><h4 id="内容简介"><a href="#内容简介" class="headerlink" title="内容简介"></a>内容简介</h4><p>在此处输入文本<br>你将读到的是北野武的出身、父母、兄弟和家庭的故事。<br>但请放心，这绝非一个自我感觉良好的人写的那种“优良课外读物”。<br>相反，北野武用搞笑到甚至刻薄方式描绘这些人和事，让我们在笑与泪的交织中，看到真情和真实，看到那么多情、柔软的心。</p><h4 id="书摘"><a href="#书摘" class="headerlink" title="书摘"></a>书摘</h4><p>在此处输入文本</p><ul><li>你将读到的是北野武的出身、父母、兄弟和家庭的故事。</li><li>但请放心，这绝非一个自我感觉良好的人写的那种“优良课外读物”。很喜欢这句 ← 方便打标签的状态卡片</li><li>相反，北野武用搞笑到甚至刻薄方式描绘这些人和事，让我们在笑与泪的交织中，看到真情和真实，看到那么多情、柔软的心。</li></ul><h4 id="读后感"><a href="#读后感" class="headerlink" title="读后感"></a>读后感</h4><p>在此处输入文本</p><ul><li>你将读到的是北野武的出身、父母、兄弟和家庭的故事。</li><li>但请放心，这绝非一个自我感觉良好的人写的那种“优良课外读物”。</li><li>相反，北野武用搞笑到甚至刻薄方式描绘这些人和事，让我们在笑与泪的交织中，看到真情和真实，看到那么多情、柔软的心。</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>学习计划</title>
      <link href="/2020/03/11/wrbzgy/"/>
      <url>/2020/03/11/wrbzgy/</url>
      
        <content type="html"><![CDATA[<h3 id="学习重点"><a href="#学习重点" class="headerlink" title="学习重点"></a>学习重点</h3><p><img src="https://cdn.nlark.com/yuque/0/2019/png/215718/1567514692551-49e3e165-3fab-4dd7-895e-4b7e9a57ec24.png#align=left&display=inline&height=25&name=image.png&originHeight=25&originWidth=25&size=1539&status=done&width=25" alt="image.png">插入「脑图」并进行编辑<br><img src="https://cdn.nlark.com/yuque/0/2019/png/215718/1567567603546-29ab2829-0200-4200-94a0-c2757113ac2c.png"></p><h3 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h3><h4 id="课堂-PPT"><a href="#课堂-PPT" class="headerlink" title="课堂 PPT"></a>课堂 PPT</h4><p><img src="https://cdn.nlark.com/yuque/0/2019/png/215718/1567514692551-49e3e165-3fab-4dd7-895e-4b7e9a57ec24.png#align=left&display=inline&height=25&name=image.png&originHeight=25&originWidth=25&size=1539&status=done&width=25" alt="image.png">嵌入「本地文件」，在文档中可预览此文件：</p><blockquote><p>脑图（XMind、Mind Manager、Mind Node）<br>设计文件（PhotoShop、Sketch、Axure)<br>办公文件（PDF、PPT、Word、Excel、Keynote、Pages、Numbers）</p></blockquote><h4 id="教学视频"><a href="#教学视频" class="headerlink" title="教学视频"></a>教学视频</h4><p><img src="https://cdn.nlark.com/yuque/0/2019/png/215718/1567514692551-49e3e165-3fab-4dd7-895e-4b7e9a57ec24.png#align=left&display=inline&height=25&name=image.png&originHeight=25&originWidth=25&size=1539&status=done&width=25" alt="image.png">嵌入「本地视频」或「在线视频」，如优酷及 Bilibili 视频：</p><iframe src="https://player.bilibili.com/player.html?aid=55895675" frameborder="no" allowfullscreen="true"></iframe><h4 id="阅读材料"><a href="#阅读材料" class="headerlink" title="阅读材料"></a>阅读材料</h4><p><img src="https://cdn.nlark.com/yuque/0/2019/png/215718/1567514692551-49e3e165-3fab-4dd7-895e-4b7e9a57ec24.png#align=left&display=inline&height=25&name=image.png&originHeight=25&originWidth=25&size=1539&status=done&width=25" alt="image.png">插入「附件」</p><p><a href="https://www.yuque.com/attachments/yuque/0/2019/pdf/105911/1570525820813-a79b3d0f-38cb-4a73-a2bb-ce8f091f2049.pdf?_lake_card=%7B%22uid%22:%22rc-upload-1567514495288-26%22,%22src%22:%22https://www.yuque.com/attachments/yuque/0/2019/pdf/105911/1570525820813-a79b3d0f-38cb-4a73-a2bb-ce8f091f2049.pdf%22,%22name%22:%22%E7%A4%BA%E4%BE%8BPDF.pdf%22,%22size%22:16189,%22type%22:%22application/pdf%22,%22ext%22:%22pdf%22,%22progress%22:%7B%22percent%22:0%7D,%22status%22:%22done%22,%22percent%22:0,%22id%22:%22wTSXR%22,%22refSrc%22:%22https://www.yuque.com/attachments/yuque/0/2019/pdf/105911/1569247460410-d74712f0-05ce-474b-b914-d76439248860.pdf%22,%22card%22:%22file%22%7D">示例 PDF.pdf</a></p><h3 id="学习计划"><a href="#学习计划" class="headerlink" title="学习计划"></a>学习计划</h3><p><img src="https://cdn.nlark.com/yuque/0/2019/png/215718/1567514692551-49e3e165-3fab-4dd7-895e-4b7e9a57ec24.png#align=left&display=inline&height=25&name=image.png&originHeight=25&originWidth=25&size=1539&status=done&width=25" alt="image.png">插入「表格」，可以在表格框里插入对应的图片、附件、状态</p><table><thead><tr><th align="center"><strong>书名</strong></th><th align="center"><strong>章节</strong></th><th align="center"><strong>计划阅读时间</strong></th><th align="center"><strong>进程</strong></th></tr></thead><tbody><tr><td align="center">《基础有机化学》</td><td align="center">第三章</td><td align="center">2h</td><td align="center">已完成</td></tr><tr><td align="center">《无机化学》</td><td align="center">第一章</td><td align="center">1h</td><td align="center">进行中</td></tr><tr><td align="center">《物理化学》</td><td align="center">第四章</td><td align="center">1h</td><td align="center">未开始</td></tr><tr><td align="center"><img src="https://cdn.nlark.com/yuque/0/2019/jpeg/105911/1571983625842-9d347225-731e-41e0-ab51-91a232a2db72.jpeg#align=left&display=inline&height=3264&name=alex-knight-2EJCSULRwC8-unsplash.jpg&originHeight=3264&originWidth=4896&size=1555309&status=done&width=4896" alt="alex-knight-2EJCSULRwC8-unsplash.jpg"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
